/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/using-the-api";
exports.ids = ["pages/using-the-api"];
exports.modules = {

/***/ "./node_modules/@swc/helpers/lib/_async_to_generator.js":
/*!**************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_async_to_generator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _asyncToGenerator;\n    }\n}));\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fYXN5bmNfdG9fZ2VuZXJhdG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkNBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19hc3luY190b19nZW5lcmF0b3IuanM/MGUzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICAgIHRyeSB7XG4gICAgICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICAgICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikge1xuICAgICAgICAgICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_async_to_generator.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_extends.js":
/*!***************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_extends.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _extends;\n    }\n}));\nfunction extends_() {\n    extends_ = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return extends_.apply(this, arguments);\n}\nfunction _extends() {\n    return extends_.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcz8zOThhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2V4dGVuZHM7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBleHRlbmRzXygpIHtcbiAgICBleHRlbmRzXyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgIGZvcih2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvcih2YXIga2V5IGluIHNvdXJjZSl7XG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9O1xuICAgIHJldHVybiBleHRlbmRzXy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gICAgcmV0dXJuIGV4dGVuZHNfLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_extends.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_default.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_default.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _interopRequireDefault;\n    }\n}));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzPzliN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_default.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_wildcard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_wildcard.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _interopRequireWildcard;\n    }\n}));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkNBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQuanM/MDUxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICAgIHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7XG4gICAgICAgIHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDtcbiAgICB9KShub2RlSW50ZXJvcCk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgICAgIH07XG4gICAgfVxuICAgIHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7XG4gICAgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7XG4gICAgICAgIHJldHVybiBjYWNoZS5nZXQob2JqKTtcbiAgICB9XG4gICAgdmFyIG5ld09iaiA9IHt9O1xuICAgIHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgICBmb3IodmFyIGtleSBpbiBvYmope1xuICAgICAgICBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDtcbiAgICAgICAgICAgIGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG5ld09iai5kZWZhdWx0ID0gb2JqO1xuICAgIGlmIChjYWNoZSkge1xuICAgICAgICBjYWNoZS5zZXQob2JqLCBuZXdPYmopO1xuICAgIH1cbiAgICByZXR1cm4gbmV3T2JqO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_object_without_properties_loose.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_object_without_properties_loose.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _objectWithoutPropertiesLoose;\n    }\n}));\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcz80Y2I5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2U7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gICAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gICAgdmFyIHRhcmdldCA9IHt9O1xuICAgIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgICB2YXIga2V5LCBpO1xuICAgIGZvcihpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspe1xuICAgICAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgICAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/add-base-path.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/add-base-path.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.addBasePath = addBasePath;\nvar _addPathPrefix = __webpack_require__(/*! ../shared/lib/router/utils/add-path-prefix */ \"../shared/lib/router/utils/add-path-prefix\");\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst basePath =  false || \"\";\nfunction addBasePath(path, required) {\n    if (false) {}\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash((0, _addPathPrefix).addPathPrefix(path, basePath));\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELG1CQUFtQixHQUFHRTtBQUN0QixJQUFJQyxpQkFBaUJDLG1CQUFPQSxDQUFDLDhGQUE0QztBQUN6RSxJQUFJQywwQkFBMEJELG1CQUFPQSxDQUFDLCtGQUE0QjtBQUNsRSxNQUFNRSxXQUFXQyxNQUFrQyxJQUFJO0FBQ3ZELFNBQVNMLFlBQVlRLElBQUksRUFBRUMsUUFBUSxFQUFFO0lBQ2pDLElBQUlKLEtBQTBDLEVBQUUsRUFJL0M7SUFDRCxPQUFPLENBQUMsR0FBR0YsdUJBQXVCLEVBQUVRLDBCQUEwQixDQUFDLENBQUMsR0FBR1YsY0FBYyxFQUFFVyxhQUFhLENBQUNKLE1BQU1KO0FBQzNHO0FBRUEsSUFBSSxDQUFDLE9BQU9OLFFBQVFlLE9BQU8sS0FBSyxjQUFlLE9BQU9mLFFBQVFlLE9BQU8sS0FBSyxZQUFZZixRQUFRZSxPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9mLFFBQVFlLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktsQixPQUFPQyxjQUFjLENBQUNDLFFBQVFlLE9BQU8sRUFBRSxjQUFjO1FBQUVkLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPbUIsTUFBTSxDQUFDakIsUUFBUWUsT0FBTyxFQUFFZjtJQUMvQmtCLE9BQU9sQixPQUFPLEdBQUdBLFFBQVFlLE9BQU87QUFDbEMsQ0FBQyxDQUVELHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1iYXNlLXBhdGguanM/NjEzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYWRkQmFzZVBhdGggPSBhZGRCYXNlUGF0aDtcbnZhciBfYWRkUGF0aFByZWZpeCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1wcmVmaXhcIik7XG52YXIgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiBhZGRCYXNlUGF0aChwYXRoLCByZXF1aXJlZCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfTUFOVUFMX0NMSUVOVF9CQVNFX1BBVEgpIHtcbiAgICAgICAgaWYgKCFyZXF1aXJlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICgwLCBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCkubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2goKDAsIF9hZGRQYXRoUHJlZml4KS5hZGRQYXRoUHJlZml4KHBhdGgsIGJhc2VQYXRoKSk7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1iYXNlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYWRkQmFzZVBhdGgiLCJfYWRkUGF0aFByZWZpeCIsInJlcXVpcmUiLCJfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwicmVxdWlyZWQiLCJfX05FWFRfTUFOVUFMX0NMSUVOVF9CQVNFX1BBVEgiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImFkZFBhdGhQcmVmaXgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/add-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/add-locale.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/client/add-locale.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.addLocale = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst addLocale = (path, ...args)=>{\n    if (false) {}\n    return path;\n};\nexports.addLocale = addLocale;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtbG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELGlCQUFpQixHQUFHLEtBQUs7QUFDekIsSUFBSUcsMEJBQTBCQyxtQkFBT0EsQ0FBQywrRkFBNEI7QUFDbEUsTUFBTUYsWUFBWSxDQUFDRyxNQUFNLEdBQUdDLE9BQU87SUFDL0IsSUFBSUMsS0FBK0IsRUFBRSxFQUVwQztJQUNELE9BQU9GO0FBQ1g7QUFDQUwsaUJBQWlCLEdBQUdFO0FBRXBCLElBQUksQ0FBQyxPQUFPRixRQUFRVyxPQUFPLEtBQUssY0FBZSxPQUFPWCxRQUFRVyxPQUFPLEtBQUssWUFBWVgsUUFBUVcsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPWCxRQUFRVyxPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLZCxPQUFPQyxjQUFjLENBQUNDLFFBQVFXLE9BQU8sRUFBRSxjQUFjO1FBQUVWLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPZSxNQUFNLENBQUNiLFFBQVFXLE9BQU8sRUFBRVg7SUFDL0JjLE9BQU9kLE9BQU8sR0FBR0EsUUFBUVcsT0FBTztBQUNsQyxDQUFDLENBRUQsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvYWRkLWxvY2FsZS5qcz9lMmQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hZGRMb2NhbGUgPSB2b2lkIDA7XG52YXIgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBhZGRMb2NhbGUgPSAocGF0aCwgLi4uYXJncyk9PntcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICByZXR1cm4gKDAsIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoKS5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaChyZXF1aXJlKCcuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlJykuYWRkTG9jYWxlKHBhdGgsIC4uLmFyZ3MpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuZXhwb3J0cy5hZGRMb2NhbGUgPSBhZGRMb2NhbGU7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYWRkTG9jYWxlIiwiX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2giLCJyZXF1aXJlIiwicGF0aCIsImFyZ3MiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/add-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/detect-domain-locale.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/client/detect-domain-locale.js ***!
  \***************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectDomainLocale = void 0;\nconst detectDomainLocale = (...args)=>{\n    if (false) {}\n};\nexports.detectDomainLocale = detectDomainLocale;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCwwQkFBMEIsR0FBRyxLQUFLO0FBQ2xDLE1BQU1FLHFCQUFxQixDQUFDLEdBQUdDLE9BQU87SUFDbEMsSUFBSUMsS0FBK0IsRUFBRSxFQUVwQztBQUNMO0FBQ0FKLDBCQUEwQixHQUFHRTtBQUU3QixJQUFJLENBQUMsT0FBT0YsUUFBUVEsT0FBTyxLQUFLLGNBQWUsT0FBT1IsUUFBUVEsT0FBTyxLQUFLLFlBQVlSLFFBQVFRLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT1IsUUFBUVEsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS1gsT0FBT0MsY0FBYyxDQUFDQyxRQUFRUSxPQUFPLEVBQUUsY0FBYztRQUFFUCxPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT1ksTUFBTSxDQUFDVixRQUFRUSxPQUFPLEVBQUVSO0lBQy9CVyxPQUFPWCxPQUFPLEdBQUdBLFFBQVFRLE9BQU87QUFDbEMsQ0FBQyxDQUVELGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2RldGVjdC1kb21haW4tbG9jYWxlLmpzPzAzYjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRldGVjdERvbWFpbkxvY2FsZSA9IHZvaWQgMDtcbmNvbnN0IGRldGVjdERvbWFpbkxvY2FsZSA9ICguLi5hcmdzKT0+e1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKCcuLi9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUnKS5kZXRlY3REb21haW5Mb2NhbGUoLi4uYXJncyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGV0ZWN0RG9tYWluTG9jYWxlID0gZGV0ZWN0RG9tYWluTG9jYWxlO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJhcmdzIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJyZXF1aXJlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/detect-domain-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCx1QkFBdUIsR0FBR0U7QUFDMUIsTUFBTUMsV0FBV0MsTUFBa0MsSUFBSTtBQUN2RCxTQUFTRixnQkFBZ0JLLElBQUksRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsRUFBRTtJQUMzRCxJQUFJTixLQUErQixFQUFFLEVBV3BDLE1BQU07UUFDSCxPQUFPLEtBQUs7SUFDaEIsQ0FBQztBQUNMO0FBRUEsSUFBSSxDQUFDLE9BQU9KLFFBQVF1QixPQUFPLEtBQUssY0FBZSxPQUFPdkIsUUFBUXVCLE9BQU8sS0FBSyxZQUFZdkIsUUFBUXVCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT3ZCLFFBQVF1QixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLMUIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRdUIsT0FBTyxFQUFFLGNBQWM7UUFBRXRCLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPMkIsTUFBTSxDQUFDekIsUUFBUXVCLE9BQU8sRUFBRXZCO0lBQy9CMEIsT0FBTzFCLE9BQU8sR0FBR0EsUUFBUXVCLE9BQU87QUFDbEMsQ0FBQyxDQUVELDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2dldC1kb21haW4tbG9jYWxlLmpzPzVjMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldERvbWFpbkxvY2FsZSA9IGdldERvbWFpbkxvY2FsZTtcbmNvbnN0IGJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCAnJztcbmZ1bmN0aW9uIGdldERvbWFpbkxvY2FsZShwYXRoLCBsb2NhbGUsIGxvY2FsZXMsIGRvbWFpbkxvY2FsZXMpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICBjb25zdCBub3JtYWxpemVMb2NhbGVQYXRoID0gcmVxdWlyZSgnLi9ub3JtYWxpemUtbG9jYWxlLXBhdGgnKS5ub3JtYWxpemVMb2NhbGVQYXRoO1xuICAgICAgICBjb25zdCBkZXRlY3REb21haW5Mb2NhbGUgPSByZXF1aXJlKCcuL2RldGVjdC1kb21haW4tbG9jYWxlJykuZGV0ZWN0RG9tYWluTG9jYWxlO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBsb2NhbGUgfHwgbm9ybWFsaXplTG9jYWxlUGF0aChwYXRoLCBsb2NhbGVzKS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgY29uc3QgZG9tYWluID0gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgdGFyZ2V0KTtcbiAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgY29uc3QgcHJvdG8gPSBgaHR0cCR7ZG9tYWluLmh0dHAgPyAnJyA6ICdzJ306Ly9gO1xuICAgICAgICAgICAgY29uc3QgZmluYWxMb2NhbGUgPSB0YXJnZXQgPT09IGRvbWFpbi5kZWZhdWx0TG9jYWxlID8gJycgOiBgLyR7dGFyZ2V0fWA7XG4gICAgICAgICAgICByZXR1cm4gYCR7cHJvdG99JHtkb21haW4uZG9tYWlufSR7YmFzZVBhdGh9JHtmaW5hbExvY2FsZX0ke3BhdGh9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWRvbWFpbi1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0RG9tYWluTG9jYWxlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJsb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVxdWlyZSIsImRldGVjdERvbWFpbkxvY2FsZSIsInRhcmdldCIsImRldGVjdGVkTG9jYWxlIiwiZG9tYWluIiwidW5kZWZpbmVkIiwicHJvdG8iLCJodHRwIiwiZmluYWxMb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/get-domain-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/has-base-path.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/has-base-path.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.hasBasePath = hasBasePath;\nvar _pathHasPrefix = __webpack_require__(/*! ../shared/lib/router/utils/path-has-prefix */ \"../shared/lib/router/utils/path-has-prefix\");\nconst basePath =  false || \"\";\nfunction hasBasePath(path) {\n    return (0, _pathHasPrefix).pathHasPrefix(path, basePath);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=has-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oYXMtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELG1CQUFtQixHQUFHRTtBQUN0QixJQUFJQyxpQkFBaUJDLG1CQUFPQSxDQUFDLDhGQUE0QztBQUN6RSxNQUFNQyxXQUFXQyxNQUFrQyxJQUFJO0FBQ3ZELFNBQVNKLFlBQVlPLElBQUksRUFBRTtJQUN2QixPQUFPLENBQUMsR0FBR04sY0FBYyxFQUFFTyxhQUFhLENBQUNELE1BQU1KO0FBQ25EO0FBRUEsSUFBSSxDQUFDLE9BQU9MLFFBQVFXLE9BQU8sS0FBSyxjQUFlLE9BQU9YLFFBQVFXLE9BQU8sS0FBSyxZQUFZWCxRQUFRVyxPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9YLFFBQVFXLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktkLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUVcsT0FBTyxFQUFFLGNBQWM7UUFBRVYsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9lLE1BQU0sQ0FBQ2IsUUFBUVcsT0FBTyxFQUFFWDtJQUMvQmMsT0FBT2QsT0FBTyxHQUFHQSxRQUFRVyxPQUFPO0FBQ2xDLENBQUMsQ0FFRCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oYXMtYmFzZS1wYXRoLmpzPzVhNDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmhhc0Jhc2VQYXRoID0gaGFzQmFzZVBhdGg7XG52YXIgX3BhdGhIYXNQcmVmaXggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4XCIpO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8ICcnO1xuZnVuY3Rpb24gaGFzQmFzZVBhdGgocGF0aCkge1xuICAgIHJldHVybiAoMCwgX3BhdGhIYXNQcmVmaXgpLnBhdGhIYXNQcmVmaXgocGF0aCwgYmFzZVBhdGgpO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXMtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhhc0Jhc2VQYXRoIiwiX3BhdGhIYXNQcmVmaXgiLCJyZXF1aXJlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJwYXRoSGFzUHJlZml4IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/has-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/head-manager.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/head-manager.js ***!
  \*******************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = initHeadManager;\nexports.isEqualNode = isEqualNode;\nexports.DOMAttributeNames = void 0;\nfunction initHeadManager() {\n    return {\n        mountedInstances: new Set(),\n        updateHead: (head)=>{\n            const tags = {};\n            head.forEach((h)=>{\n                if (// it won't be inlined. In this case revert to the original behavior\n                h.type === \"link\" && h.props[\"data-optimized-fonts\"]) {\n                    if (document.querySelector(`style[data-href=\"${h.props[\"data-href\"]}\"]`)) {\n                        return;\n                    } else {\n                        h.props.href = h.props[\"data-href\"];\n                        h.props[\"data-href\"] = undefined;\n                    }\n                }\n                const components = tags[h.type] || [];\n                components.push(h);\n                tags[h.type] = components;\n            });\n            const titleComponent = tags.title ? tags.title[0] : null;\n            let title = \"\";\n            if (titleComponent) {\n                const { children  } = titleComponent.props;\n                title = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n            }\n            if (title !== document.title) document.title = title;\n            [\n                \"meta\",\n                \"base\",\n                \"link\",\n                \"style\",\n                \"script\"\n            ].forEach((type)=>{\n                updateElements(type, tags[type] || []);\n            });\n        }\n    };\n}\nconst DOMAttributeNames = {\n    acceptCharset: \"accept-charset\",\n    className: \"class\",\n    htmlFor: \"for\",\n    httpEquiv: \"http-equiv\",\n    noModule: \"noModule\"\n};\nexports.DOMAttributeNames = DOMAttributeNames;\nfunction reactElementToDOM({ type , props  }) {\n    const el = document.createElement(type);\n    for(const p in props){\n        if (!props.hasOwnProperty(p)) continue;\n        if (p === \"children\" || p === \"dangerouslySetInnerHTML\") continue;\n        // we don't render undefined props to the DOM\n        if (props[p] === undefined) continue;\n        const attr = DOMAttributeNames[p] || p.toLowerCase();\n        if (type === \"script\" && (attr === \"async\" || attr === \"defer\" || attr === \"noModule\")) {\n            el[attr] = !!props[p];\n        } else {\n            el.setAttribute(attr, props[p]);\n        }\n    }\n    const { children , dangerouslySetInnerHTML  } = props;\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    }\n    return el;\n}\nfunction isEqualNode(oldTag, newTag) {\n    if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n        const nonce = newTag.getAttribute(\"nonce\");\n        // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n        // be stripped if there is no content security policy response header that includes a nonce.\n        if (nonce && !oldTag.getAttribute(\"nonce\")) {\n            const cloneTag = newTag.cloneNode(true);\n            cloneTag.setAttribute(\"nonce\", \"\");\n            cloneTag.nonce = nonce;\n            return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);\n        }\n    }\n    return oldTag.isEqualNode(newTag);\n}\nfunction updateElements(type, components) {\n    const headEl = document.getElementsByTagName(\"head\")[0];\n    const headCountEl = headEl.querySelector(\"meta[name=next-head-count]\");\n    if (true) {\n        if (!headCountEl) {\n            console.error(\"Warning: next-head-count is missing. https://nextjs.org/docs/messages/next-head-count-missing\");\n            return;\n        }\n    }\n    const headCount = Number(headCountEl.content);\n    const oldTags = [];\n    for(let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null){\n        var ref;\n        if ((j == null ? void 0 : (ref = j.tagName) == null ? void 0 : ref.toLowerCase()) === type) {\n            oldTags.push(j);\n        }\n    }\n    const newTags = components.map(reactElementToDOM).filter((newTag)=>{\n        for(let k = 0, len = oldTags.length; k < len; k++){\n            const oldTag = oldTags[k];\n            if (isEqualNode(oldTag, newTag)) {\n                oldTags.splice(k, 1);\n                return false;\n            }\n        }\n        return true;\n    });\n    oldTags.forEach((t)=>{\n        var ref;\n        return (ref = t.parentNode) == null ? void 0 : ref.removeChild(t);\n    });\n    newTags.forEach((t)=>headEl.insertBefore(t, headCountEl));\n    headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/head-manager.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/image.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/client/image.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _head = _interop_require_default(__webpack_require__(/*! ../shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\"));\nvar _imageBlurSvg = __webpack_require__(/*! ../shared/lib/image-blur-svg */ \"../shared/lib/image-blur-svg\");\nvar _imageConfig = __webpack_require__(/*! ../shared/lib/image-config */ \"../shared/lib/image-config\");\nvar _imageConfigContext = __webpack_require__(/*! ../shared/lib/image-config-context */ \"../shared/lib/image-config-context\");\nvar _warnOnce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"./utils/warn-once\");\nvar _imageLoader = _interop_require_default(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"next/dist/shared/lib/image-loader\"));\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]};\nconst allImgs = new Map();\nlet perfObserver;\nif (true) {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths({ deviceSizes , allSizes  }, width, sizes) {\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs({ config , src , unoptimized , width , quality , sizes , loader  }) {\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>`${loader({\n                config,\n                src,\n                quality,\n                width: w\n            })} ${kind === \"w\" ? w : i + 1}${kind}`).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"number\" || typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentNode) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current(_extends({}, event, {\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            }));\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`);\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(\",\")}.`);\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n            }\n        }\n    });\n}\nconst ImageElement = /*#__PURE__*/ (0, _react).forwardRef((_param, forwardedRef)=>{\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadRef\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\"\n    ]);\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading,\n        style: _extends({}, imgStyle, blurStyle),\n        ref: (0, _react).useCallback((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!srcString) {\n                    console.error(`Image is missing required \"src\" property:`, img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error(`Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`);\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })));\n});\nconst Image = /*#__PURE__*/ (0, _react).forwardRef((_param, forwardedRef)=>{\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder =\"empty\" , blurDataURL , layout , objectFit , objectPosition , lazyBoundary , lazyRoot  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoad\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\",\n        \"layout\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"lazyBoundary\",\n        \"lazyRoot\"\n    ]);\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageLoader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error(`Image with src \"${src}\" is missing \"loader\" prop.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`);\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        var _tmp;\n        _tmp = (obj)=>{\n            const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                \"config\"\n            ]);\n            return customImageLoader(opts);\n        }, loader = _tmp, _tmp;\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = _extends({}, style, layoutStyle);\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n                }\n                if (height) {\n                    throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n                } else if (isNaN(widthInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n                } else if (isNaN(heightInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(\",\")}.`);\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n        }\n        if (placeholder === \"blur\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\",\")}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _warnOnce).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n        }\n        if (!unoptimized && loader !== _imageLoader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n            }\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` + `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`);\n            }\n        }\n        if (false) {}\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage: `url(\"data:image/svg+xml;charset=utf-8,${(0, _imageBlurSvg).getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL\n        })}\")`\n    } : {};\n    if (true) {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = `url(\"${blurDataURL}\")`;\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (true) {\n        if (false) {}\n    }\n    const linkProps = {\n        // @ts-expect-error upgrade react types to react 18\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin\n    };\n    const onLoadRef = (0, _react).useRef(onLoad);\n    (0, _react).useEffect(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs, {\n        ref: forwardedRef\n    })), priority ? // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src\n    }, linkProps))) : null);\n});\nvar _default = Image;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/image.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _formatUrl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"../shared/lib/router/utils/format-url\");\nvar _addLocale = __webpack_require__(/*! ./add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _appRouterContext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"../shared/lib/app-router-context\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nvar _getDomainLocale = __webpack_require__(/*! ./get-domain-locale */ \"./node_modules/next/dist/client/get-domain-locale.js\");\nvar _addBasePath = __webpack_require__(/*! ./add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options) {\n    if (true) {\n        return;\n    }\n    if (!(0, _router).isLocalURL(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(router.prefetch(href, as, options)).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        // @ts-expect-error startTransition exists.\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formatUrl).formatUrl(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n    if (true) {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : \"\"));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter: onMouseEnterProp , onTouchStart: onTouchStartProp , legacyBehavior =true === false  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const prefetchEnabled = prefetchProp !== false;\n    const pagesRouter = _react.default.useContext(_routerContext.RouterContext);\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(`Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`);\n                }\n            }\n        }\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n            }\n            if (onMouseEnterProp) {\n                console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n                }\n                throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : \"\"));\n            }\n        } else {}\n    } else {\n        if (true) {\n            var ref;\n            if (((ref = children) == null ? void 0 : ref.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        });\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getDomainLocale).getDomainLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.normalizePathTrailingSlash = void 0;\nvar _removeTrailingSlash = __webpack_require__(/*! ../shared/lib/router/utils/remove-trailing-slash */ \"../shared/lib/router/utils/remove-trailing-slash\");\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nconst normalizePathTrailingSlash = (path)=>{\n    if (!path.startsWith(\"/\") || undefined) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsePath).parsePath(path);\n    if (false) {}\n    return `${(0, _removeTrailingSlash).removeTrailingSlash(pathname)}${query}${hash}`;\n};\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsa0NBQWtDLEdBQUcsS0FBSztBQUMxQyxJQUFJRyx1QkFBdUJDLG1CQUFPQSxDQUFDLDBHQUFrRDtBQUNyRixJQUFJQyxhQUFhRCxtQkFBT0EsQ0FBQyxvRkFBdUM7QUFDaEUsTUFBTUYsNkJBQTZCLENBQUNJLE9BQU87SUFDdkMsSUFBSSxDQUFDQSxLQUFLQyxVQUFVLENBQUMsUUFBUUMsU0FBd0MsRUFBRTtRQUNuRSxPQUFPRjtJQUNYLENBQUM7SUFDRCxNQUFNLEVBQUVLLFNBQVEsRUFBR0MsTUFBSyxFQUFHQyxLQUFJLEVBQUcsR0FBRyxDQUFDLEdBQUdSLFVBQVUsRUFBRVMsU0FBUyxDQUFDUjtJQUMvRCxJQUFJRSxLQUFpQyxFQUFFLEVBUXRDO0lBQ0QsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHTCxvQkFBb0IsRUFBRWMsbUJBQW1CLENBQUNOLFVBQVUsRUFBRUMsTUFBTSxFQUFFQyxLQUFLLENBQUM7QUFDdEY7QUFDQWIsa0NBQWtDLEdBQUdFO0FBRXJDLElBQUksQ0FBQyxPQUFPRixRQUFRbUIsT0FBTyxLQUFLLGNBQWUsT0FBT25CLFFBQVFtQixPQUFPLEtBQUssWUFBWW5CLFFBQVFtQixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9uQixRQUFRbUIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS3RCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUW1CLE9BQU8sRUFBRSxjQUFjO1FBQUVsQixPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT3VCLE1BQU0sQ0FBQ3JCLFFBQVFtQixPQUFPLEVBQUVuQjtJQUMvQnNCLE9BQU90QixPQUFPLEdBQUdBLFFBQVFtQixPQUFPO0FBQ2xDLENBQUMsQ0FFRCxvREFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG52YXIgX3JlbW92ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9wYXJzZVBhdGggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aFwiKTtcbmNvbnN0IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gKHBhdGgpPT57XG4gICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoJy8nKSB8fCBwcm9jZXNzLmVudi5fX05FWFRfTUFOVUFMX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgLCBoYXNoICB9ID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChwYXRoKTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRobmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHsoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSBpZiAocGF0aG5hbWUuZW5kc1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGAke3BhdGhuYW1lfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7cGF0aG5hbWV9LyR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGAkeygwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSl9JHtxdWVyeX0ke2hhc2h9YDtcbn07XG5leHBvcnRzLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2g7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsIl9yZW1vdmVUcmFpbGluZ1NsYXNoIiwicmVxdWlyZSIsIl9wYXJzZVBhdGgiLCJwYXRoIiwic3RhcnRzV2l0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfTUFOVUFMX1RSQUlMSU5HX1NMQVNIIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giLCJwYXJzZVBhdGgiLCJfX05FWFRfVFJBSUxJTkdfU0xBU0giLCJ0ZXN0IiwicmVtb3ZlVHJhaWxpbmdTbGFzaCIsImVuZHNXaXRoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/remove-base-path.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/remove-base-path.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeBasePath = removeBasePath;\nvar _hasBasePath = __webpack_require__(/*! ./has-base-path */ \"./node_modules/next/dist/client/has-base-path.js\");\nconst basePath =  false || \"\";\nfunction removeBasePath(path) {\n    if (false) {}\n    path = path.slice(basePath.length);\n    if (!path.startsWith(\"/\")) path = `/${path}`;\n    return path;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=remove-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZW1vdmUtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELHNCQUFzQixHQUFHRTtBQUN6QixJQUFJQyxlQUFlQyxtQkFBT0EsQ0FBQyx5RUFBaUI7QUFDNUMsTUFBTUMsV0FBV0MsTUFBa0MsSUFBSTtBQUN2RCxTQUFTSixlQUFlTyxJQUFJLEVBQUU7SUFDMUIsSUFBSUgsS0FBMEMsRUFBRSxFQUkvQztJQUNERyxPQUFPQSxLQUFLRyxLQUFLLENBQUNQLFNBQVNRLE1BQU07SUFDakMsSUFBSSxDQUFDSixLQUFLSyxVQUFVLENBQUMsTUFBTUwsT0FBTyxDQUFDLENBQUMsRUFBRUEsS0FBSyxDQUFDO0lBQzVDLE9BQU9BO0FBQ1g7QUFFQSxJQUFJLENBQUMsT0FBT1QsUUFBUWUsT0FBTyxLQUFLLGNBQWUsT0FBT2YsUUFBUWUsT0FBTyxLQUFLLFlBQVlmLFFBQVFlLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2YsUUFBUWUsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS2xCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUWUsT0FBTyxFQUFFLGNBQWM7UUFBRWQsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9tQixNQUFNLENBQUNqQixRQUFRZSxPQUFPLEVBQUVmO0lBQy9Ca0IsT0FBT2xCLE9BQU8sR0FBR0EsUUFBUWUsT0FBTztBQUNsQyxDQUFDLENBRUQsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWJhc2UtcGF0aC5qcz9iNGYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVCYXNlUGF0aCA9IHJlbW92ZUJhc2VQYXRoO1xudmFyIF9oYXNCYXNlUGF0aCA9IHJlcXVpcmUoXCIuL2hhcy1iYXNlLXBhdGhcIik7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiByZW1vdmVCYXNlUGF0aChwYXRoKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9NQU5VQUxfQ0xJRU5UX0JBU0VfUEFUSCkge1xuICAgICAgICBpZiAoISgwLCBfaGFzQmFzZVBhdGgpLmhhc0Jhc2VQYXRoKHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwYXRoID0gcGF0aC5zbGljZShiYXNlUGF0aC5sZW5ndGgpO1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKCcvJykpIHBhdGggPSBgLyR7cGF0aH1gO1xuICAgIHJldHVybiBwYXRoO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJlbW92ZUJhc2VQYXRoIiwiX2hhc0Jhc2VQYXRoIiwicmVxdWlyZSIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwiX19ORVhUX01BTlVBTF9DTElFTlRfQkFTRV9QQVRIIiwiaGFzQmFzZVBhdGgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/remove-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/remove-locale.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/remove-locale.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeLocale = removeLocale;\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nfunction removeLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=remove-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZW1vdmUtbG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQixHQUFHRTtBQUN2QixJQUFJQyxhQUFhQyxtQkFBT0EsQ0FBQyxvRkFBdUM7QUFDaEUsU0FBU0YsYUFBYUcsSUFBSSxFQUFFQyxNQUFNLEVBQUU7SUFDaEMsSUFBSUMsS0FBK0IsRUFBRSxFQUtwQztJQUNELE9BQU9GO0FBQ1g7QUFFQSxJQUFJLENBQUMsT0FBT0wsUUFBUWtCLE9BQU8sS0FBSyxjQUFlLE9BQU9sQixRQUFRa0IsT0FBTyxLQUFLLFlBQVlsQixRQUFRa0IsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPbEIsUUFBUWtCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktyQixPQUFPQyxjQUFjLENBQUNDLFFBQVFrQixPQUFPLEVBQUUsY0FBYztRQUFFakIsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9zQixNQUFNLENBQUNwQixRQUFRa0IsT0FBTyxFQUFFbEI7SUFDL0JxQixPQUFPckIsT0FBTyxHQUFHQSxRQUFRa0IsT0FBTztBQUNsQyxDQUFDLENBRUQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWxvY2FsZS5qcz80NzUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVMb2NhbGUgPSByZW1vdmVMb2NhbGU7XG52YXIgX3BhcnNlUGF0aCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS1wYXRoXCIpO1xuZnVuY3Rpb24gcmVtb3ZlTG9jYWxlKHBhdGgsIGxvY2FsZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IHsgcGF0aG5hbWUgIH0gPSAoMCwgX3BhcnNlUGF0aCkucGFyc2VQYXRoKHBhdGgpO1xuICAgICAgICBjb25zdCBwYXRoTG93ZXIgPSBwYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBsb2NhbGVMb3dlciA9IGxvY2FsZSA9PSBudWxsID8gdm9pZCAwIDogbG9jYWxlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHJldHVybiBsb2NhbGUgJiYgKHBhdGhMb3dlci5zdGFydHNXaXRoKGAvJHtsb2NhbGVMb3dlcn0vYCkgfHwgcGF0aExvd2VyID09PSBgLyR7bG9jYWxlTG93ZXJ9YCkgPyBgJHtwYXRobmFtZS5sZW5ndGggPT09IGxvY2FsZS5sZW5ndGggKyAxID8gYC9gIDogYGB9JHtwYXRoLnNsaWNlKGxvY2FsZS5sZW5ndGggKyAxKX1gIDogcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92ZS1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlTG9jYWxlIiwiX3BhcnNlUGF0aCIsInJlcXVpcmUiLCJwYXRoIiwibG9jYWxlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJwYXRobmFtZSIsInBhcnNlUGF0aCIsInBhdGhMb3dlciIsInRvTG93ZXJDYXNlIiwibG9jYWxlTG93ZXIiLCJzdGFydHNXaXRoIiwibGVuZ3RoIiwic2xpY2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/remove-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return self.setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsMEJBQTBCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDaEUsTUFBTUcsc0JBQXNCLE9BQU9DLFNBQVMsZUFBZUEsS0FBS0QsbUJBQW1CLElBQUlDLEtBQUtELG1CQUFtQixDQUFDRSxJQUFJLENBQUNDLFdBQVcsU0FBU0MsRUFBRSxFQUFFO0lBQ3pJLElBQUlDLFFBQVFDLEtBQUtDLEdBQUc7SUFDcEIsT0FBT04sS0FBS08sVUFBVSxDQUFDLFdBQVc7UUFDOUJKLEdBQUc7WUFDQ0ssWUFBWSxLQUFLO1lBQ2pCQyxlQUFlLFdBQVc7Z0JBQ3RCLE9BQU9DLEtBQUtDLEdBQUcsQ0FBQyxHQUFHLEtBQU1OLENBQUFBLEtBQUtDLEdBQUcsS0FBS0YsS0FBSTtZQUM5QztRQUNKO0lBQ0osR0FBRztBQUNQO0FBQ0FSLDJCQUEyQixHQUFHRztBQUM5QixNQUFNRCxxQkFBcUIsT0FBT0UsU0FBUyxlQUFlQSxLQUFLRixrQkFBa0IsSUFBSUUsS0FBS0Ysa0JBQWtCLENBQUNHLElBQUksQ0FBQ0MsV0FBVyxTQUFTVSxFQUFFLEVBQUU7SUFDdEksT0FBT0MsYUFBYUQ7QUFDeEI7QUFDQWhCLDBCQUEwQixHQUFHRTtBQUU3QixJQUFJLENBQUMsT0FBT0YsUUFBUWtCLE9BQU8sS0FBSyxjQUFlLE9BQU9sQixRQUFRa0IsT0FBTyxLQUFLLFlBQVlsQixRQUFRa0IsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPbEIsUUFBUWtCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktyQixPQUFPQyxjQUFjLENBQUNDLFFBQVFrQixPQUFPLEVBQUUsY0FBYztRQUFFakIsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9zQixNQUFNLENBQUNwQixRQUFRa0IsT0FBTyxFQUFFbEI7SUFDL0JxQixPQUFPckIsT0FBTyxHQUFHQSxRQUFRa0IsT0FBTztBQUNsQyxDQUFDLENBRUQsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzPzFlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNhbmNlbElkbGVDYWxsYmFjayA9IGV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHZvaWQgMDtcbmNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjay5iaW5kKHdpbmRvdykgfHwgZnVuY3Rpb24oY2IpIHtcbiAgICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgIHJldHVybiBzZWxmLnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNiKHtcbiAgICAgICAgICAgIGRpZFRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIDUwIC0gKERhdGUubm93KCkgLSBzdGFydCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCAxKTtcbn07XG5leHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuY29uc3QgY2FuY2VsSWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gY2FuY2VsSWRsZUNhbGxiYWNrO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNlbGYiLCJiaW5kIiwid2luZG93IiwiY2IiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJNYXRoIiwibWF4IiwiaWQiLCJjbGVhclRpbWVvdXQiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _getAssetPathFromRoute = _interop_require_default(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _trustedTypes = __webpack_require__(/*! ./trusted-types */ \"./node_modules/next/dist/client/trusted-types.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if (\"future\" in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nconst ASSET_LOAD_ERROR = Symbol(\"ASSET_LOAD_ERROR\");\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement(\"link\");\n        return(// with relList.support\n        !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports(\"prefetch\"));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((resolve, reject)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return resolve();\n        }\n        link = document.createElement(\"link\");\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = resolve;\n        link.onerror = ()=>reject(markAssetError(new Error(`Failed to prefetch: ${href}`)));\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement(\"script\");\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)));\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms));\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client build manifest\")));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        const scriptUrl = assetPrefix + \"/_next/static/chunks/pages\" + encodeURI((0, _getAssetPathFromRoute).default(route, \".js\"));\n        return Promise.resolve({\n            scripts: [\n                (0, _trustedTypes).__unsafeCreateTrustedScriptURL(scriptUrl)\n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + \"/_next/\" + encodeURI(entry));\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith(\".js\")).map((v)=>(0, _trustedTypes).__unsafeCreateTrustedScriptURL(v)),\n            css: allFiles.filter((v)=>v.endsWith(\".css\"))\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                }));\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route, execute) {\n            (execute ? Promise.resolve().then(()=>execute()).then((exports1)=>({\n                    component: exports1 && exports1.default || exports1,\n                    exports: exports1\n                }), (err)=>({\n                    error: err\n                })) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route);\n                if (old && \"resolve\" in old) {\n                    if (input) {\n                        entrypoints.set(route, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route, input);\n                    } else {\n                        entrypoints.delete(route);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route);\n                }\n            });\n        },\n        loadRoute (route, prefetch) {\n            return withFuture(route, routes, ()=>{\n                let devBuildPromiseResolve;\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        devBuildPromiseResolve = resolve;\n                    });\n                }\n                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet))\n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        }));\n                }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return \"error\" in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                }).finally(()=>{\n                    return devBuildPromiseResolve == null ? void 0 : devBuildPromiseResolve();\n                });\n            });\n        },\n        prefetch (route) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script.toString(), \"script\")) : [])).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route, true).catch(()=>{}));\n            }).catch(()=>{});\n        }\n    };\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/script.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/script.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handleClientScriptLoad = handleClientScriptLoad;\nexports.initScriptLoader = initScriptLoader;\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _reactDom = _interop_require_default(__webpack_require__(/*! react-dom */ \"react-dom\"));\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _headManagerContext = __webpack_require__(/*! ../shared/lib/head-manager-context */ \"./head-manager-context\");\nvar _headManager = __webpack_require__(/*! ./head-manager */ \"./node_modules/next/dist/client/head-manager.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\n    \"onLoad\",\n    \"onReady\",\n    \"dangerouslySetInnerHTML\",\n    \"children\",\n    \"onError\",\n    \"strategy\"\n];\nconst loadScript = (props)=>{\n    const { src , id , onLoad =()=>{} , onReady =null , dangerouslySetInnerHTML , children =\"\" , strategy =\"afterInteractive\" , onError  } = props;\n    const cacheKey = id || src;\n    // Script has already loaded\n    if (cacheKey && LoadCache.has(cacheKey)) {\n        return;\n    }\n    // Contents of this script are already loading/loaded\n    if (ScriptCache.has(src)) {\n        LoadCache.add(cacheKey);\n        // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n        // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n        ScriptCache.get(src).then(onLoad, onError);\n        return;\n    }\n    /** Execute after the script first loaded */ const afterLoad = ()=>{\n        // Run onReady for the first time after load event\n        if (onReady) {\n            onReady();\n        }\n        // add cacheKey to LoadCache when load successfully\n        LoadCache.add(cacheKey);\n    };\n    const el = document.createElement(\"script\");\n    const loadPromise = new Promise((resolve, reject)=>{\n        el.addEventListener(\"load\", function(e) {\n            resolve();\n            if (onLoad) {\n                onLoad.call(this, e);\n            }\n            afterLoad();\n        });\n        el.addEventListener(\"error\", function(e) {\n            reject(e);\n        });\n    }).catch(function(e) {\n        if (onError) {\n            onError(e);\n        }\n    });\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n        afterLoad();\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n        afterLoad();\n    } else if (src) {\n        el.src = src;\n        // do not add cacheKey into LoadCache for remote script here\n        // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n        ScriptCache.set(src, loadPromise);\n    }\n    for (const [k, value] of Object.entries(props)){\n        if (value === undefined || ignoreProps.includes(k)) {\n            continue;\n        }\n        const attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n        el.setAttribute(attr, value);\n    }\n    if (strategy === \"worker\") {\n        el.setAttribute(\"type\", \"text/partytown\");\n    }\n    el.setAttribute(\"data-nscript\", strategy);\n    document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n    const { strategy =\"afterInteractive\"  } = props;\n    if (strategy === \"lazyOnload\") {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n        });\n    } else {\n        loadScript(props);\n    }\n}\nfunction loadLazyScript(props) {\n    if (document.readyState === \"complete\") {\n        (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n    } else {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n        });\n    }\n}\nfunction addBeforeInteractiveToCache() {\n    const scripts = [\n        ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n        ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')\n    ];\n    scripts.forEach((script)=>{\n        const cacheKey = script.id || script.getAttribute(\"src\");\n        LoadCache.add(cacheKey);\n    });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n    scriptLoaderItems.forEach(handleClientScriptLoad);\n    addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n    const { id , src =\"\" , onLoad =()=>{} , onReady =null , strategy =\"afterInteractive\" , onError  } = props, restProps = _object_without_properties_loose(props, [\n        \"id\",\n        \"src\",\n        \"onLoad\",\n        \"onReady\",\n        \"strategy\",\n        \"onError\"\n    ]);\n    // Context is available only during SSR\n    const { updateScripts , scripts , getIsSsr , appDir , nonce  } = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n    /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */ const hasOnReadyEffectCalled = (0, _react).useRef(false);\n    (0, _react).useEffect(()=>{\n        const cacheKey = id || src;\n        if (!hasOnReadyEffectCalled.current) {\n            // Run onReady if script has loaded before but component is re-mounted\n            if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n                onReady();\n            }\n            hasOnReadyEffectCalled.current = true;\n        }\n    }, [\n        onReady,\n        id,\n        src\n    ]);\n    const hasLoadScriptEffectCalled = (0, _react).useRef(false);\n    (0, _react).useEffect(()=>{\n        if (!hasLoadScriptEffectCalled.current) {\n            if (strategy === \"afterInteractive\") {\n                loadScript(props);\n            } else if (strategy === \"lazyOnload\") {\n                loadLazyScript(props);\n            }\n            hasLoadScriptEffectCalled.current = true;\n        }\n    }, [\n        props,\n        strategy\n    ]);\n    if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n        if (updateScripts) {\n            scripts[strategy] = (scripts[strategy] || []).concat([\n                _extends({\n                    id,\n                    src,\n                    onLoad,\n                    onReady,\n                    onError\n                }, restProps)\n            ]);\n            updateScripts(scripts);\n        } else if (getIsSsr && getIsSsr()) {\n            // Script has already loaded during SSR\n            LoadCache.add(id || src);\n        } else if (getIsSsr && !getIsSsr()) {\n            loadScript(props);\n        }\n    }\n    // For the app directory, we need React Float to preload these scripts.\n    if (appDir) {\n        // Before interactive scripts need to be loaded by Next.js' runtime instead\n        // of native <script> tags, because they no longer have `defer`.\n        if (strategy === \"beforeInteractive\") {\n            if (!src) {\n                // For inlined scripts, we put the content in `children`.\n                if (restProps.dangerouslySetInnerHTML) {\n                    restProps.children = restProps.dangerouslySetInnerHTML.__html;\n                    delete restProps.dangerouslySetInnerHTML;\n                }\n                return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                    nonce: nonce,\n                    dangerouslySetInnerHTML: {\n                        __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                            0,\n                            _extends({}, restProps)\n                        ])})`\n                    }\n                });\n            }\n            // @ts-ignore\n            _reactDom.default.preload(src, restProps.integrity ? {\n                as: \"script\",\n                integrity: restProps.integrity\n            } : {\n                as: \"script\"\n            });\n            return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                nonce: nonce,\n                dangerouslySetInnerHTML: {\n                    __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                        src\n                    ])})`\n                }\n            });\n        } else if (strategy === \"afterInteractive\") {\n            if (src) {\n                // @ts-ignore\n                _reactDom.default.preload(src, restProps.integrity ? {\n                    as: \"script\",\n                    integrity: restProps.integrity\n                } : {\n                    as: \"script\"\n                });\n            }\n        }\n    }\n    return null;\n}\nObject.defineProperty(Script, \"__nextScript\", {\n    value: true\n});\nvar _default = Script;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=script.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/script.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/trusted-types.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/trusted-types.js ***!
  \********************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.__unsafeCreateTrustedScriptURL = __unsafeCreateTrustedScriptURL;\n/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */ let policy;\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */ function getPolicy() {\n    if (typeof policy === \"undefined\" && \"undefined\" !== \"undefined\") { var ref; }\n    return policy;\n}\nfunction __unsafeCreateTrustedScriptURL(url) {\n    var ref;\n    return ((ref = getPolicy()) == null ? void 0 : ref.createScriptURL(url)) || url;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=trusted-types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC90cnVzdGVkLXR5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELHNDQUFzQyxHQUFHRTtBQUN6Qzs7O0NBR0MsR0FBRyxJQUFJQztBQUNSOzs7Q0FHQyxHQUFHLFNBQVNDLFlBQVk7SUFDckIsSUFBSSxPQUFPRCxXQUFXLGVBQWUsZ0JBQWtCLGFBQWEsWUFPbkU7SUFDRCxPQUFPQTtBQUNYO0FBQ0EsU0FBU0QsK0JBQStCVyxHQUFHLEVBQUU7SUFDekMsSUFBSVI7SUFDSixPQUFPLENBQUMsQ0FBQ0EsTUFBTUQsV0FBVSxLQUFNLElBQUksR0FBRyxLQUFLLElBQUlDLElBQUlPLGVBQWUsQ0FBQ0MsSUFBSSxLQUFLQTtBQUNoRjtBQUVBLElBQUksQ0FBQyxPQUFPYixRQUFRYyxPQUFPLEtBQUssY0FBZSxPQUFPZCxRQUFRYyxPQUFPLEtBQUssWUFBWWQsUUFBUWMsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPZCxRQUFRYyxPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLakIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRYyxPQUFPLEVBQUUsY0FBYztRQUFFYixPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT2tCLE1BQU0sQ0FBQ2hCLFFBQVFjLE9BQU8sRUFBRWQ7SUFDL0JpQixPQUFPakIsT0FBTyxHQUFHQSxRQUFRYyxPQUFPO0FBQ2xDLENBQUMsQ0FFRCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC90cnVzdGVkLXR5cGVzLmpzP2E0MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLl9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTCA9IF9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTDtcbi8qKlxuICogU3RvcmVzIHRoZSBUcnVzdGVkIFR5cGVzIFBvbGljeS4gU3RhcnRzIGFzIHVuZGVmaW5lZCBhbmQgY2FuIGJlIHNldCB0byBudWxsXG4gKiBpZiBUcnVzdGVkIFR5cGVzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIuXG4gKi8gbGV0IHBvbGljeTtcbi8qKlxuICogR2V0dGVyIGZvciB0aGUgVHJ1c3RlZCBUeXBlcyBQb2xpY3kuIElmIGl0IGlzIHVuZGVmaW5lZCwgaXQgaXMgaW5zdGFudGlhdGVkXG4gKiBoZXJlIG9yIHNldCB0byBudWxsIGlmIFRydXN0ZWQgVHlwZXMgaXMgbm90IHN1cHBvcnRlZCBpbiB0aGUgYnJvd3Nlci5cbiAqLyBmdW5jdGlvbiBnZXRQb2xpY3koKSB7XG4gICAgaWYgKHR5cGVvZiBwb2xpY3kgPT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciByZWY7XG4gICAgICAgIHBvbGljeSA9ICgocmVmID0gd2luZG93LnRydXN0ZWRUeXBlcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5jcmVhdGVQb2xpY3koJ25leHRqcycsIHtcbiAgICAgICAgICAgIGNyZWF0ZUhUTUw6IChpbnB1dCk9PmlucHV0LFxuICAgICAgICAgICAgY3JlYXRlU2NyaXB0OiAoaW5wdXQpPT5pbnB1dCxcbiAgICAgICAgICAgIGNyZWF0ZVNjcmlwdFVSTDogKGlucHV0KT0+aW5wdXRcbiAgICAgICAgfSkpIHx8IG51bGw7XG4gICAgfVxuICAgIHJldHVybiBwb2xpY3k7XG59XG5mdW5jdGlvbiBfX3Vuc2FmZUNyZWF0ZVRydXN0ZWRTY3JpcHRVUkwodXJsKSB7XG4gICAgdmFyIHJlZjtcbiAgICByZXR1cm4gKChyZWYgPSBnZXRQb2xpY3koKSkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5jcmVhdGVTY3JpcHRVUkwodXJsKSkgfHwgdXJsO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnVzdGVkLXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTCIsInBvbGljeSIsImdldFBvbGljeSIsInJlZiIsIndpbmRvdyIsInRydXN0ZWRUeXBlcyIsImNyZWF0ZVBvbGljeSIsImNyZWF0ZUhUTUwiLCJpbnB1dCIsImNyZWF0ZVNjcmlwdCIsImNyZWF0ZVNjcmlwdFVSTCIsInVybCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/trusted-types.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"react\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection({ rootRef , rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react).useState(false);\n    const elementRef = (0, _react).useRef(null);\n    const setElement = (0, _react).useCallback((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/head.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/head.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultHead = defaultHead;\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _sideEffect = _interop_require_default(__webpack_require__(/*! ./side-effect */ \"./side-effect\"));\nvar _ampContext = __webpack_require__(/*! ./amp-context */ \"./amp-context\");\nvar _headManagerContext = __webpack_require__(/*! ./head-manager-context */ \"./head-manager-context\");\nvar _ampMode = __webpack_require__(/*! ./amp-mode */ \"./amp-mode\");\nvar _warnOnce = __webpack_require__(/*! ./utils/warn-once */ \"./utils/warn-once\");\nfunction defaultHead(inAmpMode = false) {\n    const head = [\n        /*#__PURE__*/ _react.default.createElement(\"meta\", {\n            charSet: \"utf-8\"\n        })\n    ];\n    if (!inAmpMode) {\n        head.push(/*#__PURE__*/ _react.default.createElement(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width\"\n        }));\n    }\n    return head;\n}\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === \"string\" || typeof child === \"number\") {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === _react.default.Fragment) {\n        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{\n            if (typeof fragmentChild === \"string\" || typeof fragmentChild === \"number\") {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = [\n    \"name\",\n    \"httpEquiv\",\n    \"charSet\",\n    \"itemProp\"\n];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/ function unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h)=>{\n        let isUnique = true;\n        let hasKey = false;\n        if (h.key && typeof h.key !== \"number\" && h.key.indexOf(\"$\") > 0) {\n            hasKey = true;\n            const key = h.key.slice(h.key.indexOf(\"$\") + 1);\n            if (keys.has(key)) {\n                isUnique = false;\n            } else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch(h.type){\n            case \"title\":\n            case \"base\":\n                if (tags.has(h.type)) {\n                    isUnique = false;\n                } else {\n                    tags.add(h.type);\n                }\n                break;\n            case \"meta\":\n                for(let i = 0, len = METATYPES.length; i < len; i++){\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype)) continue;\n                    if (metatype === \"charSet\") {\n                        if (metaTypes.has(metatype)) {\n                            isUnique = false;\n                        } else {\n                            metaTypes.add(metatype);\n                        }\n                    } else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if ((metatype !== \"name\" || !hasKey) && categories.has(category)) {\n                            isUnique = false;\n                        } else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return isUnique;\n    };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */ function reduceComponents(headChildrenElements, props) {\n    const { inAmpMode  } = props;\n    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{\n        const key = c.key || i;\n        if (false) {}\n        if (true) {\n            // omit JSON-LD structured data snippets from the warning\n            if (c.type === \"script\" && c.props[\"type\"] !== \"application/ld+json\") {\n                const srcMessage = c.props[\"src\"] ? `<script> tag with src=\"${c.props[\"src\"]}\"` : `inline <script>`;\n                (0, _warnOnce).warnOnce(`Do not add <script> tags using next/head (see ${srcMessage}). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component`);\n            } else if (c.type === \"link\" && c.props[\"rel\"] === \"stylesheet\") {\n                (0, _warnOnce).warnOnce(`Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"${c.props[\"href\"]}\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component`);\n            }\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(c, {\n            key\n        });\n    });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */ function Head({ children  }) {\n    const ampState = (0, _react).useContext(_ampContext.AmpStateContext);\n    const headManager = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n    return /*#__PURE__*/ _react.default.createElement(_sideEffect.default, {\n        reduceComponentsToState: reduceComponents,\n        headManager: headManager,\n        inAmpMode: (0, _ampMode).isInAmpMode(ampState)\n    }, children);\n}\nvar _default = Head;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/head.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.matchesMiddleware = matchesMiddleware;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports.handleSmoothScroll = handleSmoothScroll;\nexports.createKey = createKey;\nexports[\"default\"] = void 0;\nvar _async_to_generator = (__webpack_require__(/*! @swc/helpers/lib/_async_to_generator.js */ \"./node_modules/@swc/helpers/lib/_async_to_generator.js\")[\"default\"]);\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _removeTrailingSlash = __webpack_require__(/*! ./utils/remove-trailing-slash */ \"../shared/lib/router/utils/remove-trailing-slash\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\nvar _script = __webpack_require__(/*! ../../../client/script */ \"./node_modules/next/dist/client/script.js\");\nvar _isError = _interop_require_wildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../page-path/denormalize-page-path */ \"../page-path/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interop_require_default(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../shared/lib/utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interop_require_default(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"../shared/lib/router/utils/format-url\");\nvar _detectDomainLocale = __webpack_require__(/*! ../../../client/detect-domain-locale */ \"./node_modules/next/dist/client/detect-domain-locale.js\");\nvar _parsePath = __webpack_require__(/*! ./utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nvar _addLocale = __webpack_require__(/*! ../../../client/add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nvar _removeLocale = __webpack_require__(/*! ../../../client/remove-locale */ \"./node_modules/next/dist/client/remove-locale.js\");\nvar _removeBasePath = __webpack_require__(/*! ../../../client/remove-base-path */ \"./node_modules/next/dist/client/remove-base-path.js\");\nvar _addBasePath = __webpack_require__(/*! ../../../client/add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\nvar _hasBasePath = __webpack_require__(/*! ../../../client/has-base-path */ \"./node_modules/next/dist/client/has-base-path.js\");\nvar _isApiRoute = __webpack_require__(/*! ../../../lib/is-api-route */ \"./node_modules/next/dist/lib/is-api-route.js\");\nvar _getNextPathnameInfo = __webpack_require__(/*! ./utils/get-next-pathname-info */ \"./utils/get-next-pathname-info\");\nvar _formatNextPathnameInfo = __webpack_require__(/*! ./utils/format-next-pathname-info */ \"./utils/format-next-pathname-info\");\nvar _compareStates = __webpack_require__(/*! ./utils/compare-states */ \"./utils/compare-states\");\nvar _isBot = __webpack_require__(/*! ./utils/is-bot */ \"./utils/is-bot\");\nfunction buildCancellationError() {\n    return Object.assign(new Error(\"Route Cancelled\"), {\n        cancelled: true\n    });\n}\nfunction matchesMiddleware(options) {\n    return _matchesMiddleware.apply(this, arguments);\n}\nfunction _matchesMiddleware() {\n    _matchesMiddleware = _async_to_generator(function*(options) {\n        const matchers = yield Promise.resolve(options.router.pageLoader.getMiddleware());\n        if (!matchers) return false;\n        const { pathname: asPathname  } = (0, _parsePath).parsePath(options.asPath);\n        // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`\n        const cleanedAs = (0, _hasBasePath).hasBasePath(asPathname) ? (0, _removeBasePath).removeBasePath(asPathname) : asPathname;\n        const asWithBasePathAndLocale = (0, _addBasePath).addBasePath((0, _addLocale).addLocale(cleanedAs, options.locale));\n        // Check only path match on client. Matching \"has\" should be done on server\n        // where we can access more info such as headers, HttpOnly cookie, etc.\n        return matchers.some((m)=>new RegExp(m.regexp).test(asWithBasePathAndLocale));\n    });\n    return _matchesMiddleware.apply(this, arguments);\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction omit(object, keys) {\n    const omitted = {};\n    Object.keys(object).forEach((key)=>{\n        if (!keys.includes(key)) {\n            omitted[key] = object[key];\n        }\n    });\n    return omitted;\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils).isAbsoluteUrl(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasBasePath).hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : \"\") || // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? \"...\" : \"\"}${param}]`;\n        if (optional) {\n            replaced = `${!value ? \"/\" : \"\"}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present\n        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formatUrl).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\");\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formatUrl).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omit(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefWasAbsolute = resolvedHref.startsWith(origin);\n    const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefWasAbsolute ? resolvedHref : (0, _addBasePath).addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asWasAbsolute ? preparedAs : (0, _addBasePath).addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === \"/404\" || cleanPathname === \"/_error\") {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n}\nfunction getMiddlewareData(source, response, options) {\n    const nextConfig = {\n        basePath: options.router.basePath,\n        i18n: {\n            locales: options.router.locales\n        },\n        trailingSlash: Boolean(false)\n    };\n    const rewriteHeader = response.headers.get(\"x-nextjs-rewrite\");\n    let rewriteTarget = rewriteHeader || response.headers.get(\"x-nextjs-matched-path\");\n    const matchedPath = response.headers.get(\"x-matched-path\");\n    if (matchedPath && !rewriteTarget && !matchedPath.includes(\"__next_data_catchall\") && !matchedPath.includes(\"/_error\") && !matchedPath.includes(\"/404\")) {\n        // leverage x-matched-path to detect next.config.js rewrites\n        rewriteTarget = matchedPath;\n    }\n    if (rewriteTarget) {\n        if (rewriteTarget.startsWith(\"/\")) {\n            const parsedRewriteTarget = (0, _parseRelativeUrl).parseRelativeUrl(rewriteTarget);\n            const pathnameInfo = (0, _getNextPathnameInfo).getNextPathnameInfo(parsedRewriteTarget.pathname, {\n                nextConfig,\n                parseData: true\n            });\n            let fsPathname = (0, _removeTrailingSlash).removeTrailingSlash(pathnameInfo.pathname);\n            return Promise.all([\n                options.router.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest()\n            ]).then(([pages, { __rewrites: rewrites  }])=>{\n                let as = (0, _addLocale).addLocale(pathnameInfo.pathname, pathnameInfo.locale);\n                if ((0, _isDynamic).isDynamicRoute(as) || !rewriteHeader && pages.includes((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(as), options.router.locales).pathname)) {\n                    const parsedSource = (0, _getNextPathnameInfo).getNextPathnameInfo((0, _parseRelativeUrl).parseRelativeUrl(source).pathname, {\n                        parseData: true\n                    });\n                    as = (0, _addBasePath).addBasePath(parsedSource.pathname);\n                    parsedRewriteTarget.pathname = as;\n                }\n                if (true) {\n                    const result = (0, _resolveRewrites).default(as, pages, rewrites, parsedRewriteTarget.query, (path)=>resolveDynamicRoute(path, pages), options.router.locales);\n                    if (result.matchedPage) {\n                        parsedRewriteTarget.pathname = result.parsedAs.pathname;\n                        as = parsedRewriteTarget.pathname;\n                        Object.assign(parsedRewriteTarget.query, result.parsedAs.query);\n                    }\n                } else {}\n                const resolvedHref = !pages.includes(fsPathname) ? resolveDynamicRoute((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedRewriteTarget.pathname), options.router.locales).pathname, pages) : fsPathname;\n                if ((0, _isDynamic).isDynamicRoute(resolvedHref)) {\n                    const matches = (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(resolvedHref))(as);\n                    Object.assign(parsedRewriteTarget.query, matches || {});\n                }\n                return {\n                    type: \"rewrite\",\n                    parsedAs: parsedRewriteTarget,\n                    resolvedHref\n                };\n            });\n        }\n        const src = (0, _parsePath).parsePath(source);\n        const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n            nextConfig,\n            parseData: true\n        }), {\n            defaultLocale: options.router.defaultLocale,\n            buildId: \"\"\n        }));\n        return Promise.resolve({\n            type: \"redirect-external\",\n            destination: `${pathname}${src.query}${src.hash}`\n        });\n    }\n    const redirectTarget = response.headers.get(\"x-nextjs-redirect\");\n    if (redirectTarget) {\n        if (redirectTarget.startsWith(\"/\")) {\n            const src = (0, _parsePath).parsePath(redirectTarget);\n            const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n                nextConfig,\n                parseData: true\n            }), {\n                defaultLocale: options.router.defaultLocale,\n                buildId: \"\"\n            }));\n            return Promise.resolve({\n                type: \"redirect-internal\",\n                newAs: `${pathname}${src.query}${src.hash}`,\n                newUrl: `${pathname}${src.query}${src.hash}`\n            });\n        }\n        return Promise.resolve({\n            type: \"redirect-external\",\n            destination: redirectTarget\n        });\n    }\n    return Promise.resolve({\n        type: \"next\"\n    });\n}\nfunction withMiddlewareEffects(options) {\n    return _withMiddlewareEffects.apply(this, arguments);\n}\nfunction _withMiddlewareEffects() {\n    _withMiddlewareEffects = _async_to_generator(function*(options) {\n        const matches = yield matchesMiddleware(options);\n        if (!matches || !options.fetchData) {\n            return null;\n        }\n        try {\n            const data = yield options.fetchData();\n            const effect = yield getMiddlewareData(data.dataHref, data.response, options);\n            return {\n                dataHref: data.dataHref,\n                json: data.json,\n                response: data.response,\n                text: data.text,\n                cacheKey: data.cacheKey,\n                effect\n            };\n        } catch (e) {\n            /**\n     * TODO: Revisit this in the future.\n     * For now we will not consider middleware data errors to be fatal.\n     * maybe we should revisit in the future.\n     */ return null;\n        }\n    });\n    return _withMiddlewareEffects.apply(this, arguments);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol(\"SSG_DATA_NOT_FOUND\");\nfunction fetchRetry(url, attempts, options) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: \"same-origin\",\n        method: options.method || \"GET\",\n        headers: Object.assign({}, options.headers, {\n            \"x-nextjs-data\": \"1\"\n        })\n    }).then((response)=>{\n        return !response.ok && attempts > 1 && response.status >= 500 ? fetchRetry(url, attempts - 1, options) : response;\n    });\n}\nfunction handleSmoothScroll(fn, options = {}) {\n    const htmlElement = document.documentElement;\n    const existing = htmlElement.style.scrollBehavior;\n    htmlElement.style.scrollBehavior = \"auto\";\n    if (!options.dontForceLayout) {\n        // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n        // Otherwise it will not pickup the change in scrollBehavior\n        // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n        htmlElement.getClientRects();\n    }\n    fn();\n    htmlElement.style.scrollBehavior = existing;\n}\nfunction tryToParseAsJSON(text) {\n    try {\n        return JSON.parse(text);\n    } catch (error) {\n        return null;\n    }\n}\nfunction fetchNextData({ dataHref , inflightCache , isPrefetch , hasMiddleware , isServerRender , parseJSON , persistCache , isBackground , unstable_skipClientCache  }) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    var ref1;\n    const getData = (params)=>{\n        return fetchRetry(dataHref, isServerRender ? 3 : 1, {\n            headers: Object.assign({}, isPrefetch ? {\n                purpose: \"prefetch\"\n            } : {}, isPrefetch && hasMiddleware ? {\n                \"x-middleware-prefetch\": \"1\"\n            } : {}),\n            method: (ref1 = params == null ? void 0 : params.method) != null ? ref1 : \"GET\"\n        }).then((response)=>{\n            if (response.ok && (params == null ? void 0 : params.method) === \"HEAD\") {\n                return {\n                    dataHref,\n                    response,\n                    text: \"\",\n                    json: {},\n                    cacheKey\n                };\n            }\n            return response.text().then((text)=>{\n                if (!response.ok) {\n                    /**\n             * When the data response is a redirect because of a middleware\n             * we do not consider it an error. The headers must bring the\n             * mapped location.\n             * TODO: Change the status code in the handler.\n             */ if (hasMiddleware && [\n                        301,\n                        302,\n                        307,\n                        308\n                    ].includes(response.status)) {\n                        return {\n                            dataHref,\n                            response,\n                            text,\n                            json: {},\n                            cacheKey\n                        };\n                    }\n                    if (!hasMiddleware && response.status === 404) {\n                        var ref;\n                        if ((ref = tryToParseAsJSON(text)) == null ? void 0 : ref.notFound) {\n                            return {\n                                dataHref,\n                                json: {\n                                    notFound: SSG_DATA_NOT_FOUND\n                                },\n                                response,\n                                text,\n                                cacheKey\n                            };\n                        }\n                    }\n                    const error = new Error(`Failed to load static props`);\n                    /**\n             * We should only trigger a server-side transition if this was\n             * caused on a client-side transition. Otherwise, we'd get into\n             * an infinite loop.\n             */ if (!isServerRender) {\n                        (0, _routeLoader).markAssetError(error);\n                    }\n                    throw error;\n                }\n                return {\n                    dataHref,\n                    json: parseJSON ? tryToParseAsJSON(text) : null,\n                    response,\n                    text,\n                    cacheKey\n                };\n            });\n        }).then((data)=>{\n            if (!persistCache || \"development\" !== \"production\" || 0) {\n                delete inflightCache[cacheKey];\n            }\n            return data;\n        }).catch((err)=>{\n            if (!unstable_skipClientCache) {\n                delete inflightCache[cacheKey];\n            }\n            if (err.message === \"Failed to fetch\" || // firefox\n            err.message === \"NetworkError when attempting to fetch resource.\" || // safari\n            err.message === \"Load failed\") {\n                (0, _routeLoader).markAssetError(err);\n            }\n            throw err;\n        });\n    };\n    // when skipping client cache we wait to update\n    // inflight cache until successful data response\n    // this allows racing click event with fetching newer data\n    // without blocking navigation when stale data is available\n    if (unstable_skipClientCache && persistCache) {\n        return getData({}).then((data)=>{\n            inflightCache[cacheKey] = Promise.resolve(data);\n            return data;\n        });\n    }\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = getData(isBackground ? {\n        method: \"HEAD\"\n    } : {});\n}\nfunction createKey() {\n    return Math.random().toString(36).slice(2, 10);\n}\nfunction handleHardNavigation({ url , router  }) {\n    // ensure we don't trigger a hard navigation to the same\n    // URL as this can end up with an infinite refresh\n    if (url === (0, _addBasePath).addBasePath((0, _addLocale).addLocale(router.asPath, router.locale))) {\n        throw new Error(`Invariant: attempted to hard navigate to the same URL ${url} ${location.href}`);\n    }\n    window.location.href = url;\n}\nconst getCancelledHandler = ({ route , router  })=>{\n    let cancelled = false;\n    const cancel = router.clc = ()=>{\n        cancelled = true;\n    };\n    const handleCancelled = ()=>{\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === router.clc) {\n            router.clc = null;\n        }\n    };\n    return handleCancelled;\n};\nclass Router {\n    reload() {\n        window.location.reload();\n    }\n    /**\n   * Go back in history\n   */ back() {\n        window.history.back();\n    }\n    /**\n   * Go forward in history\n   */ forward() {\n        window.history.forward();\n    }\n    /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ push(url, as, options = {}) {\n        if (false) {}\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"pushState\", url, as, options);\n    }\n    /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ replace(url, as, options = {}) {\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"replaceState\", url, as, options);\n    }\n    change(method, url, as, options, forcedScroll) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            if (!isLocalURL(url)) {\n                handleHardNavigation({\n                    url,\n                    router: _this\n                });\n                return false;\n            }\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            const isQueryUpdating = options._h === 1;\n            let shouldResolveHref = isQueryUpdating || options._shouldResolveHref || (0, _parsePath).parsePath(url).pathname === (0, _parsePath).parsePath(as).pathname;\n            const nextState = _extends({}, _this.state);\n            // for static pages with query params in the URL we delay\n            // marking the router ready until after the query is updated\n            // or a navigation has occurred\n            const readyStateChange = _this.isReady !== true;\n            _this.isReady = true;\n            const isSsr = _this.isSsr;\n            if (!isQueryUpdating) {\n                _this.isSsr = false;\n            }\n            // if a route transition is already in progress before\n            // the query updating is triggered ignore query updating\n            if (isQueryUpdating && _this.clc) {\n                return false;\n            }\n            const prevLocale = nextState.locale;\n            if (false) { var ref; }\n            // marking route changes as a navigation start entry\n            if (_utils.ST) {\n                performance.mark(\"routeChange\");\n            }\n            const { shallow =false , scroll =true  } = options;\n            const routeProps = {\n                shallow\n            };\n            if (_this._inFlightRoute && _this.clc) {\n                if (!isSsr) {\n                    Router.events.emit(\"routeChangeError\", buildCancellationError(), _this._inFlightRoute, routeProps);\n                }\n                _this.clc();\n                _this.clc = null;\n            }\n            as = (0, _addBasePath).addBasePath((0, _addLocale).addLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, options.locale, _this.defaultLocale));\n            const cleanedAs = (0, _removeLocale).removeLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, nextState.locale);\n            _this._inFlightRoute = as;\n            const localeChange = prevLocale !== nextState.locale;\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            if (!isQueryUpdating && _this.onlyAHashChange(cleanedAs) && !localeChange) {\n                nextState.asPath = cleanedAs;\n                Router.events.emit(\"hashChangeStart\", as, routeProps);\n                // TODO: do we need the resolved href when only a hash change?\n                _this.changeState(method, url, as, _extends({}, options, {\n                    scroll: false\n                }));\n                if (scroll) {\n                    _this.scrollToHash(cleanedAs);\n                }\n                try {\n                    yield _this.set(nextState, _this.components[nextState.route], null);\n                } catch (err) {\n                    if ((0, _isError).default(err) && err.cancelled) {\n                        Router.events.emit(\"routeChangeError\", err, cleanedAs, routeProps);\n                    }\n                    throw err;\n                }\n                Router.events.emit(\"hashChangeComplete\", as, routeProps);\n                return true;\n            }\n            let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            let { pathname , query  } = parsed;\n            // The build manifest needs to be loaded before auto-static dynamic pages\n            // get their query parameters to allow ensuring they can be parsed properly\n            // when rewritten to\n            let pages, rewrites;\n            try {\n                [pages, { __rewrites: rewrites  }] = yield Promise.all([\n                    _this.pageLoader.getPageList(),\n                    (0, _routeLoader).getClientBuildManifest(),\n                    _this.pageLoader.getMiddleware()\n                ]);\n            } catch (err) {\n                // If we fail to resolve the page list or client-build manifest, we must\n                // do a server-side transition:\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                return false;\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!_this.urlIsNew(cleanedAs) && !localeChange) {\n                method = \"replaceState\";\n            }\n            // we need to resolve the as value using rewrites for dynamic SSG\n            // pages to allow building the data URL correctly\n            let resolvedAs = as;\n            // url and as should always be prefixed with basePath by this\n            // point by either next/link or router.push/replace so strip the\n            // basePath from the pathname to match the pages dir 1-to-1\n            pathname = pathname ? (0, _removeTrailingSlash).removeTrailingSlash((0, _removeBasePath).removeBasePath(pathname)) : pathname;\n            let route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            const parsedAsPathname = as.startsWith(\"/\") && (0, _parseRelativeUrl).parseRelativeUrl(as).pathname;\n            const isMiddlewareRewrite = !!(parsedAsPathname && route !== parsedAsPathname && (!(0, _isDynamic).isDynamicRoute(route) || !(0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(route))(parsedAsPathname)));\n            // we don't attempt resolve asPath when we need to execute\n            // middleware as the resolving will occur server-side\n            const isMiddlewareMatch = !options.shallow && (yield matchesMiddleware({\n                asPath: as,\n                locale: nextState.locale,\n                router: _this\n            }));\n            if (isQueryUpdating && isMiddlewareMatch) {\n                shouldResolveHref = false;\n            }\n            if (shouldResolveHref && pathname !== \"/_error\") {\n                options._shouldResolveHref = true;\n                if ( true && as.startsWith(\"/\")) {\n                    const rewritesResult = (0, _resolveRewrites).default((0, _addBasePath).addBasePath((0, _addLocale).addLocale(cleanedAs, nextState.locale), true), pages, rewrites, query, (p)=>resolveDynamicRoute(p, pages), _this.locales);\n                    if (rewritesResult.externalDest) {\n                        handleHardNavigation({\n                            url: as,\n                            router: _this\n                        });\n                        return true;\n                    }\n                    if (!isMiddlewareMatch) {\n                        resolvedAs = rewritesResult.asPath;\n                    }\n                    if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n                        // if this directly matches a page we need to update the href to\n                        // allow the correct page chunk to be loaded\n                        pathname = rewritesResult.resolvedHref;\n                        parsed.pathname = (0, _addBasePath).addBasePath(pathname);\n                        if (!isMiddlewareMatch) {\n                            url = (0, _formatUrl).formatWithValidation(parsed);\n                        }\n                    }\n                } else {\n                    parsed.pathname = resolveDynamicRoute(pathname, pages);\n                    if (parsed.pathname !== pathname) {\n                        pathname = parsed.pathname;\n                        parsed.pathname = (0, _addBasePath).addBasePath(pathname);\n                        if (!isMiddlewareMatch) {\n                            url = (0, _formatUrl).formatWithValidation(parsed);\n                        }\n                    }\n                }\n            }\n            if (!isLocalURL(as)) {\n                if (true) {\n                    throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n                }\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                return false;\n            }\n            resolvedAs = (0, _removeLocale).removeLocale((0, _removeBasePath).removeBasePath(resolvedAs), nextState.locale);\n            route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            let routeMatch = false;\n            if ((0, _isDynamic).isDynamicRoute(route)) {\n                const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n                const asPathname = parsedAs.pathname;\n                const routeRegex = (0, _routeRegex).getRouteRegex(route);\n                routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n                const shouldInterpolate = route === asPathname;\n                const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n                if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                    const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param] && !routeRegex.groups[param].optional);\n                    if (missingParams.length > 0 && !isMiddlewareMatch) {\n                        if (true) {\n                            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(\", \")} in the \\`href\\`'s \\`query\\``);\n                        }\n                        throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\", \")}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? \"href-interpolation-failed\" : \"incompatible-href-as\"}`);\n                    }\n                } else if (shouldInterpolate) {\n                    as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs, {\n                        pathname: interpolatedAs.result,\n                        query: omit(query, interpolatedAs.params)\n                    }));\n                } else {\n                    // Merge params into `query`, overwriting any specified in search\n                    Object.assign(query, routeMatch);\n                }\n            }\n            if (!isQueryUpdating) {\n                Router.events.emit(\"routeChangeStart\", as, routeProps);\n            }\n            try {\n                var ref2, ref3, ref4;\n                let routeInfo = yield _this.getRouteInfo({\n                    route,\n                    pathname,\n                    query,\n                    as,\n                    resolvedAs,\n                    routeProps,\n                    locale: nextState.locale,\n                    isPreview: nextState.isPreview,\n                    hasMiddleware: isMiddlewareMatch,\n                    unstable_skipClientCache: options.unstable_skipClientCache,\n                    isQueryUpdating: isQueryUpdating && !_this.isFallback,\n                    isMiddlewareRewrite\n                });\n                if (\"route\" in routeInfo && isMiddlewareMatch) {\n                    pathname = routeInfo.route || route;\n                    route = pathname;\n                    if (!routeProps.shallow) {\n                        query = Object.assign({}, routeInfo.query || {}, query);\n                    }\n                    const cleanedParsedPathname = (0, _hasBasePath).hasBasePath(parsed.pathname) ? (0, _removeBasePath).removeBasePath(parsed.pathname) : parsed.pathname;\n                    if (routeMatch && pathname !== cleanedParsedPathname) {\n                        Object.keys(routeMatch).forEach((key)=>{\n                            if (routeMatch && query[key] === routeMatch[key]) {\n                                delete query[key];\n                            }\n                        });\n                    }\n                    if ((0, _isDynamic).isDynamicRoute(pathname)) {\n                        const prefixedAs = !routeProps.shallow && routeInfo.resolvedAs ? routeInfo.resolvedAs : (0, _addBasePath).addBasePath((0, _addLocale).addLocale(new URL(as, location.href).pathname, nextState.locale), true);\n                        let rewriteAs = prefixedAs;\n                        if ((0, _hasBasePath).hasBasePath(rewriteAs)) {\n                            rewriteAs = (0, _removeBasePath).removeBasePath(rewriteAs);\n                        }\n                        if (false) {}\n                        const routeRegex = (0, _routeRegex).getRouteRegex(pathname);\n                        const curRouteMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(new URL(rewriteAs, location.href).pathname);\n                        if (curRouteMatch) {\n                            Object.assign(query, curRouteMatch);\n                        }\n                    }\n                }\n                // If the routeInfo brings a redirect we simply apply it.\n                if (\"type\" in routeInfo) {\n                    if (routeInfo.type === \"redirect-internal\") {\n                        return _this.change(method, routeInfo.newUrl, routeInfo.newAs, options);\n                    } else {\n                        handleHardNavigation({\n                            url: routeInfo.destination,\n                            router: _this\n                        });\n                        return new Promise(()=>{});\n                    }\n                }\n                const component = routeInfo.Component;\n                if (component && component.unstable_scriptLoader) {\n                    const scripts = [].concat(component.unstable_scriptLoader());\n                    scripts.forEach((script)=>{\n                        (0, _script).handleClientScriptLoad(script.props);\n                    });\n                }\n                // handle redirect on client-transition\n                if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {\n                    if (routeInfo.props.pageProps && routeInfo.props.pageProps.__N_REDIRECT) {\n                        // Use the destination from redirect without adding locale\n                        options.locale = false;\n                        const destination = routeInfo.props.pageProps.__N_REDIRECT;\n                        // check if destination is internal (resolves to a page) and attempt\n                        // client-navigation if it is falling back to hard navigation if\n                        // it's not\n                        if (destination.startsWith(\"/\") && routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                            const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                            parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                            const { url: newUrl , as: newAs  } = prepareUrlAs(_this, destination, destination);\n                            return _this.change(method, newUrl, newAs, options);\n                        }\n                        handleHardNavigation({\n                            url: destination,\n                            router: _this\n                        });\n                        return new Promise(()=>{});\n                    }\n                    nextState.isPreview = !!routeInfo.props.__N_PREVIEW;\n                    // handle SSG data 404\n                    if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {\n                        let notFoundRoute;\n                        try {\n                            yield _this.fetchComponent(\"/404\");\n                            notFoundRoute = \"/404\";\n                        } catch (_) {\n                            notFoundRoute = \"/_error\";\n                        }\n                        routeInfo = yield _this.getRouteInfo({\n                            route: notFoundRoute,\n                            pathname: notFoundRoute,\n                            query,\n                            as,\n                            resolvedAs,\n                            routeProps: {\n                                shallow: false\n                            },\n                            locale: nextState.locale,\n                            isPreview: nextState.isPreview\n                        });\n                        if (\"type\" in routeInfo) {\n                            throw new Error(`Unexpected middleware effect on /404`);\n                        }\n                    }\n                }\n                if (isQueryUpdating && _this.pathname === \"/_error\" && ((ref2 = self.__NEXT_DATA__.props) == null ? void 0 : (ref3 = ref2.pageProps) == null ? void 0 : ref3.statusCode) === 500 && ((ref4 = routeInfo.props) == null ? void 0 : ref4.pageProps)) {\n                    // ensure statusCode is still correct for static 500 page\n                    // when updating query information\n                    routeInfo.props.pageProps.statusCode = 500;\n                }\n                var _route;\n                // shallow routing is only allowed for same page URL changes.\n                const isValidShallowRoute = options.shallow && nextState.route === ((_route = routeInfo.route) != null ? _route : route);\n                var _scroll;\n                const shouldScroll = (_scroll = options.scroll) != null ? _scroll : !isQueryUpdating && !isValidShallowRoute;\n                const resetScroll = shouldScroll ? {\n                    x: 0,\n                    y: 0\n                } : null;\n                const upcomingScrollState = forcedScroll != null ? forcedScroll : resetScroll;\n                // the new state that the router gonna set\n                const upcomingRouterState = _extends({}, nextState, {\n                    route,\n                    pathname,\n                    query,\n                    asPath: cleanedAs,\n                    isFallback: false\n                });\n                // When the page being rendered is the 404 page, we should only update the\n                // query parameters. Route changes here might add the basePath when it\n                // wasn't originally present. This is also why this block is before the\n                // below `changeState` call which updates the browser's history (changing\n                // the URL).\n                if (isQueryUpdating && (_this.pathname === \"/404\" || _this.pathname === \"/_error\")) {\n                    var ref5, ref6, ref7;\n                    routeInfo = yield _this.getRouteInfo({\n                        route: _this.pathname,\n                        pathname: _this.pathname,\n                        query,\n                        as,\n                        resolvedAs,\n                        routeProps: {\n                            shallow: false\n                        },\n                        locale: nextState.locale,\n                        isPreview: nextState.isPreview\n                    });\n                    if (\"type\" in routeInfo) {\n                        throw new Error(`Unexpected middleware effect on ${_this.pathname}`);\n                    }\n                    if (_this.pathname === \"/_error\" && ((ref5 = self.__NEXT_DATA__.props) == null ? void 0 : (ref6 = ref5.pageProps) == null ? void 0 : ref6.statusCode) === 500 && ((ref7 = routeInfo.props) == null ? void 0 : ref7.pageProps)) {\n                        // ensure statusCode is still correct for static 500 page\n                        // when updating query information\n                        routeInfo.props.pageProps.statusCode = 500;\n                    }\n                    try {\n                        yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState);\n                    } catch (err) {\n                        if ((0, _isError).default(err) && err.cancelled) {\n                            Router.events.emit(\"routeChangeError\", err, cleanedAs, routeProps);\n                        }\n                        throw err;\n                    }\n                    return true;\n                }\n                Router.events.emit(\"beforeHistoryChange\", as, routeProps);\n                _this.changeState(method, url, as, options);\n                // for query updates we can skip it if the state is unchanged and we don't\n                // need to scroll\n                // https://github.com/vercel/next.js/issues/37139\n                const canSkipUpdating = isQueryUpdating && !upcomingScrollState && !readyStateChange && !localeChange && (0, _compareStates).compareRouterStates(upcomingRouterState, _this.state);\n                if (!canSkipUpdating) {\n                    try {\n                        yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState);\n                    } catch (e) {\n                        if (e.cancelled) routeInfo.error = routeInfo.error || e;\n                        else throw e;\n                    }\n                    if (routeInfo.error) {\n                        if (!isQueryUpdating) {\n                            Router.events.emit(\"routeChangeError\", routeInfo.error, cleanedAs, routeProps);\n                        }\n                        throw routeInfo.error;\n                    }\n                    if (false) {}\n                    if (!isQueryUpdating) {\n                        Router.events.emit(\"routeChangeComplete\", as, routeProps);\n                    }\n                    // A hash mark # is the optional last part of a URL\n                    const hashRegex = /#.+$/;\n                    if (shouldScroll && hashRegex.test(as)) {\n                        _this.scrollToHash(as);\n                    }\n                }\n                return true;\n            } catch (err1) {\n                if ((0, _isError).default(err1) && err1.cancelled) {\n                    return false;\n                }\n                throw err1;\n            }\n        })();\n    }\n    changeState(method, url, as, options = {}) {\n        if (true) {\n            if (typeof window.history === \"undefined\") {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === \"undefined\") {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== \"pushState\" || (0, _utils).getURL() !== as) {\n            this._shallow = options.shallow;\n            window.history[method]({\n                url,\n                as,\n                options,\n                __N: true,\n                key: this._key = method !== \"pushState\" ? this._key : createKey()\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            \"\", as);\n        }\n    }\n    handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            console.error(err);\n            if (err.cancelled) {\n                // bubble up cancellation errors\n                throw err;\n            }\n            if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n                Router.events.emit(\"routeChangeError\", err, as, routeProps);\n                // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                // Changing the URL doesn't block executing the current code path.\n                // So let's throw a cancellation error stop the routing logic.\n                throw buildCancellationError();\n            }\n            try {\n                let props;\n                const { page: Component , styleSheets  } = yield _this.fetchComponent(\"/_error\");\n                const routeInfo = {\n                    props,\n                    Component,\n                    styleSheets,\n                    err,\n                    error: err\n                };\n                if (!routeInfo.props) {\n                    try {\n                        routeInfo.props = yield _this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query\n                        });\n                    } catch (gipErr) {\n                        console.error(\"Error in error page `getInitialProps`: \", gipErr);\n                        routeInfo.props = {};\n                    }\n                }\n                return routeInfo;\n            } catch (routeInfoErr) {\n                return _this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + \"\"), pathname, query, as, routeProps, true);\n            }\n        })();\n    }\n    getRouteInfo({ route: requestedRoute , pathname , query , as , resolvedAs , routeProps , locale , hasMiddleware , isPreview , unstable_skipClientCache , isQueryUpdating , isMiddlewareRewrite  }) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            /**\n     * This `route` binding can change if there's a rewrite\n     * so we keep a reference to the original requested route\n     * so we can store the cache for it and avoid re-requesting every time\n     * for shallow routing purposes.\n     */ let route = requestedRoute;\n            try {\n                var ref, ref8, ref9, ref10;\n                const handleCancelled = getCancelledHandler({\n                    route,\n                    router: _this\n                });\n                let existingInfo = _this.components[route];\n                if (routeProps.shallow && existingInfo && _this.route === route) {\n                    return existingInfo;\n                }\n                if (hasMiddleware) {\n                    existingInfo = undefined;\n                }\n                let cachedRouteInfo = existingInfo && !(\"initial\" in existingInfo) && \"development\" !== \"development\" ? 0 : undefined;\n                const isBackground = isQueryUpdating;\n                const fetchNextDataParams = {\n                    dataHref: _this.pageLoader.getDataHref({\n                        href: (0, _formatUrl).formatWithValidation({\n                            pathname,\n                            query\n                        }),\n                        skipInterpolation: true,\n                        asPath: resolvedAs,\n                        locale\n                    }),\n                    hasMiddleware: true,\n                    isServerRender: _this.isSsr,\n                    parseJSON: true,\n                    inflightCache: isBackground ? _this.sbc : _this.sdc,\n                    persistCache: !isPreview,\n                    isPrefetch: false,\n                    unstable_skipClientCache,\n                    isBackground\n                };\n                let data = isQueryUpdating && !isMiddlewareRewrite ? null : yield withMiddlewareEffects({\n                    fetchData: ()=>fetchNextData(fetchNextDataParams),\n                    asPath: resolvedAs,\n                    locale: locale,\n                    router: _this\n                }).catch((err)=>{\n                    // we don't hard error during query updating\n                    // as it's un-necessary and doesn't need to be fatal\n                    // unless it is a fallback route and the props can't\n                    // be loaded\n                    if (isQueryUpdating) {\n                        return null;\n                    }\n                    throw err;\n                });\n                if (isQueryUpdating) {\n                    if (!data) {\n                        data = {\n                            json: self.__NEXT_DATA__.props\n                        };\n                    } else {\n                        data.json = self.__NEXT_DATA__.props;\n                    }\n                }\n                handleCancelled();\n                if ((data == null ? void 0 : (ref = data.effect) == null ? void 0 : ref.type) === \"redirect-internal\" || (data == null ? void 0 : (ref8 = data.effect) == null ? void 0 : ref8.type) === \"redirect-external\") {\n                    return data.effect;\n                }\n                if ((data == null ? void 0 : (ref9 = data.effect) == null ? void 0 : ref9.type) === \"rewrite\") {\n                    const resolvedRoute = (0, _removeTrailingSlash).removeTrailingSlash(data.effect.resolvedHref);\n                    const pages = yield _this.pageLoader.getPageList();\n                    // during query updating the page must match although during\n                    // client-transition a redirect that doesn't match a page\n                    // can be returned and this should trigger a hard navigation\n                    // which is valid for incremental migration\n                    if (!isQueryUpdating || pages.includes(resolvedRoute)) {\n                        route = resolvedRoute;\n                        pathname = data.effect.resolvedHref;\n                        query = _extends({}, query, data.effect.parsedAs.query);\n                        resolvedAs = (0, _removeBasePath).removeBasePath((0, _normalizeLocalePath).normalizeLocalePath(data.effect.parsedAs.pathname, _this.locales).pathname);\n                        // Check again the cache with the new destination.\n                        existingInfo = _this.components[route];\n                        if (routeProps.shallow && existingInfo && _this.route === route && !hasMiddleware) {\n                            // If we have a match with the current route due to rewrite,\n                            // we can copy the existing information to the rewritten one.\n                            // Then, we return the information along with the matched route.\n                            return _extends({}, existingInfo, {\n                                route\n                            });\n                        }\n                    }\n                }\n                if ((0, _isApiRoute).isAPIRoute(route)) {\n                    handleHardNavigation({\n                        url: as,\n                        router: _this\n                    });\n                    return new Promise(()=>{});\n                }\n                const routeInfo = cachedRouteInfo || (yield _this.fetchComponent(route).then((res)=>({\n                        Component: res.page,\n                        styleSheets: res.styleSheets,\n                        __N_SSG: res.mod.__N_SSG,\n                        __N_SSP: res.mod.__N_SSP\n                    })));\n                if (true) {\n                    const { isValidElementType  } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n                    if (!isValidElementType(routeInfo.Component)) {\n                        throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                    }\n                }\n                const wasBailedPrefetch = data == null ? void 0 : (ref10 = data.response) == null ? void 0 : ref10.headers.get(\"x-middleware-skip\");\n                const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP;\n                // For non-SSG prefetches that bailed before sending data\n                // we clear the cache to fetch full response\n                if (wasBailedPrefetch && (data == null ? void 0 : data.dataHref)) {\n                    delete _this.sdc[data.dataHref];\n                }\n                const { props , cacheKey  } = yield _this._getData(_async_to_generator(function*() {\n                    if (shouldFetchData) {\n                        if ((data == null ? void 0 : data.json) && !wasBailedPrefetch) {\n                            return {\n                                cacheKey: data.cacheKey,\n                                props: data.json\n                            };\n                        }\n                        const dataHref = (data == null ? void 0 : data.dataHref) ? data.dataHref : _this.pageLoader.getDataHref({\n                            href: (0, _formatUrl).formatWithValidation({\n                                pathname,\n                                query\n                            }),\n                            asPath: resolvedAs,\n                            locale\n                        });\n                        const fetched = yield fetchNextData({\n                            dataHref,\n                            isServerRender: _this.isSsr,\n                            parseJSON: true,\n                            inflightCache: wasBailedPrefetch ? {} : _this.sdc,\n                            persistCache: !isPreview,\n                            isPrefetch: false,\n                            unstable_skipClientCache\n                        });\n                        return {\n                            cacheKey: fetched.cacheKey,\n                            props: fetched.json || {}\n                        };\n                    }\n                    return {\n                        headers: {},\n                        props: yield _this.getInitialProps(routeInfo.Component, {\n                            pathname,\n                            query,\n                            asPath: as,\n                            locale,\n                            locales: _this.locales,\n                            defaultLocale: _this.defaultLocale\n                        })\n                    };\n                }));\n                // Only bust the data cache for SSP routes although\n                // middleware can skip cache per request with\n                // x-middleware-cache: no-cache as well\n                if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {\n                    delete _this.sdc[cacheKey];\n                }\n                // we kick off a HEAD request in the background\n                // when a non-prefetch request is made to signal revalidation\n                if (!_this.isPreview && routeInfo.__N_SSG && \"development\" !== \"development\" && 0) {}\n                props.pageProps = Object.assign({}, props.pageProps);\n                routeInfo.props = props;\n                routeInfo.route = route;\n                routeInfo.query = query;\n                routeInfo.resolvedAs = resolvedAs;\n                _this.components[route] = routeInfo;\n                return routeInfo;\n            } catch (err) {\n                return _this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n            }\n        })();\n    }\n    set(state, data, resetScroll) {\n        this.state = state;\n        return this.sub(data, this.components[\"/_app\"].Component, resetScroll);\n    }\n    /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split(\"#\");\n        const [newUrlNoHash, newHash] = as.split(\"#\");\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash = \"\"] = as.split(\"#\");\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === \"\" || hash === \"top\") {\n            handleSmoothScroll(()=>window.scrollTo(0, 0));\n            return;\n        }\n        // Decode hash to make non-latin anchor works.\n        const rawHash = decodeURIComponent(hash);\n        // First we check if the element by id is found\n        const idEl = document.getElementById(rawHash);\n        if (idEl) {\n            handleSmoothScroll(()=>idEl.scrollIntoView());\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(rawHash)[0];\n        if (nameEl) {\n            handleSmoothScroll(()=>nameEl.scrollIntoView());\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */ prefetch(url, asPath = url, options = {}) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (true) {\n                return;\n            }\n            if (false) {}\n            let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            let { pathname , query  } = parsed;\n            const originalPathname = pathname;\n            if (false) {}\n            const pages = yield _this.pageLoader.getPageList();\n            let resolvedAs = asPath;\n            const locale = typeof options.locale !== \"undefined\" ? options.locale || undefined : _this.locale;\n            const isMiddlewareMatch = yield matchesMiddleware({\n                asPath: asPath,\n                locale: locale,\n                router: _this\n            });\n            if ( true && asPath.startsWith(\"/\")) {\n                let rewrites;\n                ({ __rewrites: rewrites  } = yield (0, _routeLoader).getClientBuildManifest());\n                const rewritesResult = (0, _resolveRewrites).default((0, _addBasePath).addBasePath((0, _addLocale).addLocale(asPath, _this.locale), true), pages, rewrites, parsed.query, (p)=>resolveDynamicRoute(p, pages), _this.locales);\n                if (rewritesResult.externalDest) {\n                    return;\n                }\n                if (!isMiddlewareMatch) {\n                    resolvedAs = (0, _removeLocale).removeLocale((0, _removeBasePath).removeBasePath(rewritesResult.asPath), _this.locale);\n                }\n                if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n                    // if this directly matches a page we need to update the href to\n                    // allow the correct page chunk to be loaded\n                    pathname = rewritesResult.resolvedHref;\n                    parsed.pathname = pathname;\n                    if (!isMiddlewareMatch) {\n                        url = (0, _formatUrl).formatWithValidation(parsed);\n                    }\n                }\n            }\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if ((0, _isDynamic).isDynamicRoute(parsed.pathname)) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                Object.assign(query, (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(parsed.pathname))((0, _parsePath).parsePath(asPath).pathname) || {});\n                if (!isMiddlewareMatch) {\n                    url = (0, _formatUrl).formatWithValidation(parsed);\n                }\n            }\n            const data =  false ? 0 : yield withMiddlewareEffects({\n                fetchData: ()=>fetchNextData({\n                        dataHref: _this.pageLoader.getDataHref({\n                            href: (0, _formatUrl).formatWithValidation({\n                                pathname: originalPathname,\n                                query\n                            }),\n                            skipInterpolation: true,\n                            asPath: resolvedAs,\n                            locale\n                        }),\n                        hasMiddleware: true,\n                        isServerRender: _this.isSsr,\n                        parseJSON: true,\n                        inflightCache: _this.sdc,\n                        persistCache: !_this.isPreview,\n                        isPrefetch: true\n                    }),\n                asPath: asPath,\n                locale: locale,\n                router: _this\n            });\n            /**\n     * If there was a rewrite we apply the effects of the rewrite on the\n     * current parameters for the prefetch.\n     */ if ((data == null ? void 0 : data.effect.type) === \"rewrite\") {\n                parsed.pathname = data.effect.resolvedHref;\n                pathname = data.effect.resolvedHref;\n                query = _extends({}, query, data.effect.parsedAs.query);\n                resolvedAs = data.effect.parsedAs.pathname;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            }\n            /**\n     * If there is a redirect to an external destination then we don't have\n     * to prefetch content as it will be unused.\n     */ if ((data == null ? void 0 : data.effect.type) === \"redirect-external\") {\n                return;\n            }\n            const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            yield Promise.all([\n                _this.pageLoader._isSsg(route).then((isSsg)=>{\n                    return isSsg ? fetchNextData({\n                        dataHref: (data == null ? void 0 : data.json) ? data == null ? void 0 : data.dataHref : _this.pageLoader.getDataHref({\n                            href: url,\n                            asPath: resolvedAs,\n                            locale: locale\n                        }),\n                        isServerRender: false,\n                        parseJSON: true,\n                        inflightCache: _this.sdc,\n                        persistCache: !_this.isPreview,\n                        isPrefetch: true,\n                        unstable_skipClientCache: options.unstable_skipClientCache || options.priority && !!true\n                    }).then(()=>false) : false;\n                }),\n                _this.pageLoader[options.priority ? \"loadPage\" : \"prefetch\"](route)\n            ]);\n        })();\n    }\n    fetchComponent(route) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            const handleCancelled = getCancelledHandler({\n                route,\n                router: _this\n            });\n            try {\n                const componentResult = yield _this.pageLoader.loadPage(route);\n                handleCancelled();\n                return componentResult;\n            } catch (err) {\n                handleCancelled();\n                throw err;\n            }\n        })();\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error(\"Loading initial props cancelled\");\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    _getFlightData(dataHref) {\n        // Do not cache RSC flight response since it's not a static resource\n        return fetchNextData({\n            dataHref,\n            isServerRender: true,\n            parseJSON: false,\n            inflightCache: this.sdc,\n            persistCache: false,\n            isPrefetch: false\n        }).then(({ text  })=>({\n                data: text\n            }));\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App  } = this.components[\"/_app\"];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx\n        });\n    }\n    get route() {\n        return this.state.route;\n    }\n    get pathname() {\n        return this.state.pathname;\n    }\n    get query() {\n        return this.state.query;\n    }\n    get asPath() {\n        return this.state.asPath;\n    }\n    get locale() {\n        return this.state.locale;\n    }\n    get isFallback() {\n        return this.state.isFallback;\n    }\n    get isPreview() {\n        return this.state.isPreview;\n    }\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview  }){\n        // Server Data Cache (full data requests)\n        this.sdc = {};\n        // Server Background Cache (HEAD requests)\n        this.sbc = {};\n        this.isFirstPopStateEvent = true;\n        this._key = createKey();\n        this.onPopState = (e)=>{\n            const { isFirstPopStateEvent  } = this;\n            this.isFirstPopStateEvent = false;\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState(\"replaceState\", (0, _formatUrl).formatWithValidation({\n                    pathname: (0, _addBasePath).addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            // __NA is used to identify if the history entry can be handled by the app-router.\n            if (state.__NA) {\n                window.location.reload();\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            // Safari fires popstateevent when reopening the browser.\n            if (isFirstPopStateEvent && this.locale === state.options.locale && state.as === this.asPath) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , key  } = state;\n            if (false) {}\n            this._key = key;\n            const { pathname  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === (0, _addBasePath).addBasePath(this.asPath) && pathname === (0, _addBasePath).addBasePath(this.pathname)) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change(\"replaceState\", url, as, Object.assign({}, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale,\n                // @ts-ignore internal value not exposed on types\n                _h: 0\n            }), forcedScroll);\n        };\n        // represents the current component key\n        const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== \"/_error\") {\n            this.components[route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP\n            };\n        }\n        this.components[\"/_app\"] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.basePath =  false || \"\";\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isLocaleDomain = false;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !true);\n        if (false) {}\n        this.state = {\n            route,\n            pathname: pathname1,\n            query: query1,\n            asPath: autoExportDynamic ? pathname1 : as1,\n            isPreview: !!isPreview,\n            locale:  false ? 0 : undefined,\n            isFallback\n        };\n        this._initialMatchesMiddlewarePromise = Promise.resolve(false);\n        if (false) {}\n    }\n}\nRouter.events = (0, _mitt).default();\nexports[\"default\"] = Router; //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./theme.config.jsx":
/*!**************************!*\
  !*** ./theme.config.jsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    logo: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n        children: \"TurboCore Docs\"\n    }, void 0, false, {\n        fileName: \"/Users/sami/TurboCore/docs/theme.config.jsx\",\n        lineNumber: 2,\n        columnNumber: 9\n    }, undefined),\n    project: {\n        link: \"https://blog.samiyousef.ca\"\n    },\n    useNextSeoProps () {\n        return {\n            titleTemplate: \"%s - TurboCore\",\n            description: \"API documentation for TurboCore\"\n        };\n    },\n    darkMode: true,\n    primaryHue: 212,\n    footer: {\n        text: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n            children: [\n                new Date().getFullYear(),\n                \" \\xa9 TurboCore.\"\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/sami/TurboCore/docs/theme.config.jsx\",\n            lineNumber: 15,\n            columnNumber: 11\n        }, undefined)\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90aGVtZS5jb25maWcuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxpRUFBZTtJQUNiQSxvQkFBTSw4REFBQ0M7a0JBQUc7Ozs7OztJQUNWQyxTQUFTO1FBQ1BDLE1BQU07SUFDUjtJQUNBQyxtQkFBa0I7UUFDakIsT0FBTztZQUNMQyxlQUFlO1lBQ2ZDLGFBQWE7UUFDZjtJQUNEO0lBQ0FDLFVBQVUsSUFBSTtJQUNkQyxZQUFZO0lBQ1pDLFFBQVE7UUFDTkMsb0JBQU0sOERBQUNDOztnQkFDSixJQUFJQyxPQUFPQyxXQUFXO2dCQUFHOzs7Ozs7O0lBRTlCO0FBRUYsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3RoZW1lLmNvbmZpZy5qc3g/OWNiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvZ286IDxoMT5UdXJib0NvcmUgRG9jczwvaDE+LFxuICBwcm9qZWN0OiB7XG4gICAgbGluazogJ2h0dHBzOi8vYmxvZy5zYW1peW91c2VmLmNhJyxcbiAgfSxcbiAgdXNlTmV4dFNlb1Byb3BzKCkge1xuXHQgIHJldHVybiB7XG5cdCAgICB0aXRsZVRlbXBsYXRlOiAnJXMgLSBUdXJib0NvcmUnLFxuXHQgICAgZGVzY3JpcHRpb246ICdBUEkgZG9jdW1lbnRhdGlvbiBmb3IgVHVyYm9Db3JlJ1xuXHQgIH1cbiAgfSxcbiAgZGFya01vZGU6IHRydWUsXG4gIHByaW1hcnlIdWU6IDIxMixcbiAgZm9vdGVyOiB7XG4gICAgdGV4dDogPHNwYW4+XG4gICAgICB7bmV3IERhdGUoKS5nZXRGdWxsWWVhcigpfSDCqSBUdXJib0NvcmUuXG4gICAgPC9zcGFuPixcbiAgfVxuICAvLyBodHRwczovL25leHRyYS5zaXRlL2RvY3MvZG9jcy10aGVtZS90aGVtZS1jb25maWd1cmF0aW9uXG59XG4iXSwibmFtZXMiOlsibG9nbyIsImgxIiwicHJvamVjdCIsImxpbmsiLCJ1c2VOZXh0U2VvUHJvcHMiLCJ0aXRsZVRlbXBsYXRlIiwiZGVzY3JpcHRpb24iLCJkYXJrTW9kZSIsInByaW1hcnlIdWUiLCJmb290ZXIiLCJ0ZXh0Iiwic3BhbiIsIkRhdGUiLCJnZXRGdWxsWWVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./theme.config.jsx\n");

/***/ }),

/***/ "./pages/using-the-api.mdx":
/*!*********************************!*\
  !*** ./pages/using-the-api.mdx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ nextra_layout__WEBPACK_IMPORTED_MODULE_7__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var nextra_setup_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nextra/setup-page */ \"nextra/setup-page\");\n/* harmony import */ var nextra_theme_docs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! nextra-theme-docs */ \"./node_modules/nextra-theme-docs/dist/index.js\");\n/* harmony import */ var _Users_sami_TurboCore_docs_theme_config_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./theme.config.jsx */ \"./theme.config.jsx\");\n/* harmony import */ var nextra_theme_docs_style_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! nextra-theme-docs/style.css */ \"./node_modules/nextra-theme-docs/style.css\");\n/* harmony import */ var nextra_theme_docs_style_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(nextra_theme_docs_style_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var nextra_mdx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! nextra/mdx */ \"nextra/mdx\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var nextra_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! nextra/layout */ \"nextra/layout\");\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([nextra_setup_page__WEBPACK_IMPORTED_MODULE_1__, nextra_mdx__WEBPACK_IMPORTED_MODULE_4__, nextra_theme_docs__WEBPACK_IMPORTED_MODULE_6__, nextra_layout__WEBPACK_IMPORTED_MODULE_7__]);\n([nextra_setup_page__WEBPACK_IMPORTED_MODULE_1__, nextra_mdx__WEBPACK_IMPORTED_MODULE_4__, nextra_theme_docs__WEBPACK_IMPORTED_MODULE_6__, nextra_layout__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/*@jsxRuntime automatic @jsxImportSource react*/ \n\n\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        p: \"p\",\n        h2: \"h2\",\n        code: \"code\",\n        pre: \"pre\",\n        span: \"span\",\n        a: \"a\",\n        strong: \"strong\"\n    }, (0,nextra_mdx__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(), props.components);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h1, {\n                children: \"Using the REST API\"\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 22,\n                columnNumber: 12\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"It's possible to use the REST API for interacting with TurboCore, but it's recommended that you use one of the client libraries instead.\"\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 22,\n                columnNumber: 73\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                id: \"authentication\",\n                children: \"Authentication\"\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 22,\n                columnNumber: 250\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: [\n                    \"Most endpoints require that you pass a JWT in the \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"Authorization\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 22,\n                        columnNumber: 396\n                    }, this),\n                    \" header. Endpoints that require authentication will be marked with a \\uD83D\\uDD12. The JWT should be passed as a \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"Bearer\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 22,\n                        columnNumber: 557\n                    }, this),\n                    \" token. Here is an example of how to pass a JWT in a \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"GET\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 22,\n                        columnNumber: 661\n                    }, this),\n                    \" request:\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 22,\n                columnNumber: 327\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                \"data-language\": \"bash\",\n                \"data-theme\": \"default\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    \"data-language\": \"bash\",\n                    \"data-theme\": \"default\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \"curl \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 22,\n                                    columnNumber: 894\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string)\"\n                                    },\n                                    children: \"-X\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 24,\n                                    columnNumber: 34\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \" \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 26,\n                                    columnNumber: 31\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string)\"\n                                    },\n                                    children: \"GET\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 28,\n                                    columnNumber: 30\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \" \\\\\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 30,\n                                    columnNumber: 32\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 22,\n                            columnNumber: 859\n                        }, this),\n                        \"\\n\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \"  \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 32,\n                                    columnNumber: 92\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string)\"\n                                    },\n                                    children: \"https://[DOMAIN]/api/auth/user\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 34,\n                                    columnNumber: 31\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \" \\\\\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 36,\n                                    columnNumber: 59\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 32,\n                            columnNumber: 57\n                        }, this),\n                        \"\\n\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \"  \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 38,\n                                    columnNumber: 92\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string)\"\n                                    },\n                                    children: \"-H\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 40,\n                                    columnNumber: 31\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \" \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 42,\n                                    columnNumber: 31\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string-expression)\"\n                                    },\n                                    children: \"'Authorization: Bearer <JWT>'\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 44,\n                                    columnNumber: 30\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 38,\n                            columnNumber: 57\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                    lineNumber: 22,\n                    columnNumber: 799\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 22,\n                columnNumber: 740\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: [\n                    \"You can get a JWT by making a \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"POST\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 46,\n                        columnNumber: 169\n                    }, this),\n                    \" request to \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"/api/auth/login\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 46,\n                        columnNumber: 230\n                    }, this),\n                    \" as described in \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.a, {\n                        href: \"/auth/rest\",\n                        children: \"Authentication\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 46,\n                        columnNumber: 307\n                    }, this),\n                    \".\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 46,\n                columnNumber: 120\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                id: \"handling-errors\",\n                children: \"Handling Errors\"\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 46,\n                columnNumber: 401\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: [\n                    \"The REST API will return a \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"200 OK\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 46,\n                        columnNumber: 526\n                    }, this),\n                    \" response for successful requests, and a \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"400 Bad Request\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 46,\n                        columnNumber: 618\n                    }, this),\n                    \" response for requests that fail. Successful\\nrequests will return a JSON body with the response data, and failed requests will return a JSON body with an error code and human readable\\nmessage. Here is an example of a failed authentication request:\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 46,\n                columnNumber: 480\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                \"data-language\": \"json\",\n                \"data-theme\": \"default\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    \"data-language\": \"json\",\n                    \"data-theme\": \"default\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                style: {\n                                    color: \"var(--shiki-color-text)\"\n                                },\n                                children: \"{\"\n                            }, void 0, false, {\n                                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                lineNumber: 46,\n                                columnNumber: 1103\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 46,\n                            columnNumber: 1068\n                        }, this),\n                        \"\\n\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \"    \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 48,\n                                    columnNumber: 90\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-keyword)\"\n                                    },\n                                    children: '\"code\"'\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 50,\n                                    columnNumber: 33\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-punctuation)\"\n                                    },\n                                    children: \":\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 52,\n                                    columnNumber: 37\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \" \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 54,\n                                    columnNumber: 30\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string-expression)\"\n                                    },\n                                    children: '\"INVALID_CREDENTIALS\"'\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 56,\n                                    columnNumber: 30\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-punctuation)\"\n                                    },\n                                    children: \",\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 58,\n                                    columnNumber: 52\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 48,\n                            columnNumber: 55\n                        }, this),\n                        \"\\n\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \"    \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 60,\n                                    columnNumber: 90\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-keyword)\"\n                                    },\n                                    children: '\"message\"'\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 62,\n                                    columnNumber: 33\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-punctuation)\"\n                                    },\n                                    children: \":\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 64,\n                                    columnNumber: 40\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-color-text)\"\n                                    },\n                                    children: \" \"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 66,\n                                    columnNumber: 30\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                    style: {\n                                        color: \"var(--shiki-token-string-expression)\"\n                                    },\n                                    children: '\"The email or password is incorrect.\"'\n                                }, void 0, false, {\n                                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                    lineNumber: 68,\n                                    columnNumber: 30\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 60,\n                            columnNumber: 55\n                        }, this),\n                        \"\\n\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                            className: \"line\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.span, {\n                                style: {\n                                    color: \"var(--shiki-color-text)\"\n                                },\n                                children: \"}\"\n                            }, void 0, false, {\n                                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                                lineNumber: 70,\n                                columnNumber: 128\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 70,\n                            columnNumber: 93\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                    lineNumber: 46,\n                    columnNumber: 1008\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 46,\n                columnNumber: 949\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(nextra_theme_docs__WEBPACK_IMPORTED_MODULE_6__.Callout, {\n                emoji: \"ℹ️\",\n                type: \"info\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                    children: \"You should always check the HTTP status code of the response to determine how to handle the response.\"\n                }, void 0, false, {\n                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                    lineNumber: 72,\n                    columnNumber: 124\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 72,\n                columnNumber: 92\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                id: \"admin-endpoints\",\n                children: \"Admin Endpoints\"\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 72,\n                columnNumber: 276\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: [\n                    \"The REST API has a few endpoints that should only be used on the server side and never on the client. These endpoints are prefixed with \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"/api/admin/\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 72,\n                        columnNumber: 510\n                    }, this),\n                    \". All of these endpoints require an admin token to be passed in the \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                        children: \"Authorization\"\n                    }, void 0, false, {\n                        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                        lineNumber: 72,\n                        columnNumber: 634\n                    }, this),\n                    \" header.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 72,\n                columnNumber: 355\n            }, this),\n            \"\\n\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(nextra_theme_docs__WEBPACK_IMPORTED_MODULE_6__.Callout, {\n                emoji: \"\\uD83D\\uDEAB\",\n                type: \"error\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                            children: \"Warning:\"\n                        }, void 0, false, {\n                            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                            lineNumber: 72,\n                            columnNumber: 770\n                        }, this),\n                        \" Using these endpoints on the client side gives anyone who has access to your client code the ability to perform any action on your TurboCore instance. This includes creating, updating, and deleting any user, and creating, updating, and deleting any data.\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                    lineNumber: 72,\n                    columnNumber: 755\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n                lineNumber: 72,\n                columnNumber: 722\n            }, this)\n        ]\n    }, void 0, true);\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout  } = Object.assign({}, (0,nextra_mdx__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(), props.components);\n    return MDXLayout ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MDXLayout, {\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_createMdxContent, {\n            ...props\n        }, void 0, false, {\n            fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n            lineNumber: 76,\n            columnNumber: 44\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/sami/TurboCore/docs/pages/using-the-api.mdx\",\n        lineNumber: 76,\n        columnNumber: 22\n    }, this) : _createMdxContent(props);\n}\n\n(0,nextra_setup_page__WEBPACK_IMPORTED_MODULE_1__.setupNextraPage)({\n    Content: MDXContent,\n    nextraLayout: nextra_theme_docs__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    hot: module.hot,\n    pageOpts: {\n        \"filePath\": \"pages/using-the-api.mdx\",\n        \"route\": \"/using-the-api\",\n        \"frontMatter\": {},\n        \"pageMap\": [\n            {\n                \"kind\": \"Meta\",\n                \"data\": {\n                    \"index\": \"Home\",\n                    \"getting-started\": \"Getting Started\",\n                    \"using-the-api\": \"Using the REST API\",\n                    \"auth\": \"Authentication\"\n                }\n            },\n            {\n                \"kind\": \"Folder\",\n                \"name\": \"auth\",\n                \"route\": \"/auth\",\n                \"children\": [\n                    {\n                        \"kind\": \"Meta\",\n                        \"data\": {\n                            \"js\": \"JavaScript Client\",\n                            \"cpp\": \"C++ Client\",\n                            \"java\": \"Java Client\",\n                            \"swift\": \"Swift Client\",\n                            \"python\": \"Python Client\",\n                            \"rest\": \"REST Endpoints\"\n                        }\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"cpp\",\n                        \"route\": \"/auth/cpp\"\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"java\",\n                        \"route\": \"/auth/java\"\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"js\",\n                        \"route\": \"/auth/js\"\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"python\",\n                        \"route\": \"/auth/python\"\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"rest\",\n                        \"route\": \"/auth/rest\"\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"swift\",\n                        \"route\": \"/auth/swift\"\n                    }\n                ]\n            },\n            {\n                \"kind\": \"Folder\",\n                \"name\": \"getting-started\",\n                \"route\": \"/getting-started\",\n                \"children\": [\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"Configuration\",\n                        \"route\": \"/getting-started/Configuration\"\n                    },\n                    {\n                        \"kind\": \"MdxPage\",\n                        \"name\": \"Installation\",\n                        \"route\": \"/getting-started/Installation\"\n                    },\n                    {\n                        \"kind\": \"Meta\",\n                        \"data\": {\n                            \"Configuration\": \"Configuration\",\n                            \"Installation\": \"Installation\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"kind\": \"MdxPage\",\n                \"name\": \"index\",\n                \"route\": \"/\"\n            },\n            {\n                \"kind\": \"MdxPage\",\n                \"name\": \"using-the-api\",\n                \"route\": \"/using-the-api\"\n            }\n        ],\n        \"headings\": [\n            {\n                \"depth\": 1,\n                \"value\": \"Using the REST API\",\n                \"id\": \"using-the-rest-api\"\n            },\n            {\n                \"depth\": 2,\n                \"value\": \"Authentication\",\n                \"id\": \"authentication\"\n            },\n            {\n                \"depth\": 2,\n                \"value\": \"Handling Errors\",\n                \"id\": \"handling-errors\"\n            },\n            {\n                \"depth\": 2,\n                \"value\": \"Admin Endpoints\",\n                \"id\": \"admin-endpoints\"\n            }\n        ],\n        \"timestamp\": 1676355403000,\n        \"flexsearch\": {\n            \"codeblocks\": true\n        },\n        \"title\": \"Using the REST API\"\n    },\n    themeConfig: _Users_sami_TurboCore_docs_theme_config_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    pageNextRoute: \"/using-the-api\",\n    pageOptsChecksum: \"0000000f214b923\",\n    dynamicMetaModules:  true ? [] : 0\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/using-the-api.mdx\n");

/***/ }),

/***/ "./node_modules/nextra-theme-docs/style.css":
/*!**************************************************!*\
  !*** ./node_modules/nextra-theme-docs/style.css ***!
  \**************************************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/next/dist/lib/is-api-route.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/lib/is-api-route.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isAPIRoute = isAPIRoute;\nfunction isAPIRoute(value) {\n    return value === \"/api\" || Boolean(value == null ? void 0 : value.startsWith(\"/api/\"));\n}\n\n//# sourceMappingURL=is-api-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1hcGktcm91dGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtYXBpLXJvdXRlLmpzPzE2ODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmlzQVBJUm91dGUgPSBpc0FQSVJvdXRlO1xuZnVuY3Rpb24gaXNBUElSb3V0ZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gXCIvYXBpXCIgfHwgQm9vbGVhbih2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUuc3RhcnRzV2l0aChcIi9hcGkvXCIpKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtYXBpLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-api-route.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === \"object\" && err !== null && \"name\" in err && \"message\" in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === \"undefined\") {\n            return new Error(\"An undefined error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n        if (err === null) {\n            return new Error(\"A null error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + \"\");\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLG9FQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL2lzLWVycm9yLmpzPzE3OGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc0Vycm9yO1xuZXhwb3J0cy5nZXRQcm9wZXJFcnJvciA9IGdldFByb3BlckVycm9yO1xudmFyIF9pc1BsYWluT2JqZWN0ID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvaXMtcGxhaW4tb2JqZWN0XCIpO1xuZnVuY3Rpb24gaXNFcnJvcihlcnIpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVyciA9PT0gXCJvYmplY3RcIiAmJiBlcnIgIT09IG51bGwgJiYgXCJuYW1lXCIgaW4gZXJyICYmIFwibWVzc2FnZVwiIGluIGVycjtcbn1cbmZ1bmN0aW9uIGdldFByb3BlckVycm9yKGVycikge1xuICAgIGlmIChpc0Vycm9yKGVycikpIHtcbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIpIHtcbiAgICAgICAgLy8gcHJvdmlkZSBiZXR0ZXIgZXJyb3IgZm9yIGNhc2Ugd2hlcmUgYHRocm93IHVuZGVmaW5lZGBcbiAgICAgICAgLy8gaXMgY2FsbGVkIGluIGRldmVsb3BtZW50XG4gICAgICAgIGlmICh0eXBlb2YgZXJyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiQW4gdW5kZWZpbmVkIGVycm9yIHdhcyB0aHJvd24sIFwiICsgXCJzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVyciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkEgbnVsbCBlcnJvciB3YXMgdGhyb3duLCBcIiArIFwic2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgRXJyb3IoKDAsIF9pc1BsYWluT2JqZWN0KS5pc1BsYWluT2JqZWN0KGVycikgPyBKU09OLnN0cmluZ2lmeShlcnIpIDogZXJyICsgXCJcIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/image.js":
/*!************************************!*\
  !*** ./node_modules/next/image.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/image */ \"./node_modules/next/dist/client/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyR0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcz8wNTM1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9pbWFnZScpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/image.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0L2xpbmsuanM/NzViMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvbGluaycpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "./node_modules/nextra-theme-docs/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/nextra-theme-docs/dist/index.js ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bleed\": () => (/* binding */ Bleed),\n/* harmony export */   \"Callout\": () => (/* binding */ Callout),\n/* harmony export */   \"Collapse\": () => (/* binding */ Collapse),\n/* harmony export */   \"Navbar\": () => (/* binding */ Navbar),\n/* harmony export */   \"NotFoundPage\": () => (/* binding */ NotFoundPage),\n/* harmony export */   \"ServerSideErrorPage\": () => (/* binding */ ServerSideErrorPage),\n/* harmony export */   \"SkipNavContent\": () => (/* binding */ SkipNavContent),\n/* harmony export */   \"SkipNavLink\": () => (/* binding */ SkipNavLink),\n/* harmony export */   \"Tab\": () => (/* binding */ Tab),\n/* harmony export */   \"Tabs\": () => (/* binding */ Tabs),\n/* harmony export */   \"ThemeSwitch\": () => (/* binding */ ThemeSwitch),\n/* harmony export */   \"default\": () => (/* binding */ Layout),\n/* harmony export */   \"useConfig\": () => (/* binding */ useConfig),\n/* harmony export */   \"useMDXComponents\": () => (/* reexport safe */ nextra_mdx__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents),\n/* harmony export */   \"useTheme\": () => (/* reexport safe */ next_themes__WEBPACK_IMPORTED_MODULE_9__.useTheme)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! focus-visible */ \"focus-visible\");\n/* harmony import */ var focus_visible__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(focus_visible__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"clsx\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var nextra_mdx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! nextra/mdx */ \"nextra/mdx\");\n/* harmony import */ var nextra_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! nextra/hooks */ \"nextra/hooks\");\n/* harmony import */ var next_package_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/package.json */ \"./node_modules/next/package.json\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next-themes */ \"next-themes\");\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_themes__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var nextra_icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! nextra/icons */ \"nextra/icons\");\n/* harmony import */ var git_url_parse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! git-url-parse */ \"git-url-parse\");\n/* harmony import */ var git_url_parse__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(git_url_parse__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @popperjs/core */ \"@popperjs/core\");\n/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_popperjs_core__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var flexsearch__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! flexsearch */ \"flexsearch\");\n/* harmony import */ var flexsearch__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(flexsearch__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _headlessui_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @headlessui/react */ \"@headlessui/react\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_client_add_base_path__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/client/add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\n/* harmony import */ var next_dist_client_add_base_path__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_add_base_path__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_seo__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next-seo */ \"next-seo\");\n/* harmony import */ var next_seo__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_seo__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! scroll-into-view-if-needed */ \"scroll-into-view-if-needed\");\n/* harmony import */ var match_sorter__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! match-sorter */ \"match-sorter\");\n/* harmony import */ var match_sorter__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(match_sorter__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! intersection-observer */ \"intersection-observer\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var nextra_components__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! nextra/components */ \"nextra/components\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([nextra_mdx__WEBPACK_IMPORTED_MODULE_4__, nextra_hooks__WEBPACK_IMPORTED_MODULE_5__, nextra_icons__WEBPACK_IMPORTED_MODULE_10__, _headlessui_react__WEBPACK_IMPORTED_MODULE_14__, scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_19__, zod__WEBPACK_IMPORTED_MODULE_21__, nextra_components__WEBPACK_IMPORTED_MODULE_23__]);\n([nextra_mdx__WEBPACK_IMPORTED_MODULE_4__, nextra_hooks__WEBPACK_IMPORTED_MODULE_5__, nextra_icons__WEBPACK_IMPORTED_MODULE_10__, _headlessui_react__WEBPACK_IMPORTED_MODULE_14__, scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_19__, zod__WEBPACK_IMPORTED_MODULE_21__, nextra_components__WEBPACK_IMPORTED_MODULE_23__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/index.tsx\n\n\n\n\n\n\n\n// src/constants.tsx\n\n\n\n// src/components/anchor.tsx\n\n\n\n\n// src/contexts/active-anchor.tsx\n\n\nvar ActiveAnchorContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nvar SetActiveAnchorContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)((v) => v);\nvar useActiveAnchor = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ActiveAnchorContext);\nvar useSetActiveAnchor = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SetActiveAnchorContext);\nvar ActiveAnchorProvider = ({\n  children\n}) => {\n  const [activeAnchor, setActiveAnchor2] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ActiveAnchorContext.Provider, {\n    value: activeAnchor,\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(SetActiveAnchorContext.Provider, {\n      value: setActiveAnchor2,\n      children\n    })\n  });\n};\n\n// src/contexts/config.tsx\n\n\n\n// src/contexts/menu.ts\n\nvar MenuContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  menu: false,\n  setMenu: () => false\n});\nvar useMenu = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MenuContext);\nvar MenuProvider = MenuContext.Provider;\n\n// src/contexts/config.tsx\n\nvar ConfigContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(__spreadValues({\n  title: \"\",\n  frontMatter: {}\n}, DEFAULT_THEME));\nfunction useConfig() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConfigContext);\n}\nvar theme;\nvar isValidated = false;\nfunction normalizeZodMessage(error) {\n  return error.issues.flatMap((issue) => {\n    const themePath = issue.path.length > 0 && `Path: \"${issue.path.join(\".\")}\"`;\n    const unionErrors = \"unionErrors\" in issue ? issue.unionErrors.map(normalizeZodMessage) : [];\n    return [\n      [issue.message, themePath].filter(Boolean).join(\". \"),\n      ...unionErrors\n    ];\n  }).join(\"\\n\");\n}\nfunction validateMeta(pageMap) {\n  for (const pageMapItem of pageMap) {\n    if (pageMapItem.kind === \"Meta\") {\n      for (const [key, data] of Object.entries(pageMapItem.data)) {\n        try {\n          metaSchema.parse(data);\n        } catch (error) {\n          console.error(\n            `[nextra-theme-docs] Error validating _meta.json file for \"${key}\" property.\n\n${normalizeZodMessage(\n              error\n            )}`\n          );\n        }\n      }\n    } else if (pageMapItem.kind === \"Folder\") {\n      validateMeta(pageMapItem.children);\n    }\n  }\n}\nvar ConfigProvider = ({\n  children,\n  value: { themeConfig, pageOpts }\n}) => {\n  const [menu, setMenu] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  theme || (theme = __spreadValues(__spreadValues({}, DEFAULT_THEME), Object.fromEntries(\n    Object.entries(themeConfig).map(([key, value]) => [\n      key,\n      value && typeof value === \"object\" && DEEP_OBJECT_KEYS.includes(key) ? __spreadValues(__spreadValues({}, DEFAULT_THEME[key]), value) : value\n    ])\n  )));\n  if ( true && !isValidated) {\n    try {\n      themeSchema.parse(theme);\n    } catch (error) {\n      console.error(\n        `[nextra-theme-docs] Error validating theme config file.\n\n${normalizeZodMessage(\n          error\n        )}`\n      );\n    }\n    validateMeta(pageOpts.pageMap);\n    isValidated = true;\n  }\n  const extendedConfig = __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, theme), {\n    flexsearch: pageOpts.flexsearch\n  }), typeof pageOpts.newNextLinkBehavior === \"boolean\" && {\n    newNextLinkBehavior: pageOpts.newNextLinkBehavior\n  }), {\n    title: pageOpts.title,\n    frontMatter: pageOpts.frontMatter\n  });\n  const { nextThemes } = extendedConfig;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(next_themes__WEBPACK_IMPORTED_MODULE_9__.ThemeProvider, {\n    attribute: \"class\",\n    disableTransitionOnChange: true,\n    defaultTheme: nextThemes.defaultTheme,\n    storageKey: nextThemes.storageKey,\n    forcedTheme: nextThemes.forcedTheme,\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ConfigContext.Provider, {\n      value: extendedConfig,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(MenuProvider, {\n        value: { menu, setMenu },\n        children\n      })\n    })\n  });\n};\n\n// src/contexts/details.ts\n\nvar DetailsContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)((v) => v);\nvar useDetails = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DetailsContext);\nvar DetailsProvider = DetailsContext.Provider;\n\n// src/components/anchor.tsx\n\nvar nextVersion = Number(next_package_json__WEBPACK_IMPORTED_MODULE_6__.version.split(\".\")[0]);\nvar Anchor = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(_a, forwardedRef) {\n  var _b = _a, { href = \"\", children, newWindow } = _b, props = __objRest(_b, [\"href\", \"children\", \"newWindow\"]);\n  const config = useConfig();\n  if (newWindow) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"a\", __spreadProps(__spreadValues({\n      ref: forwardedRef,\n      href,\n      target: \"_blank\",\n      rel: \"noreferrer\"\n    }, props), {\n      children: [\n        children,\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n          className: \"nx-sr-only\",\n          children: \" (opens in a new tab)\"\n        })\n      ]\n    }));\n  }\n  if (!href) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"a\", __spreadProps(__spreadValues({\n      ref: forwardedRef\n    }, props), {\n      children\n    }));\n  }\n  if (nextVersion > 12 || config.newNextLinkBehavior) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_7___default()), __spreadProps(__spreadValues({\n      ref: forwardedRef,\n      href\n    }, props), {\n      children\n    }));\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_7___default()), {\n    href,\n    passHref: true,\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"a\", __spreadProps(__spreadValues({\n      ref: forwardedRef\n    }, props), {\n      children\n    }))\n  });\n});\nAnchor.displayName = \"Anchor\";\n\n// src/components/banner.tsx\n\n\n\n// src/utils/get-git-issue-url.ts\n\nvar getGitIssueUrl = ({\n  repository = \"\",\n  title,\n  labels\n}) => {\n  const repo = git_url_parse__WEBPACK_IMPORTED_MODULE_11___default()(repository);\n  if (!repo)\n    throw new Error(\"Invalid `docsRepositoryBase` URL!\");\n  if (repo.resource.includes(\"gitlab\")) {\n    return `${repo.protocol}://${repo.resource}/${repo.owner}/${repo.name}/-/issues/new?issue[title]=${encodeURIComponent(title)}`;\n  }\n  if (repo.resource.includes(\"github\")) {\n    return `${repo.protocol}://${repo.resource}/${repo.owner}/${repo.name}/issues/new?title=${encodeURIComponent(title)}&labels=${labels || \"\"}`;\n  }\n  return \"#\";\n};\n\n// src/utils/normalize-pages.ts\nfunction extendMeta(meta = {}, fallback) {\n  if (typeof meta === \"string\") {\n    meta = { title: meta };\n  }\n  const theme2 = Object.assign({}, fallback.theme, meta.theme);\n  return Object.assign({}, fallback, meta, { theme: theme2 });\n}\nfunction findFirstRoute(items) {\n  for (const item of items) {\n    if (item.route)\n      return item.route;\n    if (item.children) {\n      const route = findFirstRoute(item.children);\n      if (route)\n        return route;\n    }\n  }\n}\nfunction normalizePages({\n  list,\n  locale,\n  defaultLocale,\n  route,\n  docsRoot = \"\",\n  underCurrentDocsRoot = false,\n  pageThemeContext = DEFAULT_PAGE_THEME\n}) {\n  let _meta;\n  for (const item of list) {\n    if (item.kind === \"Meta\") {\n      if (item.locale === locale) {\n        _meta = item.data;\n        break;\n      }\n      _meta || (_meta = item.data);\n    }\n  }\n  const meta = _meta || {};\n  const metaKeys = Object.keys(meta);\n  for (const key of metaKeys) {\n    if (typeof meta[key] === \"string\") {\n      meta[key] = {\n        title: meta[key]\n      };\n    }\n  }\n  const directories = [];\n  const flatDirectories = [];\n  const docsDirectories = [];\n  const flatDocsDirectories = [];\n  const topLevelNavbarItems = [];\n  let activeType;\n  let activeIndex = 0;\n  let activeThemeContext = pageThemeContext;\n  let activePath = [];\n  let metaKeyIndex = -1;\n  const fallbackMeta = meta[\"*\"] || {};\n  delete fallbackMeta.title;\n  delete fallbackMeta.href;\n  const items = list.filter(\n    (a) => a.kind !== \"Meta\" && !a.name.startsWith(\"_\") && (!(\"locale\" in a) || !a.locale || [locale, defaultLocale].includes(a.locale))\n  ).sort((a, b) => {\n    const indexA = metaKeys.indexOf(a.name);\n    const indexB = metaKeys.indexOf(b.name);\n    if (indexA === -1 && indexB === -1)\n      return a.name < b.name ? -1 : 1;\n    if (indexA === -1)\n      return 1;\n    if (indexB === -1)\n      return -1;\n    return indexA - indexB;\n  }).flatMap((item) => {\n    const items2 = [];\n    const index = metaKeys.indexOf(item.name);\n    let extendedItem;\n    if (index !== -1) {\n      for (let i = metaKeyIndex + 1; i < index; i++) {\n        const key = metaKeys[i];\n        if (key !== \"*\") {\n          items2.push(__spreadValues({\n            name: key,\n            route: \"\"\n          }, meta[key]));\n        }\n      }\n      metaKeyIndex = index;\n      extendedItem = __spreadValues(__spreadValues({}, meta[item.name]), item);\n    }\n    items2.push(extendedItem || item);\n    return items2;\n  });\n  for (let i = metaKeyIndex + 1; i < metaKeys.length; i++) {\n    const key = metaKeys[i];\n    if (key !== \"*\") {\n      items.push(__spreadValues({\n        name: key,\n        route: \"#\"\n      }, meta[key]));\n    }\n  }\n  for (let i = 0; i < items.length; i++) {\n    const a = items[i];\n    if (i + 1 < items.length && a.name === items[i + 1].name) {\n      items[i + 1] = __spreadProps(__spreadValues({}, items[i + 1]), { withIndexPage: true });\n      if (a.children && !items[i + 1].children) {\n        items[i + 1].children = a.children;\n      }\n      continue;\n    }\n    const extendedMeta = extendMeta(meta[a.name], fallbackMeta);\n    const { display, type = \"doc\" } = extendedMeta;\n    const extendedPageThemeContext = __spreadValues(__spreadValues({}, pageThemeContext), extendedMeta.theme);\n    const isCurrentDocsTree = route.startsWith(docsRoot);\n    const normalizedChildren = a.children && normalizePages({\n      list: a.children,\n      locale,\n      defaultLocale,\n      route,\n      docsRoot: type === \"page\" || type === \"menu\" ? a.route : docsRoot,\n      underCurrentDocsRoot: underCurrentDocsRoot || isCurrentDocsTree,\n      pageThemeContext: extendedPageThemeContext\n    });\n    const title = extendedMeta.title || type !== \"separator\" && a.name;\n    const getItem = () => __spreadValues(__spreadValues(__spreadValues(__spreadProps(__spreadValues({}, a), {\n      type\n    }), title && { title }), display && { display }), normalizedChildren && { children: [] });\n    const item = getItem();\n    const docsItem = getItem();\n    const pageItem = getItem();\n    docsItem.isUnderCurrentDocsTree = isCurrentDocsTree;\n    if (type === \"separator\") {\n      item.isUnderCurrentDocsTree = isCurrentDocsTree;\n    }\n    if (a.route === route) {\n      activePath = [item];\n      activeType = type;\n      activeThemeContext = __spreadValues(__spreadValues({}, activeThemeContext), extendedPageThemeContext);\n      switch (type) {\n        case \"page\":\n        case \"menu\":\n          activeIndex = topLevelNavbarItems.length;\n          break;\n        case \"doc\":\n          activeIndex = flatDocsDirectories.length;\n      }\n    }\n    if (display === \"hidden\" && item.kind !== \"Folder\" || ERROR_ROUTES.has(a.route)) {\n      continue;\n    }\n    if (normalizedChildren) {\n      if (normalizedChildren.activeIndex !== void 0 && normalizedChildren.activeType !== void 0) {\n        activeThemeContext = normalizedChildren.activeThemeContext;\n        activeType = normalizedChildren.activeType;\n        activePath = [item, ...normalizedChildren.activePath];\n        switch (activeType) {\n          case \"page\":\n          case \"menu\":\n            activeIndex = topLevelNavbarItems.length + normalizedChildren.activeIndex;\n            break;\n          case \"doc\":\n            activeIndex = flatDocsDirectories.length + normalizedChildren.activeIndex;\n            break;\n        }\n        if (a.withIndexPage && type === \"doc\") {\n          activeIndex++;\n        }\n      }\n      switch (type) {\n        case \"page\":\n        case \"menu\":\n          pageItem.children.push(...normalizedChildren.directories);\n          docsDirectories.push(...normalizedChildren.docsDirectories);\n          if (normalizedChildren.flatDirectories.length) {\n            pageItem.firstChildRoute = findFirstRoute(\n              normalizedChildren.flatDirectories\n            );\n            topLevelNavbarItems.push(pageItem);\n          } else if (pageItem.withIndexPage) {\n            topLevelNavbarItems.push(pageItem);\n          }\n          break;\n        case \"doc\":\n          if (Array.isArray(docsItem.children)) {\n            docsItem.children.push(...normalizedChildren.docsDirectories);\n          }\n          if (item.withIndexPage && display !== \"children\") {\n            flatDocsDirectories.push(docsItem);\n          }\n      }\n      flatDirectories.push(...normalizedChildren.flatDirectories);\n      flatDocsDirectories.push(...normalizedChildren.flatDocsDirectories);\n      if (Array.isArray(item.children)) {\n        item.children.push(...normalizedChildren.directories);\n      }\n    } else {\n      flatDirectories.push(item);\n      switch (type) {\n        case \"page\":\n        case \"menu\":\n          topLevelNavbarItems.push(pageItem);\n          break;\n        case \"doc\":\n          flatDocsDirectories.push(docsItem);\n      }\n    }\n    if (type === \"doc\" && display === \"children\") {\n      if (docsItem.children) {\n        directories.push(...docsItem.children);\n        docsDirectories.push(...docsItem.children);\n      }\n    } else {\n      directories.push(item);\n    }\n    switch (type) {\n      case \"page\":\n      case \"menu\":\n        docsDirectories.push(pageItem);\n        break;\n      case \"doc\":\n        if (display !== \"children\") {\n          docsDirectories.push(docsItem);\n        }\n        break;\n      case \"separator\":\n        docsDirectories.push(item);\n    }\n  }\n  return {\n    activeType,\n    activeIndex,\n    activeThemeContext,\n    activePath,\n    directories,\n    flatDirectories,\n    docsDirectories,\n    flatDocsDirectories,\n    topLevelNavbarItems\n  };\n}\n\n// src/utils/render.tsx\n\nfunction renderComponent(ComponentOrNode, props) {\n  if (!ComponentOrNode)\n    return null;\n  if (typeof ComponentOrNode !== \"function\")\n    return ComponentOrNode;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ComponentOrNode, __spreadValues({}, props));\n}\nfunction renderString(stringOrFunction, props = {}) {\n  const result = typeof stringOrFunction === \"function\" ? stringOrFunction(props) : stringOrFunction;\n  return result || \"\";\n}\n\n// src/utils/use-popper.ts\n\n\nfunction usePopper(options) {\n  const reference = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const popper = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const cleanupCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  const instantiatePopper = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var _a;\n    if (!reference.current || !popper.current)\n      return;\n    (_a = cleanupCallback.current) == null ? void 0 : _a.call(cleanupCallback);\n    cleanupCallback.current = (0,_popperjs_core__WEBPACK_IMPORTED_MODULE_12__.createPopper)(\n      reference.current,\n      popper.current,\n      options\n    ).destroy;\n  }, [reference, popper, cleanupCallback, options]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => [\n      (referenceDomNode) => {\n        reference.current = referenceDomNode;\n        instantiatePopper();\n      },\n      (popperDomNode) => {\n        popper.current = popperDomNode;\n        instantiatePopper();\n      }\n    ],\n    [reference, popper, instantiatePopper]\n  );\n}\n\n// src/utils/use-git-edit-url.ts\n\nfunction useGitEditUrl(filePath = \"\") {\n  const config = useConfig();\n  const repo = git_url_parse__WEBPACK_IMPORTED_MODULE_11___default()(config.docsRepositoryBase || \"\");\n  if (!repo)\n    throw new Error(\"Invalid `docsRepositoryBase` URL!\");\n  return `${repo.href}/${filePath}`;\n}\n\n// src/utils/use-fs-route.ts\n\n\nvar template = \"https://nextra.vercel.app\";\nvar useFSRoute = () => {\n  const { locale = DEFAULT_LOCALE, asPath, route } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const clientRoute = ERROR_ROUTES.has(route) ? route : asPath;\n    const { pathname } = new URL(clientRoute, template);\n    const cleanedPath = locale ? pathname.replace(new RegExp(`\\\\.${locale}(\\\\/|$)`), \"$1\") : pathname;\n    return cleanedPath.replace(/\\/index(\\/|$)/, \"$1\").split(\"#\")[0] || \"/\";\n  }, [asPath, locale, route]);\n};\n\n// src/components/banner.tsx\n\nfunction Banner() {\n  const { banner } = useConfig();\n  if (!banner.text) {\n    return null;\n  }\n  const hideBannerScript = `try{if(localStorage.getItem(${JSON.stringify(\n    banner.key\n  )})==='0'){document.body.classList.add('nextra-banner-hidden')}}catch(e){}`;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"script\", {\n        dangerouslySetInnerHTML: { __html: hideBannerScript }\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nextra-banner-container nx-sticky nx-top-0 nx-z-20 nx-flex nx-items-center md:nx-relative\",\n          \"nx-h-[var(--nextra-banner-height)] [body.nextra-banner-hidden_&]:nx-hidden\",\n          \"nx-text-slate-50 dark:nx-text-white nx-bg-neutral-900 dark:nx-bg-[linear-gradient(1deg,#383838,#212121)]\",\n          \"nx-px-2 ltr:nx-pl-10 rtl:nx-pr-10\"\n        ),\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n            className: \"nx-w-full nx-truncate nx-px-4 nx-text-center nx-font-medium nx-text-sm\",\n            children: renderComponent(banner.text)\n          }),\n          banner.dismissible && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"button\", {\n            type: \"button\",\n            \"aria-label\": \"Dismiss banner\",\n            className: \"nx-w-8 nx-h-8 nx-opacity-80 hover:nx-opacity-100\",\n            onClick: () => {\n              try {\n                localStorage.setItem(banner.key, \"0\");\n              } catch (e) {\n              }\n              document.body.classList.add(\"nextra-banner-hidden\");\n            },\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.XIcon, {\n              className: \"nx-mx-auto nx-h-4 nx-w-4\"\n            })\n          })\n        ]\n      })\n    ]\n  });\n}\n\n// src/components/bleed.tsx\n\n\nfunction Bleed({\n  full,\n  children\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nextra-bleed nx-relative -nx-mx-6 nx-mt-6 md:-nx-mx-8 2xl:-nx-mx-24\",\n      full && [\n        \"ltr:xl:nx-ml-[calc(50%-50vw+16rem)] ltr:xl:nx-mr-[calc(50%-50vw)]\",\n        \"rtl:xl:nx-ml-[calc(50%-50vw)] rtl:xl:nx-mr-[calc(50%-50vw+16rem)]\"\n      ]\n    ),\n    children\n  });\n}\n\n// src/components/breadcrumb.tsx\n\n\n\n\nfunction Breadcrumb({\n  activePath\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    className: \"nextra-breadcrumb nx-mt-1.5 nx-flex nx-items-center nx-gap-1 nx-overflow-hidden nx-text-sm nx-text-gray-500 contrast-more:nx-text-current\",\n    children: activePath.map((item, index) => {\n      const isLink = !item.children || item.withIndexPage;\n      const isActive = index === activePath.length - 1;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n          index > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.ArrowRightIcon, {\n            className: \"nx-w-3.5 nx-shrink-0\"\n          }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n            className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n              \"nx-whitespace-nowrap nx-transition-colors\",\n              isActive ? \"nx-font-medium nx-text-gray-700 contrast-more:nx-font-bold contrast-more:nx-text-current dark:nx-text-gray-400 contrast-more:dark:nx-text-current\" : [\n                \"nx-min-w-[24px] nx-overflow-hidden nx-text-ellipsis\",\n                isLink && \"hover:nx-text-gray-900 dark:hover:nx-text-gray-200\"\n              ]\n            ),\n            title: item.title,\n            children: isLink && !isActive ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n              href: item.route,\n              children: item.title\n            }) : item.title\n          })\n        ]\n      }, item.route + item.name);\n    })\n  });\n}\n\n// src/components/callout.tsx\n\n\n\nvar TypeToEmoji = {\n  default: \"\\u{1F4A1}\",\n  error: \"\\u{1F6AB}\",\n  info: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.InformationCircleIcon, {\n    className: \"nx-mt-1\"\n  }),\n  warning: \"\\u26A0\\uFE0F\"\n};\nvar classes = {\n  default: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-border-orange-100 nx-bg-orange-50 nx-text-orange-800 dark:nx-border-orange-400/30 dark:nx-bg-orange-400/20 dark:nx-text-orange-300\"\n  ),\n  error: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-border-red-200 nx-bg-red-100 nx-text-red-900 dark:nx-border-red-200/30 dark:nx-bg-red-900/30 dark:nx-text-red-200\"\n  ),\n  info: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-border-blue-200 nx-bg-blue-100 nx-text-blue-900 dark:nx-border-blue-200/30 dark:nx-bg-blue-900/30 dark:nx-text-blue-200\"\n  ),\n  warning: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-border-yellow-100 nx-bg-yellow-50 nx-text-yellow-900 dark:nx-border-yellow-200/30 dark:nx-bg-yellow-700/30 dark:nx-text-yellow-200\"\n  )\n};\nfunction Callout({\n  children,\n  type = \"default\",\n  emoji = TypeToEmoji[type]\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nextra-callout nx-mt-6 nx-flex nx-rounded-lg nx-border nx-py-2 ltr:nx-pr-4 rtl:nx-pl-4\",\n      \"contrast-more:nx-border-current contrast-more:dark:nx-border-current\",\n      classes[type]\n    ),\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: \"nx-select-none nx-text-xl ltr:nx-pl-3 ltr:nx-pr-2 rtl:nx-pr-3 rtl:nx-pl-2\",\n        style: {\n          fontFamily: '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"'\n        },\n        children: emoji\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: \"nx-w-full nx-min-w-0 nx-leading-7\",\n        children\n      })\n    ]\n  });\n}\n\n// src/components/collapse.tsx\n\n\n\nfunction Collapse({\n  children,\n  className,\n  isOpen,\n  horizontal = false\n}) {\n  const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const innerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const initialOpen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isOpen);\n  const initialRender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const container = containerRef.current;\n    const inner = innerRef.current;\n    const animation = animationRef.current;\n    if (animation) {\n      clearTimeout(animation);\n    }\n    if (initialRender.current || !container || !inner)\n      return;\n    container.classList.toggle(\"nx-duration-500\", !isOpen);\n    container.classList.toggle(\"nx-duration-300\", isOpen);\n    if (horizontal) {\n      inner.style.width = `${inner.clientWidth}px`;\n      container.style.width = `${inner.clientWidth}px`;\n    } else {\n      container.style.height = `${inner.clientHeight}px`;\n    }\n    if (isOpen) {\n      animationRef.current = window.setTimeout(() => {\n        container.style.removeProperty(\"height\");\n      }, 300);\n    } else {\n      setTimeout(() => {\n        if (horizontal) {\n          container.style.width = \"0px\";\n        } else {\n          container.style.height = \"0px\";\n        }\n      }, 0);\n    }\n  }, [horizontal, isOpen]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    initialRender.current = false;\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    ref: containerRef,\n    className: \"nx-transform-gpu nx-overflow-hidden nx-transition-all nx-ease-in-out motion-reduce:nx-transition-none\",\n    style: initialOpen.current || horizontal ? void 0 : { height: 0 },\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n      ref: innerRef,\n      className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n        \"nx-transition-opacity nx-duration-500 nx-ease-in-out motion-reduce:nx-transition-none\",\n        isOpen ? \"nx-opacity-100\" : \"nx-opacity-0\",\n        className\n      ),\n      children\n    })\n  });\n}\n\n// src/components/flexsearch.tsx\n\n\n\n\n\n// src/components/search.tsx\n\n\n\n\n\n\n// src/components/input.tsx\n\n\n\nvar Input = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  (_a, forwardedRef) => {\n    var _b = _a, { className, suffix } = _b, props = __objRest(_b, [\"className\", \"suffix\"]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n      className: \"nx-relative nx-flex nx-items-center nx-text-gray-900 contrast-more:nx-text-gray-800 dark:nx-text-gray-300 contrast-more:dark:nx-text-gray-300\",\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"input\", __spreadValues({\n          ref: forwardedRef,\n          spellCheck: false,\n          className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n            className,\n            \"nx-block nx-w-full nx-appearance-none nx-rounded-lg nx-px-3 nx-py-2 nx-transition-colors\",\n            \"nx-text-base nx-leading-tight md:nx-text-sm\",\n            \"nx-bg-black/[.05] dark:nx-bg-gray-50/10\",\n            \"focus:nx-bg-white dark:focus:nx-bg-dark\",\n            \"placeholder:nx-text-gray-500 dark:placeholder:nx-text-gray-400\",\n            \"contrast-more:nx-border contrast-more:nx-border-current\"\n          )\n        }, props)),\n        suffix\n      ]\n    });\n  }\n);\nInput.displayName = \"Input\";\n\n// src/components/search.tsx\n\n\nvar INPUTS = [\"input\", \"select\", \"button\", \"textarea\"];\nfunction Search({\n  className,\n  overlayClassName,\n  value,\n  onChange,\n  onActive,\n  loading,\n  error,\n  results\n}) {\n  const [show, setShow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const config = useConfig();\n  const [active, setActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const { setMenu } = useMenu();\n  const input = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const ulRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setActive(0);\n  }, [value]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const down = (e) => {\n      var _a;\n      const tagName = (_a = document.activeElement) == null ? void 0 : _a.tagName.toLowerCase();\n      if (!input.current || !tagName || INPUTS.includes(tagName))\n        return;\n      if (e.key === \"/\" || e.key === \"k\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n        input.current.focus();\n      } else if (e.key === \"Escape\") {\n        setShow(false);\n        input.current.blur();\n      }\n    };\n    window.addEventListener(\"keydown\", down);\n    return () => {\n      window.removeEventListener(\"keydown\", down);\n    };\n  }, []);\n  const finishSearch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var _a;\n    (_a = input.current) == null ? void 0 : _a.blur();\n    onChange(\"\");\n    setShow(false);\n    setMenu(false);\n  }, [onChange, setMenu]);\n  const handleActive = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (e) => {\n      const { index } = e.currentTarget.dataset;\n      setActive(Number(index));\n    },\n    []\n  );\n  const handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    function(e) {\n      var _a, _b, _c;\n      switch (e.key) {\n        case \"ArrowDown\": {\n          if (active + 1 < results.length) {\n            const el = (_a = ulRef.current) == null ? void 0 : _a.querySelector(\n              `li:nth-of-type(${active + 2}) > a`\n            );\n            if (el) {\n              e.preventDefault();\n              handleActive({ currentTarget: el });\n              el.focus();\n            }\n          }\n          break;\n        }\n        case \"ArrowUp\": {\n          if (active - 1 >= 0) {\n            const el = (_b = ulRef.current) == null ? void 0 : _b.querySelector(\n              `li:nth-of-type(${active}) > a`\n            );\n            if (el) {\n              e.preventDefault();\n              handleActive({ currentTarget: el });\n              el.focus();\n            }\n          }\n          break;\n        }\n        case \"Enter\": {\n          const result = results[active];\n          if (result) {\n            void router.push(result.route);\n            finishSearch();\n          }\n          break;\n        }\n        case \"Escape\": {\n          setShow(false);\n          (_c = input.current) == null ? void 0 : _c.blur();\n          break;\n        }\n      }\n    },\n    [active, results, router, finishSearch, handleActive]\n  );\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  const renderList = show && Boolean(value);\n  const icon = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Transition, {\n    show: mounted && (!show || Boolean(value)),\n    as: react__WEBPACK_IMPORTED_MODULE_0__.Fragment,\n    enter: \"nx-transition-opacity\",\n    enterFrom: \"nx-opacity-0\",\n    enterTo: \"nx-opacity-100\",\n    leave: \"nx-transition-opacity\",\n    leaveFrom: \"nx-opacity-100\",\n    leaveTo: \"nx-opacity-0\",\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"kbd\", {\n      className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n        \"nx-absolute nx-my-1.5 nx-select-none ltr:nx-right-1.5 rtl:nx-left-1.5\",\n        \"nx-h-5 nx-rounded nx-bg-white nx-px-1.5 nx-font-mono nx-text-[10px] nx-font-medium nx-text-gray-500\",\n        \"nx-border dark:nx-border-gray-100/20 dark:nx-bg-dark/50\",\n        \"contrast-more:nx-border-current contrast-more:nx-text-current contrast-more:dark:nx-border-current\",\n        \"nx-items-center nx-gap-1 nx-transition-opacity\",\n        value ? \"nx-z-20 nx-flex nx-cursor-pointer hover:nx-opacity-70\" : \"nx-pointer-events-none nx-hidden sm:nx-flex\"\n      ),\n      title: value ? \"Clear\" : void 0,\n      onClick: () => {\n        onChange(\"\");\n      },\n      children: value ? \"ESC\" : mounted && (navigator.userAgent.includes(\"Macintosh\") ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n            className: \"nx-text-xs\",\n            children: \"\\u2318\"\n          }),\n          \"K\"\n        ]\n      }) : \"CTRL K\")\n    })\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nextra-search nx-relative md:nx-w-64\", className),\n    children: [\n      renderList && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: \"nx-fixed nx-inset-0 nx-z-10\",\n        onClick: () => setShow(false)\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Input, {\n        ref: input,\n        value,\n        onChange: (e) => {\n          const { value: value2 } = e.target;\n          onChange(value2);\n          setShow(Boolean(value2));\n        },\n        onFocus: () => {\n          onActive == null ? void 0 : onActive(true);\n        },\n        type: \"search\",\n        placeholder: renderString(config.search.placeholder),\n        onKeyDown: handleKeyDown,\n        suffix: icon\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Transition, {\n        show: renderList,\n        as: _headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Transition.Child,\n        leave: \"nx-transition-opacity nx-duration-100\",\n        leaveFrom: \"nx-opacity-100\",\n        leaveTo: \"nx-opacity-0\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"ul\", {\n          className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n            \"nextra-scrollbar\",\n            \"nx-border nx-border-gray-200 nx-bg-white nx-text-gray-100 dark:nx-border-neutral-800 dark:nx-bg-neutral-900\",\n            \"nx-absolute nx-top-full nx-z-20 nx-mt-2 nx-overflow-auto nx-overscroll-contain nx-rounded-xl nx-py-2.5 nx-shadow-xl\",\n            \"nx-max-h-[min(calc(50vh-11rem-env(safe-area-inset-bottom)),400px)]\",\n            \"md:nx-max-h-[min(calc(100vh-5rem-env(safe-area-inset-bottom)),400px)]\",\n            \"nx-inset-x-0 ltr:md:nx-left-auto rtl:md:nx-right-auto\",\n            \"contrast-more:nx-border contrast-more:nx-border-gray-900 contrast-more:dark:nx-border-gray-50\",\n            overlayClassName\n          ),\n          ref: ulRef,\n          style: {\n            transition: \"max-height .2s ease\"\n          },\n          children: error ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"span\", {\n            className: \"nx-flex nx-select-none nx-justify-center nx-gap-2 nx-p-8 nx-text-center nx-text-sm nx-text-red-500\",\n            children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.InformationCircleIcon, {\n                className: \"nx-h-5 nx-w-5\"\n              }),\n              renderString(config.search.error)\n            ]\n          }) : loading ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"span\", {\n            className: \"nx-flex nx-select-none nx-justify-center nx-gap-2 nx-p-8 nx-text-center nx-text-sm nx-text-gray-400\",\n            children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.SpinnerIcon, {\n                className: \"nx-h-5 nx-w-5 nx-animate-spin\"\n              }),\n              renderString(config.search.loading)\n            ]\n          }) : results.length > 0 ? results.map(({ route, prefix, children, id }, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n              prefix,\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"li\", {\n                className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                  \"nx-mx-2.5 nx-break-words nx-rounded-md\",\n                  \"contrast-more:nx-border\",\n                  i === active ? \"nx-bg-primary-500/10 nx-text-primary-600 contrast-more:nx-border-primary-500\" : \"nx-text-gray-800 contrast-more:nx-border-transparent dark:nx-text-gray-300\"\n                ),\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n                  className: \"nx-block nx-scroll-m-12 nx-px-2.5 nx-py-2\",\n                  href: route,\n                  \"data-index\": i,\n                  onFocus: handleActive,\n                  onMouseMove: handleActive,\n                  onClick: finishSearch,\n                  onKeyDown: handleKeyDown,\n                  children\n                })\n              })\n            ]\n          }, id)) : renderComponent(config.search.emptyResult)\n        })\n      })\n    ]\n  });\n}\n\n// src/components/highlight-matches.tsx\n\n\nvar HighlightMatches = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function HighlightMatches2({\n  value,\n  match\n}) {\n  const splitText = value ? value.split(\"\") : [];\n  const escapedSearch = match.trim().replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n  const regexp = RegExp(\"(\" + escapedSearch.replaceAll(\" \", \"|\") + \")\", \"ig\");\n  let result;\n  let id = 0;\n  let index = 0;\n  const res = [];\n  if (value) {\n    while ((result = regexp.exec(value)) !== null) {\n      res.push(\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          children: [\n            splitText.splice(0, result.index - index).join(\"\"),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n              className: \"nx-text-primary-600\",\n              children: splitText.splice(0, regexp.lastIndex - result.index).join(\"\")\n            })\n          ]\n        }, id++)\n      );\n      index = regexp.lastIndex;\n    }\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      res,\n      splitText.join(\"\")\n    ]\n  });\n});\n\n// src/components/flexsearch.tsx\n\nvar indexes = {};\nvar loadIndexesPromises = /* @__PURE__ */ new Map();\nvar loadIndexes = (basePath, locale) => {\n  const key = basePath + \"@\" + locale;\n  if (loadIndexesPromises.has(key)) {\n    return loadIndexesPromises.get(key);\n  }\n  const promise = loadIndexesImpl(basePath, locale);\n  loadIndexesPromises.set(key, promise);\n  return promise;\n};\nvar loadIndexesImpl = (basePath, locale) => __async(void 0, null, function* () {\n  const response = yield fetch(\n    `${basePath}/_next/static/chunks/nextra-data-${locale}.json`\n  );\n  const data = yield response.json();\n  const pageIndex = new (flexsearch__WEBPACK_IMPORTED_MODULE_13___default().Document)({\n    cache: 100,\n    tokenize: \"full\",\n    document: {\n      id: \"id\",\n      index: \"content\",\n      store: [\"title\"]\n    },\n    context: {\n      resolution: 9,\n      depth: 2,\n      bidirectional: true\n    }\n  });\n  const sectionIndex = new (flexsearch__WEBPACK_IMPORTED_MODULE_13___default().Document)({\n    cache: 100,\n    tokenize: \"full\",\n    document: {\n      id: \"id\",\n      index: \"content\",\n      tag: \"pageId\",\n      store: [\"title\", \"content\", \"url\", \"display\"]\n    },\n    context: {\n      resolution: 9,\n      depth: 2,\n      bidirectional: true\n    }\n  });\n  let pageId = 0;\n  for (const route in data) {\n    let pageContent = \"\";\n    ++pageId;\n    for (const heading in data[route].data) {\n      const [hash, text] = heading.split(\"#\");\n      const url = route + (hash ? \"#\" + hash : \"\");\n      const title = text || data[route].title;\n      const content = data[route].data[heading] || \"\";\n      const paragraphs = content.split(\"\\n\").filter(Boolean);\n      sectionIndex.add(__spreadValues({\n        id: url,\n        url,\n        title,\n        pageId: `page_${pageId}`,\n        content: title\n      }, paragraphs[0] && { display: paragraphs[0] }));\n      for (let i = 0; i < paragraphs.length; i++) {\n        sectionIndex.add({\n          id: `${url}_${i}`,\n          url,\n          title,\n          pageId: `page_${pageId}`,\n          content: paragraphs[i]\n        });\n      }\n      pageContent += ` ${title} ${content}`;\n    }\n    pageIndex.add({\n      id: pageId,\n      title: data[route].title,\n      content: pageContent\n    });\n  }\n  indexes[locale] = [pageIndex, sectionIndex];\n});\nfunction Flexsearch({\n  className\n}) {\n  const { locale = DEFAULT_LOCALE, basePath } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [results, setResults] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const doSearch = (search2) => {\n    var _a, _b;\n    if (!search2)\n      return;\n    const [pageIndex, sectionIndex] = indexes[locale];\n    const pageResults = ((_a = pageIndex.search(search2, 5, {\n      enrich: true,\n      suggest: true\n    })[0]) == null ? void 0 : _a.result) || [];\n    const results2 = [];\n    const pageTitleMatches = {};\n    for (let i = 0; i < pageResults.length; i++) {\n      const result = pageResults[i];\n      pageTitleMatches[i] = 0;\n      const sectionResults = ((_b = sectionIndex.search(search2, 5, {\n        enrich: true,\n        suggest: true,\n        tag: `page_${result.id}`\n      })[0]) == null ? void 0 : _b.result) || [];\n      let isFirstItemOfPage = true;\n      const occurred = {};\n      for (let j = 0; j < sectionResults.length; j++) {\n        const { doc } = sectionResults[j];\n        const isMatchingTitle = doc.display !== void 0;\n        if (isMatchingTitle) {\n          pageTitleMatches[i]++;\n        }\n        const { url, title } = doc;\n        const content = doc.display || doc.content;\n        if (occurred[url + \"@\" + content])\n          continue;\n        occurred[url + \"@\" + content] = true;\n        results2.push({\n          _page_rk: i,\n          _section_rk: j,\n          route: url,\n          prefix: isFirstItemOfPage && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n            className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n              \"nx-mx-2.5 nx-mb-2 nx-mt-6 nx-select-none nx-border-b nx-border-black/10 nx-px-2.5 nx-pb-1.5 nx-text-xs nx-font-semibold nx-uppercase nx-text-gray-500 first:nx-mt-0 dark:nx-border-white/20 dark:nx-text-gray-300\",\n              \"contrast-more:nx-border-gray-600 contrast-more:nx-text-gray-900 contrast-more:dark:nx-border-gray-50 contrast-more:dark:nx-text-gray-50\"\n            ),\n            children: result.doc.title\n          }),\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n            children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n                className: \"nx-text-base nx-font-semibold nx-leading-5\",\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HighlightMatches, {\n                  match: search2,\n                  value: title\n                })\n              }),\n              content && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n                className: \"excerpt nx-mt-1 nx-text-sm nx-leading-[1.35rem] nx-text-gray-600 dark:nx-text-gray-400 contrast-more:dark:nx-text-gray-50\",\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HighlightMatches, {\n                  match: search2,\n                  value: content\n                })\n              })\n            ]\n          })\n        });\n        isFirstItemOfPage = false;\n      }\n    }\n    setResults(\n      results2.sort((a, b) => {\n        if (a._page_rk === b._page_rk) {\n          return a._section_rk - b._section_rk;\n        }\n        if (pageTitleMatches[a._page_rk] !== pageTitleMatches[b._page_rk]) {\n          return pageTitleMatches[b._page_rk] - pageTitleMatches[a._page_rk];\n        }\n        return a._page_rk - b._page_rk;\n      }).map((res) => ({\n        id: `${res._page_rk}_${res._section_rk}`,\n        route: res.route,\n        prefix: res.prefix,\n        children: res.children\n      }))\n    );\n  };\n  const preload = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (active) => __async(this, null, function* () {\n      if (active && !indexes[locale]) {\n        setLoading(true);\n        try {\n          yield loadIndexes(basePath, locale);\n        } catch (e) {\n          setError(true);\n        }\n        setLoading(false);\n      }\n    }),\n    [locale, basePath]\n  );\n  const handleChange = (value) => __async(this, null, function* () {\n    setSearch(value);\n    if (loading) {\n      return;\n    }\n    if (!indexes[locale]) {\n      setLoading(true);\n      try {\n        yield loadIndexes(basePath, locale);\n      } catch (e) {\n        setError(true);\n      }\n      setLoading(false);\n    }\n    doSearch(value);\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Search, {\n    loading,\n    error,\n    value: search,\n    onChange: handleChange,\n    onActive: preload,\n    className,\n    overlayClassName: \"nx-w-screen nx-min-h-[100px] nx-max-w-[min(calc(100vw-2rem),calc(100%+20rem))]\",\n    results\n  });\n}\n\n// src/components/footer.tsx\n\n\n// src/components/locale-switch.tsx\n\n\n// src/components/select.tsx\n\n\n\n\n\n\nfunction Select({\n  options,\n  selected,\n  onChange,\n  title,\n  className\n}) {\n  const [trigger, container] = usePopper({\n    strategy: \"fixed\",\n    placement: \"top-start\",\n    modifiers: [\n      { name: \"offset\", options: { offset: [0, 10] } },\n      {\n        name: \"sameWidth\",\n        enabled: true,\n        fn({ state }) {\n          state.styles.popper.minWidth = `${state.rects.reference.width}px`;\n        },\n        phase: \"beforeWrite\",\n        requires: [\"computeStyles\"]\n      }\n    ]\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Listbox, {\n    value: selected,\n    onChange,\n    children: ({ open }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Listbox.Button, {\n      ref: trigger,\n      title,\n      className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n        \"nx-h-7 nx-rounded-md nx-px-2 nx-text-left nx-text-xs nx-font-medium nx-text-gray-600 nx-transition-colors dark:nx-text-gray-400\",\n        open ? \"nx-bg-gray-200 nx-text-gray-900 dark:nx-bg-primary-100/10 dark:nx-text-gray-50\" : \"hover:nx-bg-gray-100 hover:nx-text-gray-900 dark:hover:nx-bg-primary-100/5 dark:hover:nx-text-gray-50\",\n        className\n      ),\n      children: [\n        selected.name,\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Portal, {\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Transition, {\n            ref: container,\n            show: open,\n            as: _headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Listbox.Options,\n            className: \"nx-z-20 nx-max-h-64 nx-overflow-auto nx-rounded-md nx-ring-1 nx-ring-black/5 nx-bg-white nx-py-1 nx-text-sm nx-shadow-lg dark:nx-ring-white/20 dark:nx-bg-neutral-800\",\n            leave: \"nx-transition-opacity\",\n            leaveFrom: \"nx-opacity-100\",\n            leaveTo: \"nx-opacity-0\",\n            children: options.map((option) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Listbox.Option, {\n              value: option,\n              className: ({ active }) => clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                active ? \"nx-bg-primary-50 nx-text-primary-600 dark:nx-bg-primary-500/10\" : \"nx-text-gray-800 dark:nx-text-gray-100\",\n                \"nx-relative nx-cursor-pointer nx-whitespace-nowrap nx-py-1.5\",\n                \"nx-transition-colors ltr:nx-pl-3 ltr:nx-pr-9 rtl:nx-pr-3 rtl:nx-pl-9\"\n              ),\n              children: [\n                option.name,\n                option.key === selected.key && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n                  className: \"nx-absolute nx-inset-y-0 nx-flex nx-items-center ltr:nx-right-3 rtl:nx-left-3\",\n                  children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.CheckIcon, {})\n                })\n              ]\n            }, option.key))\n          })\n        })\n      ]\n    })\n  });\n}\nfunction Portal(props) {\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  if (!mounted)\n    return null;\n  return (0,react_dom__WEBPACK_IMPORTED_MODULE_15__.createPortal)(props.children, document.body);\n}\n\n// src/components/locale-switch.tsx\n\n\n\nfunction LocaleSwitch({\n  options,\n  lite,\n  className\n}) {\n  const { locale, asPath } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const selected = options.find((l) => locale === l.locale);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Select, {\n    title: \"Change language\",\n    className,\n    onChange: (option) => {\n      const date = new Date(Date.now() + 365 * 24 * 60 * 60 * 1e3);\n      document.cookie = `NEXT_LOCALE=${option.key}; expires=${date.toUTCString()}; path=/`;\n      location.href = (0,next_dist_client_add_base_path__WEBPACK_IMPORTED_MODULE_16__.addBasePath)(asPath);\n    },\n    selected: {\n      key: (selected == null ? void 0 : selected.locale) || \"\",\n      name: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n        className: \"nx-flex nx-items-center nx-gap-2\",\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.GlobeIcon, {}),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n            className: lite ? \"nx-hidden\" : \"\",\n            children: selected == null ? void 0 : selected.text\n          })\n        ]\n      })\n    },\n    options: options.map((l) => ({\n      key: l.locale,\n      name: l.text\n    }))\n  });\n}\n\n// src/components/theme-switch.tsx\n\n\n\n\n\nvar OPTIONS = [\n  { key: \"light\", name: \"Light\" },\n  { key: \"dark\", name: \"Dark\" },\n  { key: \"system\", name: \"System\" }\n];\nfunction ThemeSwitch({\n  lite,\n  className\n}) {\n  const { setTheme, resolvedTheme, theme: theme2 = \"\" } = (0,next_themes__WEBPACK_IMPORTED_MODULE_9__.useTheme)();\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  const IconToUse = mounted && resolvedTheme === \"dark\" ? nextra_icons__WEBPACK_IMPORTED_MODULE_10__.MoonIcon : nextra_icons__WEBPACK_IMPORTED_MODULE_10__.SunIcon;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nx-relative\", className),\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Select, {\n      title: \"Change theme\",\n      className: \"nx-w-full\",\n      options: OPTIONS,\n      onChange: (option) => {\n        setTheme(option.key);\n      },\n      selected: {\n        key: theme2,\n        name: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n          className: \"nx-flex nx-items-center nx-gap-2 nx-capitalize\",\n          children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(IconToUse, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n              className: lite ? \"md:nx-hidden\" : \"\",\n              children: mounted ? theme2 : \"light\"\n            })\n          ]\n        })\n      }\n    })\n  });\n}\n\n// src/components/footer.tsx\n\nfunction Footer({ menu }) {\n  const config = useConfig();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"footer\", {\n    className: \"nx-bg-gray-100 nx-pb-[env(safe-area-inset-bottom)] dark:nx-bg-neutral-900\",\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nx-mx-auto nx-flex nx-max-w-[90rem] nx-gap-2 nx-py-2 nx-px-4\",\n          menu ? \"nx-flex\" : \"nx-hidden\"\n        ),\n        children: [\n          config.i18n.length > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(LocaleSwitch, {\n            options: config.i18n\n          }),\n          config.darkMode && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ThemeSwitch, {})\n        ]\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"hr\", {\n        className: \"dark:nx-border-neutral-800\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nx-mx-auto nx-flex nx-max-w-[90rem] nx-justify-center nx-py-12 nx-text-gray-600 dark:nx-text-gray-400 md:nx-justify-start\",\n          \"nx-pl-[max(env(safe-area-inset-left),1.5rem)] nx-pr-[max(env(safe-area-inset-right),1.5rem)]\"\n        ),\n        children: renderComponent(config.footer.text)\n      })\n    ]\n  });\n}\n\n// src/components/head.tsx\n\n\n\n\n\nfunction Head() {\n  var _a;\n  const config = useConfig();\n  const { resolvedTheme } = (0,next_themes__WEBPACK_IMPORTED_MODULE_9__.useTheme)();\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  const head = typeof config.head === \"function\" ? config.head({}) : config.head;\n  const hue = config.primaryHue;\n  const { dark: darkHue, light: lightHue } = typeof hue === \"number\" ? { dark: hue, light: hue } : hue;\n  const frontMatter = config.frontMatter;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(next_seo__WEBPACK_IMPORTED_MODULE_18__.NextSeo, __spreadValues({\n        title: config.title,\n        description: frontMatter.description,\n        canonical: frontMatter.canonical,\n        openGraph: frontMatter.openGraph\n      }, (_a = config.useNextSeoProps) == null ? void 0 : _a.call(config))),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)((next_head__WEBPACK_IMPORTED_MODULE_17___default()), {\n        children: [\n          config.faviconGlyph ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"link\", {\n            rel: \"icon\",\n            href: `data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text x='50' y='.9em' font-size='90' text-anchor='middle'>${config.faviconGlyph}</text><style>text{font-family:system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";fill:black}@media(prefers-color-scheme:dark){text{fill:white}}</style></svg>`\n          }) : null,\n          mounted ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n            name: \"theme-color\",\n            content: resolvedTheme === \"dark\" ? \"#111\" : \"#fff\"\n          }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n            children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n                name: \"theme-color\",\n                content: \"#fff\",\n                media: \"(prefers-color-scheme: light)\"\n              }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n                name: \"theme-color\",\n                content: \"#111\",\n                media: \"(prefers-color-scheme: dark)\"\n              })\n            ]\n          }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width, initial-scale=1.0, viewport-fit=cover\"\n          }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"style\", {\n            children: `\n        :root {\n          --nextra-primary-hue: ${lightHue}deg;\n          --nextra-navbar-height: 4rem;\n          --nextra-menu-height: 3.75rem;\n          --nextra-banner-height: 2.5rem;\n        }\n        \n        .dark {\n          --nextra-primary-hue: ${darkHue}deg;\n        }\n      `\n          }),\n          head\n        ]\n      })\n    ]\n  });\n}\n\n// src/components/nav-links.tsx\n\n\n\nvar classes2 = {\n  link: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-flex nx-max-w-[50%] nx-items-center nx-gap-1 nx-py-4 nx-text-base nx-font-medium nx-text-gray-600 nx-transition-colors [word-break:break-word] hover:nx-text-primary-600 dark:nx-text-gray-300 md:nx-text-lg\"\n  ),\n  icon: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nx-inline nx-h-5 nx-shrink-0\")\n};\nvar NavLinks = ({\n  flatDirectories,\n  currentIndex\n}) => {\n  const config = useConfig();\n  const nav = config.navigation;\n  const navigation = typeof nav === \"boolean\" ? { prev: nav, next: nav } : nav;\n  let prev = navigation.prev && flatDirectories[currentIndex - 1];\n  let next2 = navigation.next && flatDirectories[currentIndex + 1];\n  if (prev && !prev.isUnderCurrentDocsTree)\n    prev = false;\n  if (next2 && !next2.isUnderCurrentDocsTree)\n    next2 = false;\n  if (!prev && !next2)\n    return null;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nx-mb-8 nx-flex nx-items-center nx-border-t nx-pt-8 dark:nx-border-neutral-800\",\n      \"contrast-more:nx-border-neutral-400 dark:contrast-more:nx-border-neutral-400\"\n    ),\n    children: [\n      prev && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Anchor, {\n        href: prev.route,\n        title: prev.title,\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes2.link, \"ltr:nx-pr-4 rtl:nx-pl-4\"),\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.ArrowRightIcon, {\n            className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes2.icon, \"ltr:nx-rotate-180\")\n          }),\n          prev.title\n        ]\n      }),\n      next2 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Anchor, {\n        href: next2.route,\n        title: next2.title,\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          classes2.link,\n          \"ltr:nx-ml-auto ltr:nx-pl-4 ltr:nx-text-right rtl:nx-mr-auto rtl:nx-pr-4 rtl:nx-text-left\"\n        ),\n        children: [\n          next2.title,\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.ArrowRightIcon, {\n            className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes2.icon, \"rtl:nx-rotate-180\")\n          })\n        ]\n      })\n    ]\n  });\n};\n\n// src/components/navbar.tsx\n\n\n\n\nvar classes3 = {\n  link: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-text-sm contrast-more:nx-text-gray-700 contrast-more:dark:nx-text-gray-100\"\n  ),\n  active: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nx-font-medium nx-subpixel-antialiased\"),\n  inactive: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-text-gray-600 hover:nx-text-gray-800 dark:nx-text-gray-400 dark:hover:nx-text-gray-200\"\n  )\n};\nfunction NavbarMenu({\n  className,\n  menu,\n  children\n}) {\n  const { items } = menu;\n  const routes = Object.fromEntries(\n    (menu.children || []).map((route) => [route.name, route])\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    className: \"nx-relative nx-inline-block\",\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Menu, {\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Menu.Button, {\n          className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n            className,\n            \"-nx-ml-2 nx-hidden nx-items-center nx-whitespace-nowrap nx-rounded nx-p-2 md:nx-inline-flex\",\n            classes3.inactive\n          ),\n          children\n        }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Transition, {\n          leave: \"nx-transition-opacity\",\n          leaveFrom: \"nx-opacity-100\",\n          leaveTo: \"nx-opacity-0\",\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Menu.Items, {\n            className: \"nx-absolute nx-right-0 nx-z-20 nx-mt-1 nx-max-h-64 nx-min-w-full nx-overflow-auto nx-rounded-md nx-ring-1 nx-ring-black/5 nx-bg-white nx-py-1 nx-text-sm nx-shadow-lg dark:nx-ring-white/20 dark:nx-bg-neutral-800\",\n            tabIndex: 0,\n            children: Object.entries(items || {}).map(([key, item]) => {\n              var _a;\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Menu.Item, {\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n                  href: item.href || ((_a = routes[key]) == null ? void 0 : _a.route) || menu.route + \"/\" + key,\n                  className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                    \"nx-relative nx-hidden nx-w-full nx-select-none nx-whitespace-nowrap nx-text-gray-600 hover:nx-text-gray-900 dark:nx-text-gray-400 dark:hover:nx-text-gray-100 md:nx-inline-block\",\n                    \"nx-py-1.5 nx-transition-colors ltr:nx-pl-3 ltr:nx-pr-9 rtl:nx-pr-3 rtl:nx-pl-9\"\n                  ),\n                  newWindow: item.newWindow,\n                  children: item.title || key\n                })\n              }, key);\n            })\n          })\n        })\n      ]\n    })\n  });\n}\nfunction Navbar({ flatDirectories, items }) {\n  const config = useConfig();\n  const activeRoute = useFSRoute();\n  const { menu, setMenu } = useMenu();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n    className: \"nextra-nav-container nx-sticky nx-top-0 nx-z-20 nx-w-full nx-bg-transparent\",\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nextra-nav-container-blur\",\n          \"nx-pointer-events-none nx-absolute nx-z-[-1] nx-h-full nx-w-full nx-bg-white dark:nx-bg-dark\",\n          \"nx-shadow-[0_2px_4px_rgba(0,0,0,.02),0_1px_0_rgba(0,0,0,.06)] dark:nx-shadow-[0_-1px_0_rgba(255,255,255,.1)_inset]\",\n          \"contrast-more:nx-shadow-[0_0_0_1px_#000] contrast-more:dark:nx-shadow-[0_0_0_1px_#fff]\"\n        )\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"nav\", {\n        className: \"nx-mx-auto nx-flex nx-h-[var(--nextra-navbar-height)] nx-max-w-[90rem] nx-items-center nx-justify-end nx-gap-2 nx-pl-[max(env(safe-area-inset-left),1.5rem)] nx-pr-[max(env(safe-area-inset-right),1.5rem)]\",\n        children: [\n          config.logoLink ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n            href: typeof config.logoLink === \"string\" ? config.logoLink : \"/\",\n            className: \"nx-flex nx-items-center hover:nx-opacity-75 ltr:nx-mr-auto rtl:nx-ml-auto\",\n            children: renderComponent(config.logo)\n          }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n            className: \"nx-flex nx-items-center ltr:nx-mr-auto rtl:nx-ml-auto\",\n            children: renderComponent(config.logo)\n          }),\n          items.map((pageOrMenu) => {\n            if (pageOrMenu.display === \"hidden\")\n              return null;\n            if (pageOrMenu.type === \"menu\") {\n              const menu2 = pageOrMenu;\n              const isActive2 = menu2.route === activeRoute || activeRoute.startsWith(menu2.route + \"/\");\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(NavbarMenu, {\n                className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                  classes3.link,\n                  \"nx-flex nx-gap-1\",\n                  isActive2 ? classes3.active : classes3.inactive\n                ),\n                menu: menu2,\n                children: [\n                  menu2.title,\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.ArrowRightIcon, {\n                    className: \"nx-h-[18px] nx-min-w-[18px] nx-rounded-sm nx-p-0.5\",\n                    pathClassName: \"nx-origin-center nx-transition-transform nx-rotate-90\"\n                  })\n                ]\n              }, menu2.title);\n            }\n            const page = pageOrMenu;\n            let href = page.href || page.route || \"#\";\n            if (page.children) {\n              href = (page.withIndexPage ? page.route : page.firstChildRoute) || href;\n            }\n            const isActive = page.route === activeRoute || activeRoute.startsWith(page.route + \"/\");\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Anchor, {\n              href,\n              className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                classes3.link,\n                \"nx-relative -nx-ml-2 nx-hidden nx-whitespace-nowrap nx-p-2 md:nx-inline-block\",\n                !isActive || page.newWindow ? classes3.inactive : classes3.active\n              ),\n              newWindow: page.newWindow,\n              \"aria-current\": !page.newWindow && isActive,\n              children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n                  className: \"nx-absolute nx-inset-x-0 nx-text-center\",\n                  children: page.title\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n                  className: \"nx-invisible nx-font-medium\",\n                  children: page.title\n                })\n              ]\n            }, href);\n          }),\n          renderComponent(config.search.component, {\n            directories: flatDirectories,\n            className: \"nx-hidden md:nx-inline-block mx-min-w-[200px]\"\n          }),\n          config.project.link ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n            className: \"nx-p-2 nx-text-current\",\n            href: config.project.link,\n            newWindow: true,\n            children: renderComponent(config.project.icon)\n          }) : null,\n          config.chat.link ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n            className: \"nx-p-2 nx-text-current\",\n            href: config.chat.link,\n            newWindow: true,\n            children: renderComponent(config.chat.icon)\n          }) : null,\n          renderComponent(config.navbar.extraContent),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"button\", {\n            type: \"button\",\n            \"aria-label\": \"Menu\",\n            className: \"nextra-hamburger -nx-mr-2 nx-rounded nx-p-2 active:nx-bg-gray-400/20 md:nx-hidden\",\n            onClick: () => setMenu(!menu),\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.MenuIcon, {\n              className: clsx__WEBPACK_IMPORTED_MODULE_3___default()({ open: menu })\n            })\n          })\n        ]\n      })\n    ]\n  });\n}\n\n// src/components/not-found.tsx\n\n\n\nfunction NotFoundPage() {\n  const config = useConfig();\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  const { asPath } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const { content, labels } = config.notFound;\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", {\n    className: \"nx-text-center\",\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n      href: getGitIssueUrl({\n        repository: config.docsRepositoryBase,\n        title: `Found broken \\`${mounted ? asPath : \"\"}\\` link. Please fix!`,\n        labels\n      }),\n      newWindow: true,\n      className: \"nx-text-primary-600 nx-underline nx-decoration-from-font [text-underline-position:from-font]\",\n      children: renderComponent(content)\n    })\n  });\n}\n\n// src/components/server-side-error.tsx\n\n\n\nfunction ServerSideErrorPage() {\n  const config = useConfig();\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  const { asPath } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const { content, labels } = config.serverSideError;\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", {\n    className: \"nx-text-center\",\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n      href: getGitIssueUrl({\n        repository: config.docsRepositoryBase,\n        title: `Got server-side error in \\`${mounted ? asPath : \"\"}\\` url. Please fix!`,\n        labels\n      }),\n      newWindow: true,\n      className: \"nx-text-primary-600 nx-underline nx-decoration-from-font [text-underline-position:from-font]\",\n      children: renderComponent(content)\n    })\n  });\n}\n\n// src/components/sidebar.tsx\n\n\n\n\n\n\nvar TreeState = /* @__PURE__ */ Object.create(null);\nvar FocusedItemContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar OnFocuseItemContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar FolderLevelContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(0);\nvar Folder = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function FolderInner(props) {\n  const level = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FolderLevelContext);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(FolderLevelContext.Provider, {\n    value: level + 1,\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(FolderImpl, __spreadValues({}, props))\n  });\n});\nvar classes4 = {\n  link: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-flex nx-rounded nx-px-2 nx-py-1.5 nx-text-sm nx-transition-colors [word-break:break-word]\",\n    \"nx-cursor-pointer [-webkit-tap-highlight-color:transparent] [-webkit-touch-callout:none] contrast-more:nx-border\"\n  ),\n  inactive: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-text-gray-500 hover:nx-bg-gray-100 hover:nx-text-gray-900\",\n    \"dark:nx-text-neutral-500 dark:hover:nx-bg-primary-100/5 dark:hover:nx-text-gray-50\",\n    \"contrast-more:nx-text-gray-900 contrast-more:dark:nx-text-gray-50\",\n    \"contrast-more:nx-border-transparent contrast-more:hover:nx-border-gray-900 contrast-more:dark:hover:nx-border-gray-50\"\n  ),\n  active: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-bg-primary-50 nx-font-semibold nx-text-primary-600 dark:nx-bg-primary-500/10\",\n    \"contrast-more:nx-border-primary-500 contrast-more:dark:nx-border-primary-500\"\n  ),\n  list: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nx-flex nx-flex-col nx-gap-1\"),\n  border: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-relative before:nx-absolute before:nx-inset-y-1\",\n    'before:nx-w-px before:nx-bg-gray-200 before:nx-content-[\"\"] dark:before:nx-bg-neutral-800',\n    \"ltr:nx-pl-3 ltr:before:nx-left-0 rtl:nx-pr-3 rtl:before:nx-right-0\"\n  )\n};\nfunction FolderImpl({ item, anchors }) {\n  const routeOriginal = useFSRoute();\n  const [route] = routeOriginal.split(\"#\");\n  const active = [route, route + \"/\"].includes(item.route + \"/\");\n  const activeRouteInside = active || route.startsWith(item.route + \"/\");\n  const focusedRoute = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FocusedItemContext);\n  const focusedRouteInside = !!(focusedRoute == null ? void 0 : focusedRoute.startsWith(item.route + \"/\"));\n  const level = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FolderLevelContext);\n  const { setMenu } = useMenu();\n  const config = useConfig();\n  const { theme: theme2 } = item;\n  const open = TreeState[item.route] === void 0 ? active || activeRouteInside || focusedRouteInside || (theme2 && \"collapsed\" in theme2 ? !theme2.collapsed : level < config.sidebar.defaultMenuCollapseLevel) : TreeState[item.route] || focusedRouteInside;\n  const rerender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({})[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (activeRouteInside || focusedRouteInside) {\n      TreeState[item.route] = true;\n    }\n  }, [activeRouteInside, focusedRouteInside, item.route]);\n  if (item.type === \"menu\") {\n    const menu = item;\n    const routes = Object.fromEntries(\n      (menu.children || []).map((route2) => [route2.name, route2])\n    );\n    item.children = Object.entries(menu.items || {}).map(([key, item2]) => {\n      const route2 = routes[key] || __spreadProps(__spreadValues({\n        name: key\n      }, \"locale\" in menu && { locale: menu.locale }), {\n        route: menu.route + \"/\" + key\n      });\n      return __spreadValues(__spreadValues({}, route2), item2);\n    });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"li\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()({ open, active }),\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Anchor, {\n        href: item.withIndexPage ? item.route : \"\",\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nx-items-center nx-justify-between nx-gap-2\",\n          classes4.link,\n          active ? classes4.active : classes4.inactive\n        ),\n        onClick: (e) => {\n          const clickedToggleIcon = [\"svg\", \"path\"].includes(\n            e.target.tagName.toLowerCase()\n          );\n          if (clickedToggleIcon) {\n            e.preventDefault();\n          }\n          if (item.withIndexPage) {\n            if (active || clickedToggleIcon) {\n              TreeState[item.route] = !open;\n            } else {\n              TreeState[item.route] = true;\n              setMenu(false);\n            }\n            rerender({});\n            return;\n          }\n          if (active)\n            return;\n          TreeState[item.route] = !open;\n          rerender({});\n        },\n        children: [\n          renderComponent(config.sidebar.titleComponent, {\n            title: item.title,\n            type: item.type,\n            route: item.route\n          }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.ArrowRightIcon, {\n            className: \"nx-h-[18px] nx-min-w-[18px] nx-rounded-sm nx-p-0.5 hover:nx-bg-gray-800/5 dark:hover:nx-bg-gray-100/5\",\n            pathClassName: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n              \"nx-origin-center nx-transition-transform rtl:-nx-rotate-180\",\n              open && \"ltr:nx-rotate-90 rtl:nx-rotate-[-270deg]\"\n            )\n          })\n        ]\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Collapse, {\n        className: \"ltr:nx-pr-0 rtl:nx-pl-0 nx-pt-1\",\n        isOpen: open,\n        children: Array.isArray(item.children) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Menu2, {\n          className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes4.border, \"ltr:nx-ml-3 rtl:nx-mr-3\"),\n          directories: item.children,\n          base: item.route,\n          anchors\n        }) : null\n      })\n    ]\n  });\n}\nfunction Separator({ title }) {\n  const config = useConfig();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"li\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"[word-break:break-word]\",\n      title ? \"nx-mt-5 nx-mb-2 nx-px-2 nx-py-1.5 nx-text-sm nx-font-semibold nx-text-gray-900 first:nx-mt-0 dark:nx-text-gray-100\" : \"nx-my-4\"\n    ),\n    children: title ? renderComponent(config.sidebar.titleComponent, {\n      title,\n      type: \"separator\",\n      route: \"\"\n    }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"hr\", {\n      className: \"nx-mx-2 nx-border-t nx-border-gray-200 dark:nx-border-primary-100/10\"\n    })\n  });\n}\nfunction File({\n  item,\n  anchors\n}) {\n  const route = useFSRoute();\n  const onFocus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(OnFocuseItemContext);\n  const active = item.route && [route, route + \"/\"].includes(item.route + \"/\");\n  const activeAnchor = useActiveAnchor();\n  const { setMenu } = useMenu();\n  const config = useConfig();\n  if (item.type === \"separator\") {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Separator, {\n      title: item.title\n    });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"li\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes4.list, { active }),\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n        href: item.href || item.route,\n        newWindow: item.newWindow,\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes4.link, active ? classes4.active : classes4.inactive),\n        onClick: () => {\n          setMenu(false);\n        },\n        onFocus: () => {\n          onFocus == null ? void 0 : onFocus(item.route);\n        },\n        onBlur: () => {\n          onFocus == null ? void 0 : onFocus(null);\n        },\n        children: renderComponent(config.sidebar.titleComponent, {\n          title: item.title,\n          type: item.type,\n          route: item.route\n        })\n      }),\n      active && anchors.length > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"ul\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          classes4.list,\n          classes4.border,\n          \"ltr:nx-ml-3 rtl:nx-mr-3\"\n        ),\n        children: anchors.map(({ id, value }) => {\n          var _a;\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"li\", {\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"a\", {\n              href: `#${id}`,\n              className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                classes4.link,\n                'nx-flex nx-gap-2 before:nx-opacity-25 before:nx-content-[\"#\"]',\n                ((_a = activeAnchor[id]) == null ? void 0 : _a.isActive) ? classes4.active : classes4.inactive\n              ),\n              onClick: () => {\n                setMenu(false);\n              },\n              children: value\n            })\n          }, id);\n        })\n      })\n    ]\n  });\n}\nfunction Menu2({\n  directories,\n  anchors,\n  className,\n  onlyCurrentDocs\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"ul\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes4.list, className),\n    children: directories.map(\n      (item) => !onlyCurrentDocs || item.isUnderCurrentDocsTree ? item.type === \"menu\" || item.children && (item.children.length || !item.withIndexPage) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Folder, {\n        item,\n        anchors\n      }, item.name) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(File, {\n        item,\n        anchors\n      }, item.name) : null\n    )\n  });\n}\nfunction Sidebar({\n  docsDirectories,\n  flatDirectories,\n  fullDirectories,\n  asPopover = false,\n  headings,\n  includePlaceholder\n}) {\n  const config = useConfig();\n  const { menu, setMenu } = useMenu();\n  const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const [focused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [showSidebar, setSidebar] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n  const [showToggleAnimation, setToggleAnimation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const anchors = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => headings.filter((v) => v.depth === 2), [headings]);\n  const sidebarRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (menu) {\n      document.body.classList.add(\"nx-overflow-hidden\", \"md:nx-overflow-auto\");\n    } else {\n      document.body.classList.remove(\n        \"nx-overflow-hidden\",\n        \"md:nx-overflow-auto\"\n      );\n    }\n  }, [menu]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var _a;\n    const activeElement = (_a = sidebarRef.current) == null ? void 0 : _a.querySelector(\"li.active\");\n    if (activeElement && (window.innerWidth > 767 || menu)) {\n      const scroll = () => {\n        (0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(activeElement, {\n          block: \"center\",\n          inline: \"center\",\n          scrollMode: \"always\",\n          boundary: containerRef.current\n        });\n      };\n      if (menu) {\n        setTimeout(scroll, 300);\n      } else {\n        scroll();\n      }\n    }\n  }, [menu]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setMenu(false);\n  }, [router.asPath, setMenu]);\n  const hasI18n = config.i18n.length > 0;\n  const hasMenu = config.darkMode || hasI18n;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      includePlaceholder && asPopover ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: \"max-xl:nx-hidden nx-h-0 nx-w-64 nx-shrink-0\"\n      }) : null,\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"motion-reduce:nx-transition-none [transition:background-color_1.5s_ease]\",\n          menu ? \"nx-fixed nx-inset-0 nx-z-10 nx-bg-black/80 dark:nx-bg-black/60\" : \"nx-bg-transparent\"\n        ),\n        onClick: () => setMenu(false)\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"aside\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nextra-sidebar-container nx-flex nx-flex-col\",\n          \"md:nx-top-16 md:nx-shrink-0 motion-reduce:nx-transform-none\",\n          \"nx-transform-gpu nx-transition-all nx-ease-in-out\",\n          showSidebar ? \"md:nx-w-64\" : \"md:nx-w-20\",\n          asPopover ? \"md:nx-hidden\" : \"md:nx-sticky md:nx-self-start\",\n          menu ? \"max-md:[transform:translate3d(0,0,0)]\" : \"max-md:[transform:translate3d(0,-100%,0)]\"\n        ),\n        ref: containerRef,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n            className: \"nx-px-4 nx-pt-4 md:nx-hidden\",\n            children: renderComponent(config.search.component, {\n              directories: flatDirectories\n            })\n          }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(FocusedItemContext.Provider, {\n            value: focused,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(OnFocuseItemContext.Provider, {\n              value: (item) => {\n                setFocused(item);\n              },\n              children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n                className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                  \"nx-overflow-y-auto nx-p-4\",\n                  \"nx-grow md:nx-h-[calc(100vh-var(--nextra-navbar-height)-var(--nextra-menu-height))]\",\n                  showSidebar ? \"nextra-scrollbar nx-pr-2\" : \"no-scrollbar\"\n                ),\n                ref: sidebarRef,\n                children: [\n                  !asPopover && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Collapse, {\n                    isOpen: showSidebar,\n                    horizontal: true,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Menu2, {\n                      className: \"max-md:nx-hidden\",\n                      directories: docsDirectories,\n                      anchors: config.toc.float ? [] : anchors,\n                      onlyCurrentDocs: true\n                    })\n                  }),\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Menu2, {\n                    className: \"md:nx-hidden\",\n                    directories: fullDirectories,\n                    anchors\n                  })\n                ]\n              })\n            })\n          }),\n          hasMenu && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n            className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n              \"nx-sticky nx-bottom-0\",\n              \"nx-bg-white dark:nx-bg-dark\",\n              \"nx-mx-4 nx-py-4 nx-shadow-[0_-12px_16px_#fff]\",\n              \"nx-flex nx-items-center nx-gap-2\",\n              \"dark:nx-border-neutral-800 dark:nx-shadow-[0_-12px_16px_#111]\",\n              \"contrast-more:nx-border-neutral-400 contrast-more:nx-shadow-none contrast-more:dark:nx-shadow-none\",\n              showSidebar ? clsx__WEBPACK_IMPORTED_MODULE_3___default()(hasI18n && \"nx-justify-end\", \"nx-border-t\") : \"nx-py-4 nx-flex-wrap nx-justify-center\"\n            ),\n            \"data-toggle-animation\": showToggleAnimation ? showSidebar ? \"show\" : \"hide\" : \"off\",\n            children: [\n              hasI18n && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(LocaleSwitch, {\n                options: config.i18n,\n                lite: !showSidebar,\n                className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(showSidebar ? \"nx-grow\" : \"max-md:nx-grow\")\n              }),\n              config.darkMode && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ThemeSwitch, {\n                lite: !showSidebar || hasI18n,\n                className: showSidebar && !hasI18n ? \"nx-grow\" : \"\"\n              }),\n              config.sidebar.toggleButton && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"button\", {\n                title: showSidebar ? \"Hide sidebar\" : \"Show sidebar\",\n                className: \"max-md:nx-hidden nx-h-7 nx-rounded-md nx-transition-colors nx-text-gray-600 dark:nx-text-gray-400 nx-px-2 hover:nx-bg-gray-100 hover:nx-text-gray-900 dark:hover:nx-bg-primary-100/5 dark:hover:nx-text-gray-50\",\n                onClick: () => {\n                  setSidebar(!showSidebar);\n                  setToggleAnimation(true);\n                },\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.ExpandIcon, {\n                  isOpen: showSidebar\n                })\n              })\n            ]\n          })\n        ]\n      })\n    ]\n  });\n}\n\n// src/components/skip-nav.tsx\n\n\n\nvar DEFAULT_ID = \"reach-skip-nav\";\nvar DEFAULT_LABEL = \"Skip to content\";\nvar SkipNavLink = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  function(_a, forwardedRef) {\n    var _b = _a, {\n      className: providedClassName,\n      id,\n      label = DEFAULT_LABEL,\n      styled\n    } = _b, props = __objRest(_b, [\n      \"className\",\n      \"id\",\n      \"label\",\n      \"styled\"\n    ]);\n    const className = providedClassName === void 0 ? styled ? clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nx-sr-only\",\n      \"focus:nx-not-sr-only focus:nx-fixed focus:nx-z-50 focus:nx-m-3 focus:nx-ml-4 focus:nx-h-[calc(var(--nextra-navbar-height)-1.5rem)] focus:nx-rounded-lg focus:nx-border focus:nx-px-3 focus:nx-py-2 focus:nx-align-middle focus:nx-text-sm focus:nx-font-bold\",\n      \"focus:nx-text-gray-900 focus:dark:nx-text-gray-100\",\n      \"focus:nx-bg-white focus:dark:nx-bg-neutral-900\",\n      \"focus:nx-border-neutral-400 focus:dark:nx-border-neutral-800\"\n    ) : \"\" : providedClassName;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"a\", __spreadProps(__spreadValues({}, props), {\n      ref: forwardedRef,\n      href: `#${id || DEFAULT_ID}`,\n      className,\n      \"data-reach-skip-link\": \"\",\n      children: label\n    }));\n  }\n);\nSkipNavLink.displayName = \"SkipNavLink\";\nvar SkipNavContent = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  function(_a, forwardedRef) {\n    var _b = _a, { id } = _b, props = __objRest(_b, [\"id\"]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", __spreadProps(__spreadValues({}, props), {\n      ref: forwardedRef,\n      id: id || DEFAULT_ID\n    }));\n  }\n);\nSkipNavContent.displayName = \"SkipNavContent\";\n\n// src/components/tabs.tsx\n\n\n\nfunction isTabItem(item) {\n  if (item && typeof item === \"object\" && \"label\" in item)\n    return true;\n  return false;\n}\nvar renderTab = (item) => {\n  if (isTabItem(item)) {\n    return item.label;\n  }\n  return item;\n};\nfunction Tabs({\n  items,\n  selectedIndex,\n  defaultIndex,\n  onChange,\n  children\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Tab.Group, {\n    selectedIndex,\n    defaultIndex,\n    onChange,\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: \"nextra-scrollbar nx-overflow-x-auto nx-overflow-y-hidden nx-overscroll-x-contain\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Tab.List, {\n          className: \"nx-mt-4 nx-flex nx-w-max nx-min-w-full nx-border-b nx-border-gray-200 nx-pb-px dark:nx-border-neutral-800\",\n          children: items.map((item, index) => {\n            const disabled = !!(item && typeof item === \"object\" && \"disabled\" in item && item.disabled);\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Tab, {\n              disabled,\n              className: ({ selected }) => clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                \"nx-mr-2 nx-rounded-t nx-p-2 nx-font-medium nx-leading-5 nx-transition-colors\",\n                \"-nx-mb-0.5 nx-select-none nx-border-b-2\",\n                selected ? \"nx-border-primary-500 nx-text-primary-600\" : \"nx-border-transparent nx-text-gray-600 hover:nx-border-gray-200 hover:nx-text-black dark:nx-text-gray-200 dark:hover:nx-border-neutral-800 dark:hover:nx-text-white\",\n                disabled && \"nx-pointer-events-none nx-text-gray-400 dark:nx-text-neutral-600\"\n              ),\n              children: renderTab(item)\n            }, index);\n          })\n        })\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Tab.Panels, {\n        children\n      })\n    ]\n  });\n}\nfunction Tab(_a) {\n  var _b = _a, {\n    children\n  } = _b, props = __objRest(_b, [\n    \"children\"\n  ]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_headlessui_react__WEBPACK_IMPORTED_MODULE_14__.Tab.Panel, __spreadProps(__spreadValues({}, props), {\n    className: \"nx-rounded nx-pt-6\",\n    children\n  }));\n}\n\n// src/components/toc.tsx\n\n\n\n\nfunction TOC({ headings, filePath }) {\n  var _a;\n  const activeAnchor = useActiveAnchor();\n  const config = useConfig();\n  const tocRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const items = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => headings.filter((heading) => heading.depth > 1),\n    [headings]\n  );\n  const hasHeadings = items.length > 0;\n  const hasMetaInfo = Boolean(\n    config.feedback.content || config.editLink.component || config.toc.extraContent\n  );\n  const activeSlug = (_a = Object.entries(activeAnchor).find(\n    ([, { isActive }]) => isActive\n  )) == null ? void 0 : _a[0];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var _a2;\n    if (!activeSlug)\n      return;\n    const anchor = (_a2 = tocRef.current) == null ? void 0 : _a2.querySelector(\n      `li > a[href=\"#${activeSlug}\"]`\n    );\n    if (anchor) {\n      (0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(anchor, {\n        behavior: \"smooth\",\n        block: \"center\",\n        inline: \"center\",\n        scrollMode: \"always\",\n        boundary: tocRef.current\n      });\n    }\n  }, [activeSlug]);\n  const linkClassName = clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n    \"nx-text-xs nx-font-medium nx-text-gray-500 hover:nx-text-gray-900 dark:nx-text-gray-400 dark:hover:nx-text-gray-100\",\n    \"contrast-more:nx-text-gray-800 contrast-more:dark:nx-text-gray-50\"\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n    ref: tocRef,\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nextra-scrollbar nx-sticky nx-top-16 nx-overflow-y-auto nx-pr-4 nx-pt-6 nx-text-sm [hyphens:auto]\",\n      \"nx-max-h-[calc(100vh-var(--nextra-navbar-height)-env(safe-area-inset-bottom))] ltr:-nx-mr-4 rtl:-nx-ml-4\"\n    ),\n    children: [\n      hasHeadings && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", {\n            className: \"nx-mb-4 nx-font-semibold nx-tracking-tight\",\n            children: renderComponent(config.toc.title)\n          }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"ul\", {\n            children: items.map(({ id, value, depth }) => {\n              var _a2;\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"li\", {\n                className: \"nx-my-2 nx-scroll-my-6 nx-scroll-py-6\",\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"a\", {\n                  href: `#${id}`,\n                  className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n                    {\n                      2: \"nx-font-semibold\",\n                      3: \"ltr:nx-ml-4 rtl:nx-mr-4\",\n                      4: \"ltr:nx-ml-8 rtl:nx-mr-8\",\n                      5: \"ltr:nx-ml-12 rtl:nx-mr-12\",\n                      6: \"ltr:nx-ml-16 rtl:nx-mr-16\"\n                    }[depth],\n                    \"nx-inline-block\",\n                    ((_a2 = activeAnchor[id]) == null ? void 0 : _a2.isActive) ? \"nx-text-primary-600 nx-subpixel-antialiased contrast-more:!nx-text-primary-600\" : \"nx-text-gray-500 hover:nx-text-gray-900 dark:nx-text-gray-400 dark:hover:nx-text-gray-300\",\n                    \"contrast-more:nx-text-gray-900 contrast-more:nx-underline contrast-more:dark:nx-text-gray-50\"\n                  ),\n                  children: value\n                })\n              }, id);\n            })\n          })\n        ]\n      }),\n      hasMetaInfo && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          hasHeadings && \"nx-mt-8 nx-border-t nx-bg-white nx-pt-8 nx-shadow-[0_-12px_16px_white] dark:nx-bg-dark dark:nx-shadow-[0_-12px_16px_#111]\",\n          \"nx-sticky nx-bottom-0 nx-flex nx-flex-col nx-items-start nx-gap-2 nx-pb-8 dark:nx-border-neutral-800\",\n          \"contrast-more:nx-border-t contrast-more:nx-border-neutral-400 contrast-more:nx-shadow-none contrast-more:dark:nx-border-neutral-400\"\n        ),\n        children: [\n          config.feedback.content ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n            className: linkClassName,\n            href: config.feedback.useLink(),\n            newWindow: true,\n            children: renderComponent(config.feedback.content)\n          }) : null,\n          renderComponent(config.editLink.component, {\n            filePath,\n            className: linkClassName,\n            children: renderComponent(config.editLink.text)\n          }),\n          renderComponent(config.toc.extraContent)\n        ]\n      })\n    ]\n  });\n}\n\n// src/constants.tsx\n\n\n// src/components/match-sorter-search.tsx\n\n\n\nfunction MatchSorterSearch({\n  className,\n  directories\n}) {\n  const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const results = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => search ? (0,match_sorter__WEBPACK_IMPORTED_MODULE_20__.matchSorter)(directories, search, { keys: [\"title\"] }).map(\n      ({ route, title }) => ({\n        id: route + title,\n        route,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HighlightMatches, {\n          value: title,\n          match: search\n        })\n      })\n    ) : [],\n    [search, directories]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Search, {\n    value: search,\n    onChange: setSearch,\n    className,\n    overlayClassName: \"nx-w-full\",\n    results\n  });\n}\n\n// src/constants.tsx\n\n\nvar DEFAULT_LOCALE = \"en-US\";\nvar IS_BROWSER = typeof window !== \"undefined\";\nfunction isReactNode(value) {\n  return value == null || isString(value) || isFunction(value) || (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(value);\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\nvar i18nSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.array(\n  zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    direction: zod__WEBPACK_IMPORTED_MODULE_21__.z[\"enum\"]([\"ltr\", \"rtl\"]).optional(),\n    locale: zod__WEBPACK_IMPORTED_MODULE_21__.z.string(),\n    text: zod__WEBPACK_IMPORTED_MODULE_21__.z.string()\n  })\n);\nvar reactNode = [\n  isReactNode,\n  { message: \"Must be React.ReactNode or React.FC\" }\n];\nvar fc = [isFunction, { message: \"Must be React.FC\" }];\nvar themeSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n  banner: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    dismissible: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n    key: zod__WEBPACK_IMPORTED_MODULE_21__.z.string(),\n    text: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode).optional()\n  }),\n  chat: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    icon: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    link: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().startsWith(\"https://\").optional()\n  }),\n  components: zod__WEBPACK_IMPORTED_MODULE_21__.z.record(zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...fc)).optional(),\n  darkMode: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  direction: zod__WEBPACK_IMPORTED_MODULE_21__.z[\"enum\"]([\"ltr\", \"rtl\"]),\n  docsRepositoryBase: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().startsWith(\"https://\"),\n  editLink: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    component: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...fc),\n    text: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode)\n  }),\n  faviconGlyph: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().optional(),\n  feedback: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    content: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    labels: zod__WEBPACK_IMPORTED_MODULE_21__.z.string(),\n    useLink: zod__WEBPACK_IMPORTED_MODULE_21__.z[\"function\"]().returns(zod__WEBPACK_IMPORTED_MODULE_21__.z.string())\n  }),\n  footer: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    component: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    text: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode)\n  }),\n  gitTimestamp: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n  head: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n  i18n: i18nSchema,\n  logo: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n  logoLink: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean().or(zod__WEBPACK_IMPORTED_MODULE_21__.z.string()),\n  main: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...fc).optional(),\n  navbar: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    component: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    extraContent: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode).optional()\n  }),\n  navigation: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean().or(\n    zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n      next: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n      prev: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean()\n    })\n  ),\n  nextThemes: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    defaultTheme: zod__WEBPACK_IMPORTED_MODULE_21__.z.string(),\n    forcedTheme: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().optional(),\n    storageKey: zod__WEBPACK_IMPORTED_MODULE_21__.z.string()\n  }),\n  notFound: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    content: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    labels: zod__WEBPACK_IMPORTED_MODULE_21__.z.string()\n  }),\n  primaryHue: zod__WEBPACK_IMPORTED_MODULE_21__.z.number().or(\n    zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n      dark: zod__WEBPACK_IMPORTED_MODULE_21__.z.number(),\n      light: zod__WEBPACK_IMPORTED_MODULE_21__.z.number()\n    })\n  ),\n  project: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    icon: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    link: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().startsWith(\"https://\").optional()\n  }),\n  search: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    component: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    emptyResult: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    error: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().or(zod__WEBPACK_IMPORTED_MODULE_21__.z[\"function\"]().returns(zod__WEBPACK_IMPORTED_MODULE_21__.z.string())),\n    loading: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().or(zod__WEBPACK_IMPORTED_MODULE_21__.z[\"function\"]().returns(zod__WEBPACK_IMPORTED_MODULE_21__.z.string())),\n    placeholder: zod__WEBPACK_IMPORTED_MODULE_21__.z.string().or(zod__WEBPACK_IMPORTED_MODULE_21__.z[\"function\"]().returns(zod__WEBPACK_IMPORTED_MODULE_21__.z.string()))\n  }),\n  serverSideError: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    content: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    labels: zod__WEBPACK_IMPORTED_MODULE_21__.z.string()\n  }),\n  sidebar: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    defaultMenuCollapseLevel: zod__WEBPACK_IMPORTED_MODULE_21__.z.number().min(1).int(),\n    titleComponent: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    toggleButton: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean()\n  }),\n  toc: zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n    component: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    extraContent: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode),\n    float: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n    title: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(...reactNode)\n  }),\n  useNextSeoProps: zod__WEBPACK_IMPORTED_MODULE_21__.z.custom(isFunction)\n});\nvar publicThemeSchema = themeSchema.deepPartial().extend({\n  i18n: i18nSchema.optional()\n});\nvar DEFAULT_THEME = {\n  banner: {\n    dismissible: true,\n    key: \"nextra-banner\"\n  },\n  chat: {\n    icon: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.DiscordIcon, {}),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n          className: \"nx-sr-only\",\n          children: \"Discord\"\n        })\n      ]\n    })\n  },\n  darkMode: true,\n  direction: \"ltr\",\n  docsRepositoryBase: \"https://github.com/shuding/nextra\",\n  editLink: {\n    component: function EditLink({ className, filePath, children }) {\n      const editUrl = useGitEditUrl(filePath);\n      if (!editUrl) {\n        return null;\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, {\n        className,\n        href: editUrl,\n        children\n      });\n    },\n    text: \"Edit this page\"\n  },\n  feedback: {\n    content: \"Question? Give us feedback \\u2192\",\n    labels: \"feedback\",\n    useLink() {\n      const config = useConfig();\n      return getGitIssueUrl({\n        labels: config.feedback.labels,\n        repository: config.docsRepositoryBase,\n        title: `Feedback for \\u201C${config.title}\\u201D`\n      });\n    }\n  },\n  footer: {\n    component: Footer,\n    text: `MIT ${new Date().getFullYear()} \\xA9 Nextra.`\n  },\n  gitTimestamp: function useGitTimestamp({ timestamp }) {\n    const { locale = DEFAULT_LOCALE } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n      children: [\n        \"Last updated on\",\n        \" \",\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"time\", {\n          dateTime: timestamp.toISOString(),\n          children: timestamp.toLocaleDateString(locale, {\n            day: \"numeric\",\n            month: \"long\",\n            year: \"numeric\"\n          })\n        })\n      ]\n    });\n  },\n  head: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        name: \"msapplication-TileColor\",\n        content: \"#fff\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        httpEquiv: \"Content-Language\",\n        content: \"en\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        name: \"description\",\n        content: \"Nextra: the next docs builder\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        name: \"twitter:card\",\n        content: \"summary_large_image\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        name: \"twitter:site\",\n        content: \"@shuding_\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        property: \"og:title\",\n        content: \"Nextra: the next docs builder\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        property: \"og:description\",\n        content: \"Nextra: the next docs builder\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"meta\", {\n        name: \"apple-mobile-web-app-title\",\n        content: \"Nextra\"\n      })\n    ]\n  }),\n  i18n: [],\n  logo: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n        className: \"nx-font-extrabold\",\n        children: \"Nextra\"\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n        className: \"nx-ml-2 nx-hidden nx-font-normal nx-text-gray-600 md:nx-inline\",\n        children: \"The Next Docs Builder\"\n      })\n    ]\n  }),\n  logoLink: true,\n  navbar: {\n    component: Navbar\n  },\n  navigation: true,\n  nextThemes: {\n    defaultTheme: \"system\",\n    storageKey: \"theme\"\n  },\n  notFound: {\n    content: \"Submit an issue about broken link \\u2192\",\n    labels: \"bug\"\n  },\n  primaryHue: {\n    dark: 204,\n    light: 212\n  },\n  project: {\n    icon: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_icons__WEBPACK_IMPORTED_MODULE_10__.GitHubIcon, {}),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n          className: \"nx-sr-only\",\n          children: \"GitHub\"\n        })\n      ]\n    })\n  },\n  search: {\n    component: function Search2({ className, directories }) {\n      const config = useConfig();\n      return config.flexsearch ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Flexsearch, {\n        className\n      }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(MatchSorterSearch, {\n        className,\n        directories\n      });\n    },\n    emptyResult: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n      className: \"nx-block nx-select-none nx-p-8 nx-text-center nx-text-sm nx-text-gray-400\",\n      children: \"No results found.\"\n    }),\n    error: \"Failed to load search index.\",\n    loading: function useLoading() {\n      const { locale } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n      if (locale === \"zh-CN\")\n        return \"\\u6B63\\u5728\\u52A0\\u8F7D\\u2026\";\n      if (locale === \"ru\")\n        return \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\\u2026\";\n      if (locale === \"fr\")\n        return \"\\u0421hargement\\u2026\";\n      return \"Loading\\u2026\";\n    },\n    placeholder: function usePlaceholder() {\n      const { locale } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n      if (locale === \"zh-CN\")\n        return \"\\u641C\\u7D22\\u6587\\u6863\\u2026\";\n      if (locale === \"ru\")\n        return \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\\u0446\\u0438\\u0438\\u2026\";\n      if (locale === \"fr\")\n        return \"Rechercher de la documentation\\u2026\";\n      return \"Search documentation\\u2026\";\n    }\n  },\n  serverSideError: {\n    content: \"Submit an issue about error in url \\u2192\",\n    labels: \"bug\"\n  },\n  sidebar: {\n    defaultMenuCollapseLevel: 2,\n    titleComponent: ({ title }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n      children: title\n    }),\n    toggleButton: false\n  },\n  toc: {\n    component: TOC,\n    float: true,\n    title: \"On This Page\"\n  },\n  useNextSeoProps: () => ({ titleTemplate: \"%s \\u2013 Nextra\" })\n};\nvar DEEP_OBJECT_KEYS = Object.entries(DEFAULT_THEME).map(([key, value]) => {\n  const isObject = value && typeof value === \"object\" && !Array.isArray(value) && !(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(value);\n  if (isObject) {\n    return key;\n  }\n}).filter(Boolean);\nvar pageThemeSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n  breadcrumb: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  collapsed: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  footer: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  layout: zod__WEBPACK_IMPORTED_MODULE_21__.z[\"enum\"]([\"default\", \"full\", \"raw\"]),\n  navbar: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  pagination: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  sidebar: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  timestamp: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  toc: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  typesetting: zod__WEBPACK_IMPORTED_MODULE_21__.z[\"enum\"]([\"default\", \"article\"])\n});\nvar DEFAULT_PAGE_THEME = {\n  breadcrumb: true,\n  collapsed: false,\n  footer: true,\n  layout: \"default\",\n  navbar: true,\n  pagination: true,\n  sidebar: true,\n  timestamp: true,\n  toc: true,\n  typesetting: \"default\"\n};\nvar displaySchema = zod__WEBPACK_IMPORTED_MODULE_21__.z[\"enum\"]([\"normal\", \"hidden\", \"children\"]);\nvar titleSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.string();\nvar linkItemSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n  href: zod__WEBPACK_IMPORTED_MODULE_21__.z.string(),\n  newWindow: zod__WEBPACK_IMPORTED_MODULE_21__.z.boolean(),\n  title: titleSchema\n});\nvar menuItemSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n  display: displaySchema.optional(),\n  items: zod__WEBPACK_IMPORTED_MODULE_21__.z.record(linkItemSchema.partial({ href: true, newWindow: true })),\n  title: titleSchema,\n  type: zod__WEBPACK_IMPORTED_MODULE_21__.z.literal(\"menu\")\n});\nvar separatorItemSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.strictObject({\n  title: titleSchema,\n  type: zod__WEBPACK_IMPORTED_MODULE_21__.z.literal(\"separator\")\n});\nvar itemSchema = linkItemSchema.extend({\n  display: displaySchema,\n  theme: pageThemeSchema,\n  title: titleSchema,\n  type: zod__WEBPACK_IMPORTED_MODULE_21__.z[\"enum\"]([\"page\", \"doc\"])\n}).deepPartial();\nvar metaSchema = zod__WEBPACK_IMPORTED_MODULE_21__.z.string().or(menuItemSchema).or(separatorItemSchema).or(itemSchema);\nvar ERROR_ROUTES = /* @__PURE__ */ new Set([\"/404\", \"/500\"]);\n\n// src/polyfill.ts\nif (IS_BROWSER) {\n  let resizeTimer;\n  const addResizingClass = () => {\n    document.body.classList.add(\"resizing\");\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(() => {\n      document.body.classList.remove(\"resizing\");\n    }, 200);\n  };\n  window.addEventListener(\"resize\", addResizingClass);\n}\n\n// src/mdx-components.tsx\n\n\n\n\n\nvar observer;\nvar setActiveAnchor;\nvar slugs = /* @__PURE__ */ new WeakMap();\nif (IS_BROWSER) {\n  observer || (observer = new IntersectionObserver(\n    (entries) => {\n      setActiveAnchor((f) => {\n        const ret = __spreadValues({}, f);\n        for (const entry of entries) {\n          if ((entry == null ? void 0 : entry.rootBounds) && slugs.has(entry.target)) {\n            const [slug, index] = slugs.get(entry.target);\n            const aboveHalfViewport = entry.boundingClientRect.y + entry.boundingClientRect.height <= entry.rootBounds.y + entry.rootBounds.height;\n            const insideHalfViewport = entry.intersectionRatio > 0;\n            ret[slug] = {\n              index,\n              aboveHalfViewport,\n              insideHalfViewport\n            };\n          }\n        }\n        let activeSlug = \"\";\n        let smallestIndexInViewport = Infinity;\n        let largestIndexAboveViewport = -1;\n        for (const s in ret) {\n          ret[s].isActive = false;\n          if (ret[s].insideHalfViewport && ret[s].index < smallestIndexInViewport) {\n            smallestIndexInViewport = ret[s].index;\n            activeSlug = s;\n          }\n          if (smallestIndexInViewport === Infinity && ret[s].aboveHalfViewport && ret[s].index > largestIndexAboveViewport) {\n            largestIndexAboveViewport = ret[s].index;\n            activeSlug = s;\n          }\n        }\n        if (ret[activeSlug])\n          ret[activeSlug].isActive = true;\n        return ret;\n      });\n    },\n    {\n      rootMargin: \"0px 0px -50%\",\n      threshold: [0, 1]\n    }\n  ));\n}\nfunction HeadingLink(_a) {\n  var _b = _a, {\n    tag: Tag,\n    context,\n    children,\n    id\n  } = _b, props = __objRest(_b, [\n    \"tag\",\n    \"context\",\n    \"children\",\n    \"id\"\n  ]);\n  setActiveAnchor != null ? setActiveAnchor : setActiveAnchor = useSetActiveAnchor();\n  const obRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!id)\n      return;\n    const heading = obRef.current;\n    if (!heading)\n      return;\n    slugs.set(heading, [id, context.index += 1]);\n    observer.observe(heading);\n    return () => {\n      observer.disconnect();\n      slugs.delete(heading);\n      setActiveAnchor((f) => {\n        const ret = __spreadValues({}, f);\n        delete ret[id];\n        return ret;\n      });\n    };\n  }, [id, context]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Tag, __spreadProps(__spreadValues({\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nx-font-semibold nx-tracking-tight nx-text-slate-900 dark:nx-text-slate-100\",\n      {\n        h2: \"nx-mt-10 nx-border-b nx-pb-1 nx-text-3xl nx-border-neutral-200/70 contrast-more:nx-border-neutral-400 dark:nx-border-primary-100/10 contrast-more:dark:nx-border-neutral-400\",\n        h3: \"nx-mt-8 nx-text-2xl\",\n        h4: \"nx-mt-8 nx-text-xl\",\n        h5: \"nx-mt-8 nx-text-lg\",\n        h6: \"nx-mt-8 nx-text-base\"\n      }[Tag]\n    )\n  }, props), {\n    children: [\n      children,\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", {\n        className: \"nx-absolute -nx-mt-20\",\n        id,\n        ref: obRef\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"a\", {\n        href: `#${id}`,\n        className: \"subheading-anchor\",\n        \"aria-label\": \"Permalink for this section\"\n      })\n    ]\n  }));\n}\nvar findSummary = (children) => {\n  let summary = null;\n  const restChildren = [];\n  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, (child, index) => {\n    var _a;\n    if (child && child.type === Summary) {\n      summary || (summary = child);\n      return;\n    }\n    let c = child;\n    if (!summary && child && typeof child === \"object\" && child.type !== Details && \"props\" in child && child.props) {\n      const result = findSummary(child.props.children);\n      summary = result[0];\n      c = (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, __spreadProps(__spreadValues({}, child.props), {\n        children: ((_a = result[1]) == null ? void 0 : _a.length) ? result[1] : void 0,\n        key: index\n      }));\n    }\n    restChildren.push(c);\n  });\n  return [summary, restChildren];\n};\nvar Details = (_a) => {\n  var _b = _a, {\n    children,\n    open\n  } = _b, props = __objRest(_b, [\n    \"children\",\n    \"open\"\n  ]);\n  const [openState, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!open);\n  const [summary, restChildren] = findSummary(children);\n  const [delayedOpenState, setDelayedOpenState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(openState);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (openState) {\n      setDelayedOpenState(true);\n    } else {\n      const timeout = setTimeout(() => setDelayedOpenState(openState), 500);\n      return () => clearTimeout(timeout);\n    }\n  }, [openState]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"details\", __spreadProps(__spreadValues(__spreadProps(__spreadValues({\n    className: \"nx-my-4 nx-rounded nx-border nx-border-gray-200 nx-bg-white nx-p-2 nx-shadow-sm first:nx-mt-0 dark:nx-border-neutral-800 dark:nx-bg-neutral-900\"\n  }, props), {\n    open: delayedOpenState\n  }), openState && { \"data-expanded\": true }), {\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(DetailsProvider, {\n        value: setOpen,\n        children: summary\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Collapse, {\n        isOpen: openState,\n        children: restChildren\n      })\n    ]\n  }));\n};\nvar Summary = (props) => {\n  const setOpen = useDetails();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"summary\", __spreadProps(__spreadValues({\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      \"nx-cursor-pointer nx-list-none nx-p-1 nx-transition-colors hover:nx-bg-gray-100 dark:hover:nx-bg-neutral-800\",\n      \"before:nx-mr-1 before:nx-inline-block before:nx-transition-transform before:nx-content-[''] dark:before:nx-invert\",\n      \"rtl:before:nx-rotate-180 [[data-expanded]>&]:before:nx-rotate-90\"\n    )\n  }, props), {\n    onClick: (e) => {\n      e.preventDefault();\n      setOpen((v) => !v);\n    }\n  }));\n};\nvar A = (_a) => {\n  var _b = _a, { href = \"\" } = _b, props = __objRest(_b, [\"href\"]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Anchor, __spreadValues({\n    href,\n    newWindow: href.startsWith(\"https://\")\n  }, props));\n};\nvar getComponents = ({\n  isRawLayout,\n  components\n}) => {\n  if (isRawLayout) {\n    return { a: A };\n  }\n  const context = { index: 0 };\n  return __spreadValues({\n    h1: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"h1\", __spreadValues({\n      className: \"nx-mt-2 nx-text-4xl nx-font-bold nx-tracking-tight nx-text-slate-900 dark:nx-text-slate-100\"\n    }, props)),\n    h2: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HeadingLink, __spreadValues({\n      tag: \"h2\",\n      context\n    }, props)),\n    h3: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HeadingLink, __spreadValues({\n      tag: \"h3\",\n      context\n    }, props)),\n    h4: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HeadingLink, __spreadValues({\n      tag: \"h4\",\n      context\n    }, props)),\n    h5: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HeadingLink, __spreadValues({\n      tag: \"h5\",\n      context\n    }, props)),\n    h6: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(HeadingLink, __spreadValues({\n      tag: \"h6\",\n      context\n    }, props)),\n    ul: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"ul\", __spreadValues({\n      className: \"nx-mt-6 nx-list-disc first:nx-mt-0 ltr:nx-ml-6 rtl:nx-mr-6\"\n    }, props)),\n    ol: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"ol\", __spreadValues({\n      className: \"nx-mt-6 nx-list-decimal first:nx-mt-0 ltr:nx-ml-6 rtl:nx-mr-6\"\n    }, props)),\n    li: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"li\", __spreadValues({\n      className: \"nx-my-2\"\n    }, props)),\n    blockquote: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"blockquote\", __spreadValues({\n      className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n        \"nx-mt-6 nx-border-gray-300 nx-italic nx-text-gray-700 dark:nx-border-gray-700 dark:nx-text-gray-400\",\n        \"first:nx-mt-0 ltr:nx-border-l-2 ltr:nx-pl-6 rtl:nx-border-r-2 rtl:nx-pr-6\"\n      )\n    }, props)),\n    hr: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"hr\", __spreadValues({\n      className: \"nx-my-8 dark:nx-border-gray-900\"\n    }, props)),\n    a: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(A, __spreadProps(__spreadValues({}, props), {\n      className: \"nx-text-primary-600 nx-underline nx-decoration-from-font [text-underline-position:from-font]\"\n    })),\n    table: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_components__WEBPACK_IMPORTED_MODULE_23__.Table, __spreadValues({\n      className: \"nextra-scrollbar nx-mt-6 nx-p-0 first:nx-mt-0\"\n    }, props)),\n    p: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", __spreadValues({\n      className: \"nx-mt-6 nx-leading-7 first:nx-mt-0\"\n    }, props)),\n    tr: nextra_components__WEBPACK_IMPORTED_MODULE_23__.Tr,\n    th: nextra_components__WEBPACK_IMPORTED_MODULE_23__.Th,\n    td: nextra_components__WEBPACK_IMPORTED_MODULE_23__.Td,\n    details: Details,\n    summary: Summary,\n    pre: nextra_components__WEBPACK_IMPORTED_MODULE_23__.Pre,\n    code: nextra_components__WEBPACK_IMPORTED_MODULE_23__.Code\n  }, components);\n};\n\n// src/index.tsx\n\n\n\nvar classes5 = {\n  toc: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nextra-toc nx-order-last nx-hidden nx-w-64 nx-shrink-0 xl:nx-block\"),\n  main: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\"nx-w-full nx-overflow-x-hidden nx-break-words\")\n};\nvar Body = ({\n  themeContext,\n  breadcrumb,\n  timestamp,\n  navigation,\n  children\n}) => {\n  var _a;\n  const config = useConfig();\n  const mounted = (0,nextra_hooks__WEBPACK_IMPORTED_MODULE_5__.useMounted)();\n  if (themeContext.layout === \"raw\") {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n      className: classes5.main,\n      children\n    });\n  }\n  const date = themeContext.timestamp && config.gitTimestamp && timestamp ? new Date(timestamp) : null;\n  const gitTimestampEl = mounted && date ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    className: \"nx-mt-12 nx-mb-8 nx-block nx-text-xs nx-text-gray-500 ltr:nx-text-right rtl:nx-text-left dark:nx-text-gray-400\",\n    children: renderComponent(config.gitTimestamp, { timestamp: date })\n  }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n    className: \"nx-mt-16\"\n  });\n  const content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: [\n      children,\n      gitTimestampEl,\n      navigation\n    ]\n  });\n  const body = ((_a = config.main) == null ? void 0 : _a.call(config, { children: content })) || content;\n  if (themeContext.layout === \"full\") {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"article\", {\n      className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n        classes5.main,\n        \"nextra-content nx-min-h-[calc(100vh-var(--nextra-navbar-height))] nx-pl-[max(env(safe-area-inset-left),1.5rem)] nx-pr-[max(env(safe-area-inset-right),1.5rem)]\"\n      ),\n      children: body\n    });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"article\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n      classes5.main,\n      \"nextra-content nx-flex nx-min-h-[calc(100vh-var(--nextra-navbar-height))] nx-min-w-0 nx-justify-center nx-pb-8 nx-pr-[calc(env(safe-area-inset-right)-1.5rem)]\",\n      themeContext.typesetting === \"article\" && \"nextra-body-typesetting-article\"\n    ),\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"main\", {\n      className: \"nx-w-full nx-min-w-0 nx-max-w-6xl nx-px-6 nx-pt-4 md:nx-px-12\",\n      children: [\n        breadcrumb,\n        body\n      ]\n    })\n  });\n};\nvar InnerLayout = ({\n  filePath,\n  pageMap,\n  frontMatter,\n  headings,\n  timestamp,\n  children\n}) => {\n  const config = useConfig();\n  const { locale = DEFAULT_LOCALE, defaultLocale } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const fsPath = useFSRoute();\n  const {\n    activeType,\n    activeIndex,\n    activeThemeContext,\n    activePath,\n    topLevelNavbarItems,\n    docsDirectories,\n    flatDirectories,\n    flatDocsDirectories,\n    directories\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => normalizePages({\n      list: pageMap,\n      locale,\n      defaultLocale,\n      route: fsPath\n    }),\n    [pageMap, locale, defaultLocale, fsPath]\n  );\n  const themeContext = __spreadValues(__spreadValues({}, activeThemeContext), frontMatter);\n  const hideSidebar = !themeContext.sidebar || themeContext.layout === \"raw\" || activeType === \"page\";\n  const tocEl = activeType === \"page\" || !themeContext.toc || themeContext.layout !== \"default\" ? themeContext.layout !== \"full\" && themeContext.layout !== \"raw\" && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"nav\", {\n    className: classes5.toc,\n    \"aria-label\": \"table of contents\"\n  }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"nav\", {\n    className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(classes5.toc, \"nx-px-4\"),\n    \"aria-label\": \"table of contents\",\n    children: renderComponent(config.toc.component, {\n      headings: config.toc.float ? headings : [],\n      filePath\n    })\n  });\n  const localeConfig = config.i18n.find((l) => l.locale === locale);\n  const isRTL = localeConfig ? localeConfig.direction === \"rtl\" : config.direction === \"rtl\";\n  const direction = isRTL ? \"rtl\" : \"ltr\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(\"div\", {\n    dir: direction,\n    children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: `document.documentElement.setAttribute('dir','${direction}')`\n        }\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Head, {}),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Banner, {}),\n      themeContext.navbar && renderComponent(config.navbar.component, {\n        flatDirectories,\n        items: topLevelNavbarItems\n      }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", {\n        className: clsx__WEBPACK_IMPORTED_MODULE_3___default()(\n          \"nx-mx-auto nx-flex\",\n          themeContext.layout !== \"raw\" && \"nx-max-w-[90rem]\"\n        ),\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(ActiveAnchorProvider, {\n          children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Sidebar, {\n              docsDirectories,\n              flatDirectories,\n              fullDirectories: directories,\n              headings,\n              asPopover: hideSidebar,\n              includePlaceholder: themeContext.layout === \"default\"\n            }),\n            tocEl,\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(SkipNavContent, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Body, {\n              themeContext,\n              breadcrumb: activeType !== \"page\" && themeContext.breadcrumb ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Breadcrumb, {\n                activePath\n              }) : null,\n              timestamp,\n              navigation: activeType !== \"page\" && themeContext.pagination ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(NavLinks, {\n                flatDirectories: flatDocsDirectories,\n                currentIndex: activeIndex\n              }) : null,\n              children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(nextra_mdx__WEBPACK_IMPORTED_MODULE_4__.MDXProvider, {\n                components: getComponents({\n                  isRawLayout: themeContext.layout === \"raw\",\n                  components: config.components\n                }),\n                children\n              })\n            })\n          ]\n        })\n      }),\n      themeContext.footer && renderComponent(config.footer.component, { menu: hideSidebar })\n    ]\n  });\n};\nfunction Layout(_a) {\n  var _b = _a, {\n    children\n  } = _b, context = __objRest(_b, [\n    \"children\"\n  ]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ConfigProvider, {\n    value: context,\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(InnerLayout, __spreadProps(__spreadValues({}, context.pageOpts), {\n      children\n    }))\n  });\n}\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/nextra-theme-docs/dist/index.js\n");

/***/ }),

/***/ "@popperjs/core":
/*!*********************************!*\
  !*** external "@popperjs/core" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@popperjs/core");

/***/ }),

/***/ "clsx":
/*!***********************!*\
  !*** external "clsx" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("clsx");

/***/ }),

/***/ "flexsearch":
/*!*****************************!*\
  !*** external "flexsearch" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("flexsearch");

/***/ }),

/***/ "focus-visible":
/*!********************************!*\
  !*** external "focus-visible" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("focus-visible");

/***/ }),

/***/ "git-url-parse":
/*!********************************!*\
  !*** external "git-url-parse" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("git-url-parse");

/***/ }),

/***/ "intersection-observer":
/*!****************************************!*\
  !*** external "intersection-observer" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("intersection-observer");

/***/ }),

/***/ "match-sorter":
/*!*******************************!*\
  !*** external "match-sorter" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("match-sorter");

/***/ }),

/***/ "next-seo":
/*!***************************!*\
  !*** external "next-seo" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-seo");

/***/ }),

/***/ "next-themes":
/*!******************************!*\
  !*** external "next-themes" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-themes");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "./amp-context":
/*!******************************************************!*\
  !*** external "next/dist/shared/lib/amp-context.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/amp-context.js");

/***/ }),

/***/ "./amp-mode":
/*!***************************************************!*\
  !*** external "next/dist/shared/lib/amp-mode.js" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/amp-mode.js");

/***/ }),

/***/ "../shared/lib/app-router-context":
/*!*************************************************************!*\
  !*** external "next/dist/shared/lib/app-router-context.js" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/app-router-context.js");

/***/ }),

/***/ "./head-manager-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/head-manager-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../shared/lib/image-blur-svg":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/image-blur-svg.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-blur-svg.js");

/***/ }),

/***/ "../shared/lib/image-config-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/image-config-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config-context.js");

/***/ }),

/***/ "../shared/lib/image-config":
/*!*******************************************************!*\
  !*** external "next/dist/shared/lib/image-config.js" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config.js");

/***/ }),

/***/ "next/dist/shared/lib/image-loader":
/*!****************************************************!*\
  !*** external "next/dist/shared/lib/image-loader" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-loader");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../page-path/denormalize-page-path":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/page-path/denormalize-page-path.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/add-path-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/add-path-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix.js");

/***/ }),

/***/ "./utils/compare-states":
/*!**********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/compare-states.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/compare-states.js");

/***/ }),

/***/ "./utils/format-next-pathname-info":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-next-pathname-info.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-next-pathname-info.js");

/***/ }),

/***/ "../shared/lib/router/utils/format-url":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-next-pathname-info":
/*!******************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-next-pathname-info.js" ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-next-pathname-info.js");

/***/ }),

/***/ "./utils/is-bot":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot.js" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "../shared/lib/router/utils/parse-path":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-path.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-path.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/path-has-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/path-has-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/path-has-prefix.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "../shared/lib/router/utils/remove-trailing-slash":
/*!*****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/remove-trailing-slash.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "./side-effect":
/*!******************************************************!*\
  !*** external "next/dist/shared/lib/side-effect.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/side-effect.js");

/***/ }),

/***/ "../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "./utils/warn-once":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/utils/warn-once.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils/warn-once.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "@headlessui/react":
/*!************************************!*\
  !*** external "@headlessui/react" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@headlessui/react");;

/***/ }),

/***/ "nextra/components":
/*!************************************!*\
  !*** external "nextra/components" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = import("nextra/components");;

/***/ }),

/***/ "nextra/hooks":
/*!*******************************!*\
  !*** external "nextra/hooks" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = import("nextra/hooks");;

/***/ }),

/***/ "nextra/icons":
/*!*******************************!*\
  !*** external "nextra/icons" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = import("nextra/icons");;

/***/ }),

/***/ "nextra/layout":
/*!********************************!*\
  !*** external "nextra/layout" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = import("nextra/layout");;

/***/ }),

/***/ "nextra/mdx":
/*!*****************************!*\
  !*** external "nextra/mdx" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = import("nextra/mdx");;

/***/ }),

/***/ "nextra/setup-page":
/*!************************************!*\
  !*** external "nextra/setup-page" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = import("nextra/setup-page");;

/***/ }),

/***/ "scroll-into-view-if-needed":
/*!*********************************************!*\
  !*** external "scroll-into-view-if-needed" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("scroll-into-view-if-needed");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = import("zod");;

/***/ }),

/***/ "./node_modules/next/package.json":
/*!****************************************!*\
  !*** ./node_modules/next/package.json ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"next","version":"13.1.6","description":"The React Framework","main":"./dist/server/next.js","license":"MIT","repository":"vercel/next.js","bugs":"https://github.com/vercel/next.js/issues","homepage":"https://nextjs.org","types":"index.d.ts","files":["dist","app.js","app.d.ts","babel.js","babel.d.ts","client.js","client.d.ts","compat","config.js","config.d.ts","constants.js","constants.d.ts","document.js","document.d.ts","dynamic.js","dynamic.d.ts","error.js","error.d.ts","future","legacy","script.js","script.d.ts","server.js","server.d.ts","head.js","head.d.ts","image.js","image.d.ts","link.js","link.d.ts","router.js","router.d.ts","jest.js","jest.d.ts","amp.js","amp.d.ts","index.d.ts","types/index.d.ts","types/global.d.ts","types/compiled.d.ts","image-types/global.d.ts","font","navigation.js","navigation.d.ts","headers.js","headers.d.ts"],"bin":{"next":"./dist/bin/next"},"scripts":{"dev":"taskr","release":"taskr release","build":"pnpm release && pnpm types","prepublishOnly":"cd ../../ && turbo run build","types":"tsc --declaration --emitDeclarationOnly --declarationDir dist","typescript":"tsec --noEmit","ncc-compiled":"ncc cache clean && taskr ncc","test-pack":"cd ../../ && pnpm test-pack next"},"taskr":{"requires":["./taskfile-ncc.js","./taskfile-swc.js","./taskfile-watch.js"]},"dependencies":{"@next/env":"13.1.6","@swc/helpers":"0.4.14","caniuse-lite":"^1.0.30001406","postcss":"8.4.14","styled-jsx":"5.1.1"},"peerDependencies":{"fibers":">= 3.1.0","node-sass":"^6.0.0 || ^7.0.0","react":"^18.2.0","react-dom":"^18.2.0","sass":"^1.3.0"},"peerDependenciesMeta":{"node-sass":{"optional":true},"sass":{"optional":true},"fibers":{"optional":true}},"devDependencies":{"@ampproject/toolbox-optimizer":"2.8.3","@babel/code-frame":"7.12.11","@babel/core":"7.18.0","@babel/eslint-parser":"7.18.2","@babel/generator":"7.18.0","@babel/plugin-proposal-class-properties":"7.14.5","@babel/plugin-proposal-export-namespace-from":"7.14.5","@babel/plugin-proposal-numeric-separator":"7.14.5","@babel/plugin-proposal-object-rest-spread":"7.14.7","@babel/plugin-syntax-bigint":"7.8.3","@babel/plugin-syntax-dynamic-import":"7.8.3","@babel/plugin-syntax-import-assertions":"7.16.7","@babel/plugin-syntax-jsx":"7.14.5","@babel/plugin-transform-modules-commonjs":"7.18.0","@babel/plugin-transform-runtime":"7.18.0","@babel/preset-env":"7.18.0","@babel/preset-react":"7.14.5","@babel/preset-typescript":"7.17.12","@babel/runtime":"7.15.4","@babel/traverse":"7.18.0","@babel/types":"7.18.0","@edge-runtime/primitives":"2.0.0","@hapi/accept":"5.0.2","@napi-rs/cli":"2.13.3","@napi-rs/triples":"1.1.0","@next/polyfill-module":"13.1.6","@next/polyfill-nomodule":"13.1.6","@next/react-dev-overlay":"13.1.6","@next/react-refresh-utils":"13.1.6","@next/swc":"13.1.6","@segment/ajv-human-errors":"2.1.2","@taskr/clear":"1.1.0","@taskr/esnext":"1.1.0","@types/amphtml-validator":"1.0.0","@types/babel__code-frame":"7.0.2","@types/babel__core":"7.1.12","@types/babel__generator":"7.6.2","@types/babel__template":"7.4.0","@types/babel__traverse":"7.11.0","@types/bytes":"3.1.1","@types/ci-info":"2.0.0","@types/compression":"0.0.36","@types/content-disposition":"0.5.4","@types/content-type":"1.1.3","@types/cookie":"0.3.3","@types/cross-spawn":"6.0.0","@types/debug":"4.1.5","@types/fresh":"0.5.0","@types/glob":"7.1.1","@types/jsonwebtoken":"9.0.0","@types/lodash":"4.14.149","@types/lodash.curry":"4.1.6","@types/lru-cache":"5.1.0","@types/micromatch":"4.0.2","@types/node-fetch":"2.6.1","@types/path-to-regexp":"1.7.0","@types/platform":"1.3.4","@types/react":"16.9.17","@types/react-dom":"16.9.4","@types/react-is":"16.7.1","@types/semver":"7.3.1","@types/send":"0.14.4","@types/shell-quote":"1.7.1","@types/tar":"4.0.3","@types/text-table":"0.2.1","@types/ua-parser-js":"0.7.36","@types/uuid":"8.3.1","@types/webpack-sources1":"npm:@types/webpack-sources@0.1.5","@types/ws":"8.2.0","@vercel/ncc":"0.34.0","@vercel/nft":"0.22.6","acorn":"8.5.0","ajv":"8.11.0","amphtml-validator":"1.0.35","anser":"1.4.9","arg":"4.1.0","assert":"2.0.0","async-retry":"1.2.3","async-sema":"3.0.0","babel-plugin-transform-define":"2.0.0","babel-plugin-transform-react-remove-prop-types":"0.4.24","browserify-zlib":"0.2.0","browserslist":"4.20.2","buffer":"5.6.0","bytes":"3.1.1","chalk":"2.4.2","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cli-select":"1.1.2","client-only":"0.0.1","comment-json":"3.0.3","compression":"1.7.4","conf":"5.0.0","constants-browserify":"1.0.0","content-disposition":"0.5.3","content-type":"1.0.4","cookie":"0.4.1","cross-spawn":"6.0.5","crypto-browserify":"3.12.0","css.escape":"1.5.1","cssnano-simple":"3.0.1","data-uri-to-buffer":"3.0.1","debug":"4.1.1","devalue":"2.0.1","domain-browser":"4.19.0","edge-runtime":"2.0.0","events":"3.3.0","find-cache-dir":"3.3.1","find-up":"4.1.0","fresh":"0.5.2","get-orientation":"1.1.2","glob":"7.1.7","gzip-size":"5.1.1","http-proxy":"1.18.1","https-browserify":"1.0.0","icss-utils":"5.1.0","ignore-loader":"0.1.2","image-size":"1.0.0","is-docker":"2.0.0","is-wsl":"2.2.0","jest-worker":"27.0.0-next.5","json5":"2.2.3","jsonwebtoken":"9.0.0","loader-utils2":"npm:loader-utils@2.0.0","loader-utils3":"npm:loader-utils@3.1.3","lodash.curry":"4.1.1","lru-cache":"5.1.1","micromatch":"4.0.4","mini-css-extract-plugin":"2.4.3","nanoid":"3.1.32","native-url":"0.3.4","neo-async":"2.6.1","node-fetch":"2.6.7","node-html-parser":"5.3.3","ora":"4.0.4","os-browserify":"0.3.0","p-limit":"3.1.0","path-browserify":"1.0.1","path-to-regexp":"6.1.0","platform":"1.3.6","postcss-flexbugs-fixes":"5.0.2","postcss-modules-extract-imports":"3.0.0","postcss-modules-local-by-default":"4.0.0","postcss-modules-scope":"3.0.0","postcss-modules-values":"4.0.0","postcss-preset-env":"7.4.3","postcss-safe-parser":"6.0.0","postcss-scss":"4.0.3","postcss-value-parser":"4.2.0","process":"0.11.10","punycode":"2.1.1","querystring-es3":"0.2.1","raw-body":"2.4.1","react-is":"18.2.0","react-refresh":"0.12.0","regenerator-runtime":"0.13.4","sass-loader":"12.4.0","schema-utils2":"npm:schema-utils@2.7.1","schema-utils3":"npm:schema-utils@3.0.0","semver":"7.3.2","send":"0.17.1","server-only":"0.0.1","setimmediate":"1.0.5","shell-quote":"1.7.3","source-map":"0.6.1","stacktrace-parser":"0.1.10","stream-browserify":"3.0.0","stream-http":"3.1.1","string-hash":"1.1.3","string_decoder":"1.3.0","strip-ansi":"6.0.0","tar":"6.1.11","taskr":"1.1.0","terser":"5.14.1","text-table":"0.2.0","timers-browserify":"2.0.12","tty-browserify":"0.0.1","ua-parser-js":"0.7.28","undici":"5.14.0","unistore":"3.4.1","util":"0.12.4","uuid":"8.3.2","vm-browserify":"1.1.2","watchpack":"2.4.0","web-vitals":"3.0.0","webpack":"5.74.0","webpack-sources1":"npm:webpack-sources@1.4.3","webpack-sources3":"npm:webpack-sources@3.2.3","ws":"8.2.3"},"resolutions":{"browserslist":"4.20.2","caniuse-lite":"1.0.30001406"},"engines":{"node":">=14.6.0"},"optionalDependencies":{"@next/swc-android-arm-eabi":"13.1.6","@next/swc-android-arm64":"13.1.6","@next/swc-darwin-arm64":"13.1.6","@next/swc-darwin-x64":"13.1.6","@next/swc-freebsd-x64":"13.1.6","@next/swc-linux-arm-gnueabihf":"13.1.6","@next/swc-linux-arm64-gnu":"13.1.6","@next/swc-linux-arm64-musl":"13.1.6","@next/swc-linux-x64-gnu":"13.1.6","@next/swc-linux-x64-musl":"13.1.6","@next/swc-win32-arm64-msvc":"13.1.6","@next/swc-win32-ia32-msvc":"13.1.6","@next/swc-win32-x64-msvc":"13.1.6"}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/using-the-api.mdx"));
module.exports = __webpack_exports__;

})();